openapi: 3.1.0
info:
  version: '1.0'
  title: Addresses Introduction
  description: |
    The Addresses API allows you to organize customer addresses. Addresses are a sub-resource of a `customer`, a customer can have multiple addresses, such as home, work, and neighbour. 
    
    You can use a customer address with an [implicit](/docs/authentication/Tokens/implicit-token) Bearer token, which is recommended for client-side interactions. You can also use [client credentials](/docs/authentication/Tokens/client-credential-token) Bearer token, which is recommended for back-end interactions.
    
  contact:
    name: Elastic Path
    url: 'https://www.elasticpath.com'
    email: support@elasticpath.com
  license:
    url: 'https://elasticpath.dev'
    name: MIT
servers:
  - url: 'https://useast.api.elasticpath.com'
    description: US East
  - url: 'https://euwest.api.elasticpath.com'
    description: EU West
paths:
  '/v2/customers/{customerID}/addresses':
    get:
      tags:
        - Customer Addresses
      summary: Get Customer Addresses
      description: Get Customer Addresses
      operationId: get-v2-customer-addresses
      parameters:
        - name: customerID
          in: path
          description: The ID of the customer you want to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAddressResponse'
        '404':
          $ref: '#/components/schemas/ErrorNotFound'
      security:
        - BearerToken: []
  '/v2/customers/{customerID}/addresses/{addressID}':
    get:
      tags:
        - Customer Addresses
      summary: Get an Customer Address
      description: Get an Customer Addresses
      operationId: get-v2-customer-address
      parameters:
        - name: customerID
          in: path
          description: The ID of the customer you want to retrieve.
          required: true
          schema:
            type: string
        - name: addressID
          in: path
          description: The ID of the address you want to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/CustomerAddressResponse'
        '404':
          $ref: '#/components/schemas/ErrorNotFound'
      security:
        - BearerToken: []
    post:
      tags:
        - Customer Addresses
      summary: Create an Customer Address
      description: Create an Customer Address
      operationId: post-v2-customer-address
      parameters:
        - name: customerID
          in: path
          description: The ID of the customer you want to create an address for.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/CustomerAddressResponse'
        '400':
          $ref: '#/components/schemas/ErrorBadRequest'
        '404':
          $ref: '#/components/schemas/ErrorNotFound'
    put:
      tags:
        - Customer Addresses
      summary: Update an Customer Address
      description: Update an Customer Address
      operationId: put-v2-customer-address
      parameters:
        - name: customerID
          in: path
          description: The ID of the customer you want to create an address for.
          required: true
          schema:
            type: string
        - name: addressID
          in: path
          description: The ID of the customer you want to update.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/CustomerAddressResponse'
        '400':
          $ref: '#/components/schemas/ErrorBadRequest'
        '404':
          $ref: '#/components/schemas/ErrorNotFound'
      security:
        - BearerToken: []
    delete:
      tags:
        - Customer Addresses
      summary: Delete a Customer Address
      description: Delete a Customer Address
      operationId: delete-v2-customer-address
      parameters:
        - name: customerID
          in: path
          description: The ID of the customer that contains the address to delete.
          required: true
          schema:
            type: string
        - name: addressID
          in: path
          description: The ID of the address to delete.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/schemas/ErrorNotFound'
      security:
        - BearerToken: []
tags:
  - name: Customer Addresses
components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
  schemas:
    MetaTimestamps:
      type: object
      properties:
        timestamps:
          type: object
          properties:
            created_at:
              description: The date the address is created.
              type: string
              example: 2021-02-23T09:40:33.882Z
            updated_at:
              description: The date the address is updated.
              type: string
              example: 2021-02-23T09:40:33.882Z
    Address:
      properties:
        type:
          type: string
          description: Specifies the the type of object. Set this value to `address`.
          default: address
        first_name:
          type: string
          description: The first name of the recipient on this address.
          example: Ron
        last_name:
          type: string
          description: The last name of the recipient on this address.
          example: Swanson
        name:
          type: string
          description: The name for the address saved, such as `home`, `work` or `wifeâ€™s office`.
          example: Home
        phone_number:
          type: string
          description: A phone number for this address.
          example: (555) 555-1234
        instructions:
          type: string
          description: Any delivery instructions for this address.
          example: Leave behind bin
        company_name:
          type: string
          description: The company name at this address.
          example: Ron Swanson Enterprises
        line_1:
          type: string
          description: The first portion of the address, usually the street address.
          example: 1 Sunny Street
        line_2:
          type: string
          description: The second portion of the address, usually an apartment or unit number.
          example: Unit 101
        city:
          type: string
          description: The city for this address.
          example: Sunny Town
        county:
          type: string
          description: The county for this address.
          example: Sunnyville
        region:
          type: string
          description: The state, province, territory, etc. for this address.
          example: acc-legal-name
        postcode:
          type: string
          description: The ZIP Code, Postcode, or other postal reference string for this delivery address.
          example: SU33 1YY
        country:
          type: string
          description: A two digit code for the country this address is in, expressed as per the ISO 3166-2 standard.
          example: GB
    AddressResponse:
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          properties:
            id:
              type: string
              description: The unique identifier for an Address.
              example: 5f8da740-6680-463e-b31c-190b2db4bf9d
            meta:
              $ref: '#/components/schemas/MetaTimestamps'
            links:
              type: object
              properties:
                self:
                  description: A URL to the specific resource.
                  type: string
                  example: https://useast.api.elasticpath.com/v2/customers/deb6b25f-8451-4211-9a22-95610333df23/addresses
    CustomerAddressResponse:
      allOf:
        - $ref: '#/components/schemas/AddressResponse'
        - type: object
          properties:
            relationships:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    id:
                      description: The ID of the customer.
                      type: string
                      example: 11afcf9b-971b-4fdb-8e10-f2ecf970718e
                    type:
                      description: The type of object being returned.
                      type: string
                      example: customer
    Error:
      properties:
        status:
          type: string
          description: The HTTP response code of the error.
        title:
          type: string
          description: A brief summary of the error.
        detail:
          type: string
          description: Optional additional detail about the error.
    ErrorResponse:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    ErrorBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            bad-request-error:
              value:
                errors:
                  - status: '400'
                    title: Bad Request
                    detail: "Validation failed: field 'Name' on the 'min' tag."
    ErrorNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            not-found-error:
              value:
                errors:
                  - status: '404'
                    title: Not Found
                    detail: "customer not found"
security:
  - BearerToken: []
