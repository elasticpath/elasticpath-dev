/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */

// @ts-check
/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebarsDefault = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  docsSidebar: [{ type: 'autogenerated', dirName: '.' }],
  eppaymentsSidebar: [
      {
        type: 'autogenerated',
        dirName: 'payments'
      }
      ],
  developerSidebar: [
    {
      type: "category",
      label: "Developer Tools",
      link: {
        type: "generated-index",
      },
      items: [
        {
          type: "autogenerated",
          dirName: "developer-tools",
        },
      ],
    },
  ],
  authentication: [
    'authentication/index',
    'authentication/security',
    {
      type: 'category',
      label: 'Tokens',
      items: [
        'authentication/Tokens/client-credential-token',
        'authentication/Tokens/implicit-token',
        'authentication/Tokens/customer-token',
        'authentication/Tokens/account-management-authentication-token',
        'authentication/Tokens/permissions',
      ],
    },
    {
      type: "category",
      label: "Application Keys",
      link: {
        type: "generated-index",
        title: "Application Keys API",
        slug: "/api/application-keys"
      },
      // @ts-ignore
      items: require("./docs/api/application-keys/sidebar.ts")
    },
    {
      type: 'category',
      label: 'Single Sign-On',
      items: [
        'authentication/single-sign-on/openid',
        {
          type: 'category',
          label: 'Authentication Realm API',
          items: [
            {
              type: 'autogenerated',
              dirName: 'authentication/single-sign-on/authentication-realm-api',
            },
          ],
        },
        {
          type: 'category',
          label: 'Customer Authentication Settings',
          items: [
            {
              type: 'autogenerated',
              dirName: 'authentication/single-sign-on/customer-authentication-settings', 
            },
          ],
        },
        {
          type: 'category',
          label: 'Merchant Realm Mappings',
          items: [
            {
              type: 'autogenerated',
              dirName: 'api/merchant-realm-mappings', 
            },
          ],
        },
        {
          type: 'category',
          label: 'OpenID Connect Profiles API',
          items: [
            {
              type: 'autogenerated',
              dirName: 'authentication/single-sign-on/openid-connect-profiles-api', 
            },
          ],
        },
        {
          type: 'category',
          label: 'Password Profiles API',
          items: [
            {
              type: 'autogenerated',
              dirName: 'authentication/single-sign-on/password-profiles-api', 
            },
          ],
        },
        {
          type: 'category',
          label: 'User Authentication Info API',
          items: [
            {
              type: 'autogenerated',
              dirName: 'authentication/single-sign-on/user-authentication-info-api', 
            },
          ],
        },
        {
          type: 'category',
          label: 'User Authentication OpenID Connect Profile API',
          items: [
            {
              type: 'autogenerated',
              dirName: 'authentication/single-sign-on/user-authentication-openid-connect-profile-api',
            },
          ],
        },
        {
          type: 'category',
          label: 'User Authentication Password Profiles API',
          items: [
            {
              type: 'autogenerated',
              dirName: 'authentication/single-sign-on/user-authentication-password-profiles-api', 
            },
          ],
        },
      ],
    },
  ],
  customer: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: 'autogenerated',
      dirName: 'customer-management',
    },
       {
      type: "category",
      label: "Customer Addresses",
      link: {
        type: "generated-index",
        title: "Customer Addresses API",
        slug: "/api/customer-addresses"
      },
      // @ts-ignore
      items: require("./docs/api/customer-addresses/sidebar.ts")
    },
  ],
  organizations: [
    {
      type: 'autogenerated',
      dirName: 'organizations',
    },
  ],
  promotionsbuilder: [
    {
      type: 'autogenerated',
      dirName: 'promotions-builder',
    },
  ],
  cm: [
    {
      type: 'autogenerated',
      dirName: 'commerce-manager',
    },
  ],
  //this is for the subscription service, non-api documentation
  subscriptionsSidebar: [
    {
      type: 'autogenerated',
      dirName: 'subscriptions',
    },
  ],
  // Studio Documentation
  studio: [
    {
      type: 'autogenerated',
      dirName: 'studio',
    },
  ],
  //paymentSidebar: [
  //  {
  //    type: "html",
  //    value: `<p style="color: var(--ifm-color-secondary-darkest)">PAYMENTS</p>`, // The HTML to be rendered
  //    defaultStyle: true, // Use the default menu item styling
  //  },
  //  {
  //    type: 'autogenerated',
  //    dirName: 'payments'
  //  }
  //],
  composerSidebar: [
    {
      type: 'autogenerated',
      dirName: 'composer',
    },
  ],
  accounts: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Accounts",
      link: {
        type: "generated-index",
        title: "Account Management API",
        slug: "/api/accounts",
      },
      // @ts-ignore
      items: require("./docs/api/accounts/sidebar.ts")
    },
    {
      type: "category",
      label: "Account Addresses",
      link: {
        type: "generated-index",
        title: "Addresses API",
        slug: "/api/addresses",
      },
      // @ts-ignore
      items: require("./docs/api/addresses/sidebar.ts")
    },
  ],
  carts: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Carts, Checkout, Orders",
      link: {
        type: "generated-index",
        title: "Carts, Checkout Orders API",
        slug: "/api/carts"
      },
      // @ts-ignore
      items: require("./docs/api/carts/sidebar.ts")
    },
    {
      type: 'autogenerated',
      dirName: 'carts-orders',
    },
    {
      type: 'autogenerated',
      dirName: 'ship-groups',
    },
    {
      type: "category",
      label: "Order Exporter",
      link: {
        type: "generated-index",
        title: "Order Exporter API",
        slug: "/docs/api/exporter/exporter-service-api"
      },
      // @ts-ignore
      items: require("./docs/api/exporter/sidebar.ts")
    },
  ],
  commerceextensions: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Commerce Extensions",
      link: {
        type: "generated-index",
        title: "Commerce Extensions",
        slug: "/api/commerce-extensions"
      },
      // @ts-ignore
      items: require("./docs/api/commerce-extensions/sidebar.ts")
    },
  ],
  flows: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Flows",
      link: {
        type: "generated-index",
        title: "Flows API",
        slug: "/api/flows"
      },
      // @ts-ignore
      items: require("./docs/api/flows/sidebar.ts")
    },
  ],
  integrations: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Integrations",
      link: {
        type: "generated-index",
        title: "Integrations API",
        slug: "/api/integrations"
      },
      // @ts-ignore
      items: require("./docs/api/integrations/sidebar.ts")
    },
  ],
  payments: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Payments",
      link: {
        type: "generated-index",
        title: "Payments API",
        slug: "/api/payments"
      },
      // @ts-ignore
      items: require("./docs/api/payments/sidebar.ts")
    },
  ],
  personal: [
    {
      type: "category",
      label: "Personal Data",
      link: {
        type: "generated-index",
        title: "Personal Data",
        slug: "/api/personal-data"
      },
      // @ts-ignore
      items: require("./docs/api/personal-data/sidebar.ts")
    },
  ],
  promotions: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Promotions",
      link: {
        type: "generated-index",
        title: "Promotions API",
        slug: "/api/promotions"
      },
      // @ts-ignore
      items: require("./docs/api/promotions/sidebar.ts")
    },
    {
      type: 'autogenerated',
      dirName: 'promotions',
    },
  ],
  pxm: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Product Experience Manager",
      link: {
        type: "generated-index",
        title: "Product Information Manager API",
        slug: "/api/pxm/products"
      },
      // @ts-ignore
      items: require("./docs/api/pxm/products/sidebar.ts")
    },
    {
      type: "category",
      label: "Files",
      link: {
        type: "generated-index",
        title: "Files API",
        slug: "/api/pxm/files"
      },
      // @ts-ignore
      items: require("./docs/api/pxm/files/sidebar.ts")
    },
    //Price Books
    {
      type: "category",
      label: "Price Books",
      link: {
        type: "generated-index",
        title: "Price Books API",
        slug: "/api/pxm/pricebooks"
      },
      // @ts-ignore
      items: require("./docs/api/pxm/pricebooks/sidebar.ts")
    },
   // Catalog
    {
      type: "category",
      label: "Catalog",
      link: {
        type: "generated-index",
        title: "Catalog API",
        slug: "/api/pxm/catalog"
      },
      // @ts-ignore
      items: require("./docs/api/pxm/catalog/sidebar.ts")
    },
    // Inventory
    {
      type: "category",
      label: "Inventory",
      link: {
        type: "generated-index",
        title: "Inventory API",
        slug: "/api/pxm/inventory"
      },
      // @ts-ignore
      items: require("./docs/api/pxm/inventory/sidebar.ts")
    },
    // Currencies
      {
      type: "category",
      label: "Currencies",
      link: {
        type: "generated-index",
        title: "Currencies API",
        slug: "/api/pxm/currencies"
      },
        // @ts-ignore
        items: require("./docs/api/pxm/currencies/sidebar.ts")
    },
    //{
    //  type: 'category',
    //  label: 'Includes',
    //  items: ['pxm/includes'],
   // },
  ],
  settings: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Settings API",
      link: {
        type: "generated-index",
        title: "Settings API",
        slug: "/api/settings"
      },
      // @ts-ignore
      items: require("./docs/api/settings/sidebar.ts")
    },
  ],
  subscriptions: [
    {
      type: "category",
      label: "Authentication",
      link: {
        type: "generated-index",
        title: "Authentication API",
        slug: "/api/authentication"
      },
      // @ts-ignore
      items: require("./docs/api/authentication/sidebar.ts")
    },
    {
      type: "category",
      label: "Subscriptions API",
      link: {
        type: "generated-index",
        title: "Subscriptions API",
        slug: "/api/subscriptions"
      },
      // @ts-ignore
      items: require("./docs/api/subscriptions/sidebar.ts")
    },
    //Link not in the API specyarn
    {
      type: 'autogenerated',
      dirName: 'subscriptions',
    },
  ],
  // But you can create a sidebar manually
  /*
  tutorialSidebar: [
    {
      type: 'category',
      label: 'Tutorial',
      items: ['hello'],
    },
  ],
   */

};

module.exports = sidebarsDefault;
