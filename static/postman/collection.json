{
  "info": {
    "name": "EPCC - Sep 17, 2024",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "accountAddresses",
      "item": [
        {
          "name": "Get account addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5dd25612-67fd-40ff-92d2-c97402c8c751",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)",
                  "d.each((item, index) => pm.environment.set(`accountAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get account address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3c707962-f991-422a-be73-d380a891ed82",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4999e4dc-9a86-46f6-bf35-bf449b8d70a4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{accountAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0738b862-72b7-4440-bc19-40a8679c45dc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0729667b-1653-405d-bec4-a1b27500804d",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "accounts",
      "item": [
        {
          "name": "Get account authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e27dca3e-946d-40e1-b610-6d9c7a23fb4d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "pm.environment.set(\"authenticationRealmId\", d.relationships.authentication_realm.data.id)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account authentication settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_authentication_settings\",\n    \"enable_self_signup\": true,\n    \"auto_create_account_for_account_members\": true,\n    \"account_member_self_management\": \"update_only\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "493c6c16-86ea-4200-9342-6b0e8cbcdd77",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all accounts",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ffec5d94-efc1-4e28-97a0-50b44b809e38",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)",
                  "d.each((item, index) => pm.environment.set(`accountId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ddc5bb53-d200-4c8b-9a48-badeaeb8cf37",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse\",\n    \"legal_name\": \"Bluefuse Ltd.\",\n    \"registration_id\": \"{{$guid}}\",\n    \"external_ref\": \"Bluefuse Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6be68f90-9e22-4af6-be21-1c63f1cb5ec4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a sub account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Canada\",\n    \"legal_name\": \"Bluefuse Canada\",\n    \"registration_id\": \"{{$guid}}\",\n    \"parent_id\": \"{{accountID}}\",\n    \"external_ref\": \"Bluefuse Canada Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "87effc57-ca5b-4427-9c9e-751fe6974bcb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Updated\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1eb051e9-c679-40b6-ba06-11cf51504776",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an account",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cd7bfb37-3509-43d9-a435-ae064075b669",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members",
              "host": "{{baseUrl}}",
              "path": [
                "account-members"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4e20fefb-7293-49c9-ae82-b03fd2809741",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMemberID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMemberID\", accountMemberID)",
                  "d.each((item, index) => pm.environment.set(`accountMemberId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all unassigned account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/unassigned-account-members",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "unassigned-account-members"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0d130cc1-c383-40fa-a2b3-847669f42dff",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get an account member",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5527372c-fbca-427d-8a55-34e590c04574",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account memberships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "216c8480-a1eb-4d3f-9165-2680a30e12d7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all account memberships using Account Member Id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e1a8c32d-8067-4507-bc2b-a12e195f9d34",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account membership",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "137cffaa-cdbf-49af-b84e-057224e15521",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account membership",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership\",\n    \"account_member_id\": \"{{accountMemberID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a6c03f6e-2a42-4db2-97cb-8d5cddceee16",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete an account membership",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86740249-7c0f-4d65-bad5-ca1ecc80d3f2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"auth_code\",\n    \"oauth_redirect_uri\": \"redirect_uri\",\n    \"oauth_code_verifier\": \"pkce_code_verifier\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4d1254a3-fb64-457e-9fa2-2f8325ef9dbf",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Username and Password",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"password\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "95a560f7-e5ac-43d5-9490-93d381cb77ca",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens with One-time Password Token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"passwordless\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"one_time_password_token\": \"abc123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5b17cee2-3f02-4c64-bd94-ff7258ed1702",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Self Signup",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"self_signup\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe@gmail.com\",\n    \"password\": \"password\",\n    \"name\": \"joe\",\n    \"email\": \"john.doe@gmail.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e68d2e6b-baf9-4d9b-80ba-b22027de2e4f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Switch account tokens",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"account_management_authentication_token\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d0ecdf1f-4311-4a1d-b418-2415fb357200",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "authentication",
      "item": [
        {
          "name": "Get client credentials token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{clientSecret}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b7c2efff-ba21-4d32-b87c-4f0f6a6f97cd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get implicit token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bb72bc71-08f3-432c-902e-e5f892fea450",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "brandsLegacy",
      "item": [
        {
          "name": "Get brand attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d40456d8-0441-40b7-8a8a-933b2995ff4c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all brands",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "34f07d17-fde2-4f35-b91a-84322ef1ef29",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)",
                  "d.each((item, index) => pm.environment.set(`brandId{index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single brand",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b05a5f1d-d854-4f64-b332-ee06588c817f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a brand",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\",\n    \"slug\": \"lamprific\",\n    \"description\": \"Lamprific lamps\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7e9a7bf9-972f-47d1-840e-87be88fe0595",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a brand",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{brandID}}\",\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0c8e592a-949c-449f-a08b-f311761ae9ce",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a brand",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "93610a39-8a3e-42f8-9c7b-a270c588991e",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAddresses",
      "item": [
        {
          "name": "Get customer addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "771241b4-ab3d-4a0f-90ca-0f19606c4a9f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)",
                  "d.each((item, index) => pm.environment.set(`customerAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get customer address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "25c5b4d1-fc5d-4b10-a123-ef76a2697b73",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e8224b6e-fc89-4262-83a8-0dd72efa5b6b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{customerAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dcf769ce-1c4c-4308-a3c1-e8a94cd84dab",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5bf77751-593d-4232-9e01-71c8ec55423a",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "carts",
      "item": [
        {
          "name": "cart_management",
          "item": [
            {
              "name": "Create a custom cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "09d37822-aedb-4767-921f-e9bb4a5f7237",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a cart",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b9a07862-188e-48ef-aab5-ad0853788958",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c6bbf29b-e7a0-4646-ab80-61d87ca2cadf",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e4b95d52-0464-430e-a936-096b3536fefe",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a promotion preview cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b72f9ed2-2808-49cb-87df-a67433d21a3f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart to preview mode",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "628131f5-f5aa-4dd4-80bd-297a414713eb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart with custom attributes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"member_status\": {\n        \"type\": \"string\",\n        \"value\": \"gold\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e1b78d18-8ec3-415c-9789-d76d9a5ee424",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart with custom attributes",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"other_status\": {\n        \"type\": \"string\",\n        \"value\": \"silver\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cddabe17-0a9d-4dbe-a29f-3e9e25e73862",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customer_cart_associations",
          "item": [
            {
              "name": "Get customer carts",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "98e290c7-d3fd-4b4b-a875-99f35e91dcbc",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create customer cart association",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c0af905f-87dd-400e-9a52-81ce7066a6b8",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete customer cart association",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ee833f7b-2006-4304-803a-d013b003afa3",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_items",
          "item": [
            {
              "name": "Get cart items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "baf3320a-bc3f-49b3-a55a-cf135dbf331e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add product to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4ebaf4fc-64e0-4763-9a48-482e818fb9d9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add product to cart with shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1,\n    \"shipping_group_id\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3477d0f1-f430-4ce4-9145-9a57df4de5f0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add custom item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_item\",\n    \"name\": \"My Custom Item\",\n    \"sku\": \"my-custom-item\",\n    \"description\": \"My first custom item!\",\n    \"quantity\": 1,\n    \"price\": {\n      \"amount\": 20000,\n      \"includes_tax\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fbda231d-c104-401a-b90e-dd47bea998ef",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add a promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_item\",\n    \"code\": \"PROMO1\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "dd61d6df-0b98-4197-a112-26ec514a60f6",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion via promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/discounts/{{promoCode}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "discounts",
                    "{{promoCode}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5a2476d7-a2f8-442c-b668-663b66984eb0",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_item\",\n      \"name\": \"My Custom Item\",\n      \"sku\": \"my-custom-item\",\n      \"description\": \"My first custom item!\",\n      \"quantity\": 1,\n      \"price\": {\n        \"amount\": 20000,\n        \"includes_tax\": true\n      }\n    },\n    {\n      \"type\": \"cart_item\",\n      \"id\": \"{{productId1}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"cart_item\",\n      \"sku\": \"{{productSku2}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"promotion_item\",\n      \"code\": \"{{promoCode}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6ceea2ad-5d87-445d-a975-80d6d39c4b00",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Re-order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"order_items\",\n      \"order_id\": \"{{orderID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "72bffbe5-cbe2-4aea-9ab6-3cab3d2d4e80",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Cart merge",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"cart_items\",\n      \"cart_id\": \"{{cartID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a8527978-8f39-4b6f-9781-6abfe3315120",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "dc9be040-4c0f-43db-8e10-0446c41f7243",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"shippingGroupID\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c11e6c0a-7f4a-4b5b-a282-536aff774abc",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk update items in cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"id\": \"{{cartItemId1}}\",\n      \"quantity\": 2\n    },\n    {\n      \"id\": \"{{cartItemId2}}\",\n      \"quantity\": 3\n    }\n  ],\n  \"options\": {\n    \"update_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b4aa9146-6317-4781-b16f-c94f782d33d9",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d8be66fa-8d3e-4dd0-bb80-ed3d84c57f0e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete all cart items",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8cab8c1f-aa37-453e-93d4-5817635d9d33",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "tax_items",
          "item": [
            {
              "name": "Add tax item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"TAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2bc14561-4ace-41c3-b3ac-e036265e5a92",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk add tax items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name1\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX01\",\n      \"rate\": 0.1,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name2\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX02\",\n      \"rate\": 0.2,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6e1826a0-a2ca-4baa-80da-a27c6b6b436e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a tax item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"MYTAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1ff3a6c1-815e-4a07-b3e4-14d00f54b1c4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a tax item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "768bc20d-d80c-4d6d-a905-8fd567cb60a7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk delete tax items from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9609194a-2b8d-40f8-99ef-46b21354971d",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_shipping_groups",
          "item": [
            {
              "name": "Get cart shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a8811b0f-64c5-4147-a58e-23af881de8df",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single cart shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6309886c-08e9-495e-ad80-20897ad4ecea",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_1234\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-04-25T00:00:00.000+00:00\",\n      \"end\": \"2023-04-29T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8018eb12-6673-44f8-a8e5-c94ba91d184a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_5678\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-05-01T00:00:00.000+00:00\",\n      \"end\": \"2023-05-05T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7ff4e529-07c7-474e-9890-2dfa4b57aa9a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "custom_discounts",
          "item": [
            {
              "name": "Add custom discount to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e00d632a-73fe-4cc6-b858-c6f8dd6d6050",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "21542799-42cd-4b88-9229-459e16c42ef9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d50a2303-8aa3-4bf9-8404-8e50e303c2a3",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add custom discount to cart item",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "71ec0ce8-0a14-447b-8364-4bbd90c39a4f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cd90bcac-56e8-4d07-be8b-c2a8d54260b7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "94ac7827-0a20-45e6-b3ff-99f7de6e4fb1",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add custom discounts to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -1000,\n      \"description\": \"Custom discount description\",\n      \"discount_code\": \"cart-custom-promo-code\"\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"cart_item\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"custom=item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"custom_item\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "46b096c4-6d22-4b1d-8800-73db4359a7cc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk delete custom discounts from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c44eaefa-b4a6-4043-a6c6-bbc747aeeda0",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_payment_intent",
          "item": [
            {
              "name": "Setup a Stripe Payment Intent for the cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"receipt_email\": \"your_receipt_email@email.com\",\n      \"automatic_payment_methods\": {\n        \"enabled\": true\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "820b237f-2d5d-41db-9017-8bed2f0ff046",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Stripe Payment Intent for the cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments/{{paymentIntentId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments",
                    "{{paymentIntentId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f51cf61a-9346-4b06-accb-1959e3bee18f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "catalog",
      "item": [
        {
          "name": "Get shopper catalog",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog",
              "host": "{{authUrl}}",
              "path": [
                "catalog"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce67d179-dd38-4e3d-aa8e-b24f0cff10bd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "689ab042-3b1e-48fe-a751-ed8b95aa522a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "586b5a3b-4f9d-4dfd-8ccb-b7672b49aeb0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e39d6755-062b-4d34-80ed-0599844335c5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "200414b6-1f2b-44c3-9fb0-932577432844",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b2558413-364a-4766-a434-2f852a758f19",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5fdd91db-a199-4fb4-8115-d5f1ebb4c917",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8901d1f8-a46a-4a67-bcb0-c9110957d3a8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cf00e876-fafa-4ba8-b742-b9ab66ab98a3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products/{{productId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ee05f38f-0b3e-496a-a395-604319708169",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3fd246da-1da7-4767-aa11-beeee79e04f0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "00c80d27-4a94-4cdd-8389-dfc34b6dea18",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "catalogs",
      "item": [
        {
          "name": "catalog_configuration",
          "item": [
            {
              "name": "Get all catalogs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "373347b5-0d93-4a65-bc89-489f9788f3b3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)",
                      "d.each((item, index) => pm.environment.set(`catalogId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get catalog by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d9e35910-6181-4cc0-8a64-ab2f9509ed38",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create catalog",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend brand games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1b369eaf-360d-4ef7-8605-80bbd87009ec",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update catalog",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogId}}\",\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend Games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "05775765-5666-4be8-9d8b-9ddd1669cd98",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5be82180-7d40-4b10-993f-08a3bd43c891",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_rules",
          "item": [
            {
              "name": "Get all rules",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1695cdc4-a3a7-4575-9f3f-d2261ba1db5a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)",
                      "d.each((item, index) => pm.environment.set(`catalogRuleId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get rule by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a9cad7bd-47ff-4ab2-8ba4-ddd51dd95fce",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Channel",
                    "value": "web",
                    "disabled": true
                  },
                  {
                    "key": "EP-Context-Tag",
                    "value": "vip",
                    "disabled": true
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"Preferred Customers\",\n      \"description\": \"Preferred Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "01caf875-9247-41be-90bf-7653ee298d4d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update rule",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogRuleId}}\",\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"VIP Customers\",\n      \"description\": \"VIP Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b212dabe-918b-4734-aeef-f2ed549c7af2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete rule",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b356cde5-2c15-4fbb-a4eb-767f86f4b016",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_releases",
          "item": [
            {
              "name": "Get all releases",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "edc7265a-5311-46a5-8603-dbc3229cbd9f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)",
                      "d.each((item, index) => pm.environment.set(`releaseId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get release by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "82d91f21-2bb3-4ddb-ae73-8179c67c1a16",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create release (publish)",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f7565303-fbbf-4c77-aaa8-8d77b7f131f2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete all releases of a catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "559491c0-e289-437d-a863-1f0962402b75",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a release of catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a7e78f72-7694-470e-b914-933e27b82f96",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete latest release of a catalog (rollback)",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cc00db2a-d205-45aa-8e34-de47809b98cc",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_by_latest_release",
          "item": [
            {
              "name": "Get latest release",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6ceb48d2-362f-428e-a951-4be54e8c511c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all hierarchies",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "84ce2c09-1dcf-4286-8785-dde3395fbe20",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"hierarchyId\", hierarchyId)",
                      "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "85ed839d-9eaa-402d-b8e7-160f618eb5db",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "43f1570b-1cc1-428c-94d4-60bc88ed3f71",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5e82f1c6-c9e9-4124-b309-e87b99536258",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2c08066d-f77d-46ec-8c37-024d9bd85fa1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get node by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8a0b8ec8-138f-401b-847e-0d1296f463d0",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get node's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a2fd6af3-4d3c-4526-a4e7-ae62b202f74d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b3787cce-9ec6-4189-858c-a137f6ee1b52",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get product by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products/{{productId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products",
                    "{{productId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c3d5ca1b-f7d9-45cb-aa73-56dd6e401935",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a hierarchy's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3d752a31-377f-4481-8feb-7164d2986ec9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a node's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3198e871-b7e7-4d01-8e62-263e84bdbb21",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productIdpricebookId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productIdpricebookId\", productIdpricebookId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "categoriesLegacy",
      "item": [
        {
          "name": "Get category attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9ad68de4-025c-4b84-b87b-8d7824c2b91b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e4714a9e-b19c-4a7e-8c2b-724a95ab4af9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)",
                  "d.each((item, index) => pm.environment.set(`categoryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single category",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "26dbe3c0-a205-4071-ad48-c3279311ffe2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get categories tree",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/tree",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "tree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "350a49c0-3487-4d8c-8ffa-6d0349d8edd6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a category",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\",\n    \"slug\": \"desk-lamps\",\n    \"description\": \"For desk lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86393eb2-1fe3-41b1-ad21-7a24aefe32e5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a category",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{categoryID}}\",\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "45e9afc2-e52f-49f7-98d2-6a1776600738",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a category",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a7688490-a052-4a16-8fee-75b8661511a8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create parent category relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/parent",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"id\": \"{{categoryID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b701acd3-befe-4d2c-b718-c48b21662df1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create child category relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/children",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    },\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3276502c-b1c0-4e35-9e47-9e4f295dc655",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "checkout",
      "item": [
        {
          "name": "Checkout as customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"id\": \"{{customerID}}\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "706448c6-91ef-4a34-a4f9-e328b61bdfdc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as guest",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"email\": \"andy@example.com\",\n      \"name\": \"Andy Dwyer\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "495ccd78-b4da-45c0-a1ff-a7242de97527",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"account\": {\n      \"id\": \"{{accountID}}\",\n      \"member_id\": \"{{accountMemberID}}\"\n    },\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "30a89ec5-a749-4558-9ccb-0bc0a435e19d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout with account management authentication token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c73af1d0-dd44-476d-90af-6e1f9f515c58",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "collectionsLegacy",
      "item": [
        {
          "name": "Get collection attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a8deb8a8-4b40-4a1b-8bff-53c2dc0626fa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all collections",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9c18d0ef-09bf-4801-8587-9a33a1ade6c5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)",
                  "d.each((item, index) => pm.environment.set(`collectionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single collection",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "24e10750-acb0-400d-8c9b-0890952b4de8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a collection",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\",\n    \"slug\": \"fancy-lamps\",\n    \"description\": \"For fancy lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "be0e8d77-e830-40b2-ac9b-4f0484e1bbcf",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a collection",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{collectionID}}\",\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "644c393a-3f55-4bac-bc72-1591ab586563",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a collection",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dc29054a-9d29-4b0a-8444-8c6972627ca4",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "commerceExtensions",
      "item": [
        {
          "name": "customApis",
          "item": [
            {
              "name": "Get all Custom APIs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "32fc44ae-0ff8-425a-b1cd-f387d21539f7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c15d3d37-54fc-4dbc-880d-cea79bbb7469",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"Description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"api_type\": \"wishlist_ext\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "abe2df44-9ea9-4c87-8ccb-b393722b38db",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiId\", customApiId)",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)",
                      "const customApiType = Array.isArray(d) ? d[0].api_type : d.api_type",
                      "pm.environment.set(\"customApiType\", customApiType)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"updated description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "44fde72d-d7a3-4c00-b8e8-45b60596c64c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "26637733-9214-4876-ab73-80600a4bab72",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customFields",
          "item": [
            {
              "name": "Get all Custom Fields",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "61281654-b517-4baf-91e5-ae5d7cb2a5b4",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom Field",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f241c483-1553-4ac4-92e2-2a505f2e8ca4",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom Field",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Name\",\n    \"description\": \"Name of wishlist.\",\n    \"slug\": \"name\",\n    \"field_type\": \"string\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 16\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "10bc55c2-fef4-4f92-87fb-6475d31d67c5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customFieldId\", customFieldId)",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom Field",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Longer Name\",\n    \"description\": \"Longer name of wishlist.\",\n    \"slug\": \"longer-name\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 32\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "be891dc8-37d2-45fd-9aa0-2f8b50f2ac48",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom Field",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f53d2e15-e44f-434f-a30c-1de1164ee960",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customApiEntries",
          "item": [
            {
              "name": "Get all Custom API Entries",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6847ea05-cd52-410c-b511-302e004863bb",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API Entry",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "39080f71-d6e5-4986-927a-609c096aed64",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API Entry",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "eef5633d-3de5-4693-8d79-c62c1f09ef1d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiEntryId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiEntryId\", customApiEntryId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API Entry",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Updated Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "773cc435-7fd7-4438-8335-8d0012c163d2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API Entry",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a93d05f8-14db-42ec-bfc0-0e27ecee6b0b",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "currencies",
      "item": [
        {
          "name": "Get currency attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "84f2bf7c-afc3-4df0-b100-3d87b7563c87",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all currencies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9adf815a-74ad-4e2a-9407-8a0400a71905",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const currencyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"currencyID\", currencyID)",
                  "d.each((item, index) => pm.environment.set(`currencyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a currency",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "165ed75c-d913-4b28-bc56-f1b268a23a7b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a currency",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"currency\",\n    \"code\": \"GBP\",\n    \"exchange_rate\": 1,\n    \"format\": \"£{price}\",\n    \"decimal_point\": \".\",\n    \"thousand_separator\": \",\",\n    \"decimal_places\": 2,\n    \"default\": true,\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c886d88a-b46b-4dd6-9cb8-27889ea0c9fc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a currency",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"default\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d8c0a59c-e655-43b6-9420-918c2a4311ac",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a currency",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a54d9a95-947b-447d-92e2-c1fedda69e48",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAuthenticationSettings",
      "item": [
        {
          "name": "Get customer authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/customer-authentication/",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "customer-authentication",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "26f83779-38e9-48e4-b159-5e14fdd9c0b2",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customers",
      "item": [
        {
          "name": "Get customer attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3227fa5c-5998-487b-876c-670ae628fdb7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all customers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f63e20c1-a735-4152-8b0b-9a2fef7c6e3a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)",
                  "d.each((item, index) => pm.environment.set(`customerId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a customer",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e2884207-a266-4775-922b-7b6051de9ae6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\",\n    \"email\": \"ron@example.com\",\n    \"external_ref\": \"abc123\",\n    \"password\": \"mysecretpassword\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "570387db-a5c0-4f82-a1f9-832a1d763de5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a customer",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6d4750e8-7ab1-490f-ad70-ab66834c7a3b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a customer",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2276dde1-c40e-4efe-8a90-da21b371040b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate customer token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"email\": \"ron@example.com\",\n    \"password\": \"mysecretpassword\",\n    \"authentication_mechanism\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "39681707-6098-45f0-bcb9-d3ffc538e12f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate customer token with OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"c2490f06-6d8e-4927-99aa-4bf02b419e96\",\n    \"oauth_redirect_uri\": \"https://example-store.com\",\n    \"oauth_code_verifier\": \"0E934PurR8ExVg6Pj7T4kQewxKzWSfSFG5d15FGfww8\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f446a8dc-7f03-4899-ad8e-e4af9172209c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "files",
      "item": [
        {
          "name": "Get file attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3043bb37-2b1e-46b9-9599-d1a2fa63697f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all files",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "af44b26f-9476-41b9-a469-4722e94b44b5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a file",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1cfcc308-dc5b-4f4a-a14a-bba1d14e4656",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a file",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "file_location",
                  "value": "",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "public",
                  "value": "",
                  "type": "text",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "29b77b59-aad3-40e4-9240-15296e2d3827",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a file",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "38e282d0-c48b-4cc4-93a8-0240050cf732",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "flows",
      "item": [
        {
          "name": "Get all flows",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "162f7a0f-be0c-4e79-af99-7b47d96d6fe9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)",
                  "d.each((item, index) => pm.environment.set(`flowId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1de20928-5126-4976-985f-610a39d7d970",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a flow",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"flow\",\n    \"name\": \"Products\",\n    \"slug\": \"products\",\n    \"description\": \"Extends the default product object\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a37a0cf3-2a66-49f3-b460-e6b36b7c60b3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a flow",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{flowID}}\",\n    \"type\": \"flow\",\n    \"name\": \"FlowUpdated\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "11b4ee4b-df57-4cfa-8806-cc066d36a277",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a flow",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1256e9d3-bfe5-4dbe-b265-96d17dea7fd0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all fields",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3999aa95-f42b-427c-954c-21bd63d9b45f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all fields on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "09aca5af-c7ba-4b23-a27e-dd8fb7aecbcc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single field",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f56cf7c1-9329-489c-8a0f-2bdf19e5aa84",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a field",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"name\": \"Product Rating\",\n    \"slug\": \"product-rating\",\n    \"field_type\": \"integer\",\n    \"validation_rules\": [\n      {\n        \"type\": \"between\",\n        \"options\": {\n          \"from\": 1,\n          \"to\": 5\n        }\n      }\n    ],\n    \"description\": \"Average rating as given by our users\",\n    \"required\": false,\n    \"default\": 0,\n    \"enabled\": true,\n    \"order\": 1,\n    \"relationships\": {\n      \"flow\": {\n        \"data\": {\n          \"type\": \"flow\",\n          \"id\": \"{{flowID}}\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "eafe34ea-3d7f-459c-8463-2c3e7a66e268",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a field",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"id\": \"{{fieldID}}\",\n    \"field_type\": \"integer\",\n    \"slug\": \"product-rating\",\n    \"name\": \"Product Rating\",\n    \"description\": \"Average rating as given by our users\",\n    \"required\": true,\n    \"default\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bf50c9a2-bd5f-4613-a83f-3c52a0a0c786",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a field",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "55f64f73-4e6e-458b-b480-9ddce2e0caf9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an entry",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"FIELD_SLUG\": \"a value\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "adecb919-e805-4819-a0b5-06aa4f07e020",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single entry",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b94864fd-ce9a-4a66-9034-d0c70bf2eb2c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"id\": \"{{entryID}}\",\n    \"FIELD1_SLUG\": \"value1\",\n    \"FIELD2_SLUG\": \"value2\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "029f36bb-2649-4793-9af8-c93a872d6364",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8a093311-5fd5-411b-a095-03a28ccbf033",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all entries on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "991d5c63-72d9-4ff3-9f43-ed780b2cb04a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)",
                  "d.each((item, index) => pm.environment.set(`entryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create an entry relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{fieldSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{fieldSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    },\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d9693f10-e9c4-49d8-97d7-f19dd3f0d9b9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry relationship",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "562f9974-5b3d-4908-86e1-f4a66fa18b0c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6f185e59-a206-4606-8ec3-025de04e49e1",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "gateways",
      "item": [
        {
          "name": "Get all gateways",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways",
              "host": "{{baseUrl}}",
              "path": [
                "gateways"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1a5cdb9b-4998-41d3-9660-b1aefde3e499",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const gatewaySlug = Array.isArray(d) ? d[0].slug : d.slug",
                  "pm.environment.set(\"gatewaySlug\", gatewaySlug)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a gateway",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways/{{gatewaySlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "{{gatewaySlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f3951094-4747-454e-93c8-99e79dd05690",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Manual gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/manual",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "manual"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5238961c-6fa8-40fd-a815-e31f973995bb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4a9ff5ad-5c02-4c33-90d9-7a1f72a62e8c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "93ea96f2-6f2a-4ff7-ad9f-1c9f54e40478",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Intents gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_payment_intents",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_payment_intents"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f24a082c-c223-4eaa-b148-00519e8b31cd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Connect gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_connect",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_connect"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86911044-2944-4d87-803f-681318e71a89",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ef2a7a60-c885-4297-97db-7cce5306825c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update PayPal Express Checkout gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/paypal_express_checkout",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "paypal_express_checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"payer_id\": \"{{merchant account id}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ded74ccb-c432-4c61-be53-e748a21449eb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update EP payments Stripe",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/elastic_path_payments_stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "elastic_path_payments_stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1404b2c3-3b16-4771-9dc4-bd4fe910b20e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Authorize Net gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/authorize_net",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "authorize_net"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"login\": \"{{loginID}}\",\n    \"password\": \"{{password}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6f3cb0ae-7ef0-45ac-a767-65c14a76bef6",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "hierarchies",
      "item": [
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5423e76e-346c-4ce7-9a8e-3704c426c714",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4d04c56b-2bf7-41fa-afb1-7aa0524aa132",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a hierarchy",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games\",\n      \"description\": \"All the games we sell\",\n      \"slug\": \"games\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "83015f2c-8618-4e33-a001-e5e46169f4b1",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a hierarchy",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{hierarchyId}}\",\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games for Kids\",\n      \"description\": \"All the games we sell for kids\",\n      \"slug\": \"games-kids\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "90bce4de-e47f-4e4c-8bc2-95234ac9d456",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a hierarchy",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "15ba6449-af73-4bfb-9347-a92294864c6c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "480e8ffe-520a-43dd-a9af-7fb250f8e85a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "integrations",
      "item": [
        {
          "name": "Get integration attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1f3e5650-c956-4354-a543-ed44a972c700",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all integrations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "49e6de0d-df8f-4ab3-91aa-4ea47846ec32",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)",
                  "d.each((item, index) => pm.environment.set(`integrationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an integration",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ee8d88c5-040d-4906-bddc-e731779deb03",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an integration",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"integration\",\n    \"name\": \"Order notification\",\n    \"description\": \"Send an order notification via email with discount code.\",\n    \"enabled\": true,\n    \"observes\": [\n      \"order.created\"\n    ],\n    \"integration_type\": \"webhook\",\n    \"configuration\": {\n      \"url\": \"https://yourwebsite.com/order-created-notification\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7bbc975a-bc99-4ea0-9fe8-8aedf5fecc7d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an integration",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{integrationID}}\",\n    \"type\": \"integration\",\n    \"observes\": [\n      \"order.created\"\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a1ceb859-f687-4ed9-a089-929855a4bcb1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an integration",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "add38b27-6603-4650-adc8-bb2d9d962d38",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "67b032ba-637b-48fd-95f1-f050474e47ea",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "78046431-1945-47a1-825e-8d0d54553abe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3c29098d-617a-4835-bed6-ce3267aa0d95",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationJobId\", integrationJobId)",
                  "d.each((item, index) => pm.environment.set(`integrationJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get integration job logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs/{{integrationJobId}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs",
                "{{integrationJobId}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "82c69372-263b-4fd1-81a9-6af0a45f5cf0",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "inventories",
      "item": [
        {
          "name": "Get all inventories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories",
              "host": "{{baseUrl}}",
              "path": [
                "inventories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bcfc23f9-10e7-4722-9aff-28008ae15de6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product inventory",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c886680f-b827-489b-989c-d77116607611",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product stock transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3c2d8015-8d7c-41dd-b6ba-caa2cd24b0bd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product stock transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6b23314d-ac3f-4345-bdca-b27b35080684",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a stock transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"stock-transaction\",\n    \"action\": \"increment\",\n    \"quantity\": 3\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "939cbd9e-c48c-4991-a749-a5dfffde649d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create inventory",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"quantity\": 1000\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7c73318a-49c1-46b4-810b-e0711613d959",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete inventory",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ed8ade18-6b72-4a3c-9afb-c62e21d64de0",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "jobs",
      "item": [
        {
          "name": "Get all jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "554c3a24-dec9-44a3-bebc-a19ed3cf6774",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const jobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"jobId\", jobId)",
                  "d.each((item, index) => pm.environment.set(`jobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a job",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": "{{baseUrl}}",
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f2eaadd6-2948-4759-9ebc-c3e256e9df60",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a job",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"job\",\n    \"job_type\": \"order_export\",\n    \"filter\": \"gt(created_at,2020-04-28):lt(created_at,2020-04-30):eq(payment,paid)\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fef02313-c39d-4d60-9edb-287951e9ae1b",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "keys",
      "item": [
        {
          "name": "Get all keys",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "962e3a9e-7c78-4d2e-8162-5826562243ab",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a key",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"Pawnee City Parks and Recreation Department\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "22278312-e3ba-4969-8797-20dab166c711",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const keyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"keyID\", keyID)",
                  "const clientID = Array.isArray(d) ? d[0].client_id : d.client_id",
                  "pm.environment.set(\"clientID\", clientID)",
                  "const clientSecret = Array.isArray(d) ? d[0].client_secret : d.client_secret",
                  "pm.environment.set(\"clientSecret\", clientSecret)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a key",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cc31a773-377f-4779-b513-68b84fc454f1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a key",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f52dc28c-eec7-498f-8c2f-6b4bc42713fe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a key",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"New Key Name\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce959a0c-85cc-48c8-a53b-686dd8241506",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "merchantRealmMappings",
      "item": [
        {
          "name": "Get merchant realm mapping",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ae599587-b41b-406c-b828-b01b742967f8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantMappingId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"merchantMappingId\", merchantMappingId)",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant realm mapping by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bd1496f8-af04-47df-bc69-d74ae8bdc284",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update merchant realm mapping's store prefix",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"merchant-realm-mappings\",\n    \"prefix\": \"myNewStorePrefix\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "607636c9-dbc9-4989-a047-e085e6b90a6d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant oauth2 profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}//merchant-oauth2-profiles",
              "host": "{{authUrl}}",
              "path": [
                "",
                "merchant-oauth2-profiles"
              ],
              "query": [
                {
                  "key": "prefix",
                  "value": "{{merchantStorePrefix}}",
                  "disabled": false
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ]
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6e7d633e-2428-4342-aa41-6d56394ef7a6",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "nodes",
      "item": [
        {
          "name": "Get a node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "462e2b92-2a21-49e4-9a90-5116092be835",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a node",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Accessories\",\n      \"description\": \"Game accessories\",\n      \"slug\": \"accessories\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4de74709-8f3f-4e0e-be79-ce560910558e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a node under parent",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming Keyboards\",\n      \"slug\": \"gaming-keyboards\"\n    },\n    \"relationships\": {\n      \"parent\": {\n        \"data\": {\n          \"id\": \"{{nodeId}}\",\n          \"type\": \"node\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b44b0377-6766-4893-88d6-4bbbdbda9cc9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{nodeId}}\",\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming keyboards for the dedicated player\",\n      \"slug\": \"gaming-keyboards\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "daf99341-bf37-4252-bcd1-535112ca8143",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "05c2b33a-2b49-43c4-b43f-4aae0c24024f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ac4cc8d2-8cc3-4cd1-a312-d88a6519c1bf",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create child node relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"node\",\n      \"id\": \"{{nodeId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "654320f1-f072-4380-b617-dd070752d8f0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node's parent",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"id\": \"{{nodeId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "43067804-424d-4ff9-af87-1fc212505dc3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node's parent relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0be61ddc-7581-4ec3-b9b8-9ec27087daaa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e1080f92-3d40-4103-8d9f-e7dcc5efae2e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create relationships to products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7f0d4314-9386-4c64-adaf-be2bc0088246",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete relationships to products",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0dfe9cb1-dbde-445f-b1f1-502efe91fbb3",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oidcProfiles",
      "item": [
        {
          "name": "Get OIDC profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "76652ac3-4a73-4cf2-995d-52edc526bb6e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get OIDC profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5b3ab8e5-5867-45bb-b8e0-e9400f3f04cb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create OIDC profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "369ffe81-a8bd-4a72-8693-dd8d0808be0a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const oidcProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"oidcProfileId\", oidcProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update OIDC profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a801b34a-fb0a-47c2-b446-46045fcc6612",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete OIDC profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "83761062-8b7f-43ec-bb39-02a5a6d177b7",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oneTimePasswordTokenRequest",
      "item": [
        {
          "name": "Create One-time Password Token Request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}/one-time-password-token-request",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}",
                "one-time-password-token-request"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"one_time_password_token_request\",\n    \"username\": \"john.doe\",\n    \"purpose\": \"reset_password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c6436430-fd9f-40dc-9a14-1095def86b87",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "orders",
      "item": [
        {
          "name": "orders",
          "item": [
            {
              "name": "Get order attributes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/attributes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "attributes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b99a925b-7854-43af-9cf4-d6376b032e34",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "386cd2c7-f3c8-40b9-a49b-1bccdee9cbce",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get an order",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "dac64fc5-3a32-4aa3-b9fa-e5508331467f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping_address\": {\n      \"first_name\": \"Ron\"\n    },\n    \"external_ref\": \"external_order_123\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "440926d8-7ac0-4dac-a489-371dbd795b8d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Fulfill an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping\": \"fulfilled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3f79a516-4630-4a43-8aa1-cb715f527ff3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"status\": \"cancelled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a7b309e6-66bb-4601-a545-425c4a4c0a89",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get customer orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bec71ac8-9f21-41f6-96f9-0c41824ca83c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get order items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "76ce7d96-2fdb-4664-94c6-3660b8e34abb",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize orders",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"order_ids\": [\n      \"{{orderID}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7703ed15-ca6e-4ed1-a960-167920094f4d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm an order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"metadata\": {\n        \"order_id\": \"{{orderID}}\",\n        \"statement_descriptor\": \"Confirmed intent\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3c7a3a55-0956-47d0-b99a-3f95d499ea6e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "order_shipping_groups",
          "item": [
            {
              "name": "Get order shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9ce22db0-2f2b-4483-9ecd-87197d9d3ea3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single order shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups/{{orderShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups",
                    "{{orderShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2f691499-351d-4af2-94e2-05bea88eb91b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "passwordProfiles",
      "item": [
        {
          "name": "Get Password profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5d5d9539-27dc-44ee-9c2d-3885e886accd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get Password profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "314d90bb-3cf2-4a1f-badb-4e9a0390ed94",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create Password profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"email\",\n    \"type\": \"password_profile\",\n    \"name\": \"password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "94c7f134-9ede-4339-a77c-0e0b1065b2f8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const passwordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"passwordProfileId\", passwordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Password profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"any\",\n    \"type\": \"password_profile\",\n    \"name\": \"updated password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "073fa645-38c3-4869-8fa8-0445038aebbd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "41393f0d-8cc8-4160-a0fc-b8dc02b7ab48",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "payments",
      "item": [
        {
          "name": "adyen",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"authorize\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"shopper reference\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "519193a2-fa3f-44bf-9a33-7d0767bf6e8e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"purchase\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"<shopper reference associated with token>\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fbfa2cfe-c410-461d-a0e5-bdf98c3b1082",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "authorize_net",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"authorize\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7d8bbb8a-d330-4a93-9597-6960cedb52b0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"purchase\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4f6e7e7b-9eb4-48ee-9c29-9811a75f96a8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "braintree",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cea7c16d-447e-4171-9074-da4345272a65",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "84b7da5d-19d9-4257-af8c-c11a540e2be5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e4337d0b-a7f4-4989-bdef-f35acba69668",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "80f11979-acb4-421b-9059-e53233b883ba",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "60e3181b-b6e0-4af4-81e0-5dd8bae743f0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "37ec0bb8-5b56-409a-9b30-092304aa7b24",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "card_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c887fba0-c285-4bd0-87ac-54ea21ff1e37",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "747711b8-5604-4199-b0d6-4d9e2975ba82",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cybersource",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"authorize\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "53493fe6-2927-4ba3-bfc4-25b31f1bfea6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"purchase\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "aee79642-95fa-4725-9c6b-25b175996337",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "manual",
          "item": [
            {
              "name": "Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"authorize\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ee822b4a-618d-40f5-ac08-549c8d7e11b6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"purchase\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "37b7347d-5ff7-4567-b56b-fade20214c94",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "paypal_express_checkout",
          "item": [
            {
              "name": "Setup Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c7ae5a47-fa8c-49f6-922f-52c6e4c805dc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Setup Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"purchase\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "77ea86ee-83aa-4855-b64d-028781dad867",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "978b4965-eb37-4f39-ae78-145ea3afdc3d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Capture Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "capture"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"soft_descriptor\": \"Test soft descriptor\",\n      \"note_to_payer\": \"Capture note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "85044298-57d9-452d-9b90-f2604aa18ad3",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Refund a payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "refund"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"amount\": 1,\n    \"options\": {\n      \"note_to_payer\": \"Refund note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fc1c5d28-184d-45bd-967d-48f9465129a4",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "53fa999d-50d7-4c46-ba56-f9eff310177a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1bb1b7f6-3996-45e1-b28f-fb5da596be21",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_intents",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "185b3059-1412-40fa-aad0-a65344dc8d49",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ac7e2bf2-f69c-4334-b52e-84c16ee7ad86",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0234bcae-83a9-47ef-8670-4b58d4741ed9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7ebbfefe-4315-4885-a01f-5e7c97f671e2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "548614a1-426c-426a-bb79-1eb489667bfc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "168a7f67-f8e6-44d8-bbf1-76525e037889",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0f915434-3fbe-404c-9f95-6406c9c860f1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fe215da0-2178-4915-885e-6e4f81c588d9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "ep_payments_stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1d9cf8b7-3a07-49a8-93f8-d2287323b5da",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_threeDSecureRequired\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\",\n      \"confirm\": true,\n      \"execute_threed\": true,\n      \"confirmation_method\": \"manual\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "28c20437-5d0a-4f70-b959-75bcb98380f9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b1de052e-7247-4313-a96b-229b3925e0e6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "92551ade-8836-4a1e-aeca-7f8a1080770a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5bc0f225-b594-4fdf-9a19-77b614ce4dad",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "de39e997-fa4f-4a43-b9ca-80c37b80697e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2048c122-9399-4188-bfe0-f4d161fdabc8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "personalData",
      "item": [
        {
          "name": "Get related data entries",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "73d5003e-c175-4bdb-b5ee-34680eb0f526",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cbcf7987-7ce1-4be5-9579-610da78e7523",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create erasure request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"resource_id\": \"{{customerID}}\",\n    \"resource_type\": \"customer\",\n    \"type\": \"erasure_request\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "07bbfb32-cf38-4278-bba9-1d34cfc9406e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const erasureRequestID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"erasureRequestID\", erasureRequestID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get erasure request",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests/{erasureRequestID}",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests",
                "{erasureRequestID}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "caf7434f-12e3-492b-a5a1-678b9beeea0d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get erasure requests",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c0be561a-b461-4abf-b49c-6d7ed1174c9a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update TTL",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"time_to_live\",\n    \"days\": 20\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c52c3b48-dc61-4335-8ade-15fb8fe546ad",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get TTL",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "56ffb876-24b5-45cc-b94a-8f7572eecddb",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pimJobs",
      "item": [
        {
          "name": "Get all Jobs for PIM",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "aeec6f3d-d527-45a9-8e29-5d045e4ef28c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)",
                  "d.each((item, index) => pm.environment.set(`pimJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a Job for PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dae46e75-1709-455a-b8df-31fe47c8cdd8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Errors for a Job in PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}/errors",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}",
                "errors"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "35c6b66e-1275-43f9-aa22-fdd3439c4b42",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pricebooks",
      "item": [
        {
          "name": "Get all pricebooks",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a724a048-ee05-4f27-95e9-f72ccd017c24",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)",
                  "d.each((item, index) => pm.environment.set(`pricebookId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a pricebook",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cf3dbc1e-f4d7-434a-ba77-9bc166380381",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a pricebook",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Standard Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f9b5acec-45fb-40a5-9874-26a22e93b058",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a pricebook",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{pricebookId}}\",\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Seasonal Sales Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dc930d9e-aba2-46f0-a7bc-95777b1217f4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a pricebook",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7554c628-c78f-497b-913b-657b495299dc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product prices",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "88aa9cdd-efd4-45f7-872a-b2bc441c5334",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`priceId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product price by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "512b76c5-3f9f-45f6-9738-b9154f2354b7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a price",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 100,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e6c341c3-4087-4574-b5c9-71bcd9f51552",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product price",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{priceId}}\",\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 300,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ceb39bb6-1743-4598-b62c-02b7f1d3f200",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product price",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2adbb301-fd51-464f-be65-3debb2f63fff",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "products",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "42212d1f-d082-4b3f-979f-3e6fadb2a017",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bcc2d072-a9f2-4837-b9bd-8cb830241b75",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"1234-5678-ABCD\",\n      \"upc_ean\": \"123456\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "76236632-4879-4be0-91c1-604620bbe844",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"id\": \"{{productId}}\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand top of the line gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"9934-5678-ABCD\",\n      \"upc_ean\": \"125656\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a2e1d46f-61b2-4ea3-9073-91a1ef4a4e3b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1681f04c-f90c-4ae8-af99-d1c8b31cc19e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a bundle",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"2 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 2\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "73430c9a-d58f-40f9-9187-1f09197bb05d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a bundle",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{bundleId}}\",\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"5 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 5\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1274be3e-8ce6-4f2b-9fa1-b48c1f07f267",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a bundle",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c947024d-3ca1-4530-9301-d1aff3fa8a30",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "95e5863e-0a57-4b78-b9a2-e4ffb2939cad",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product's file relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e9e485c2-bd61-4b27-b62e-033bdb967adb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product file relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-1\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-2\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d88b44d7-7e09-4db5-a4c1-780729916232",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Replace a products's file relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c016382e-829a-4db3-a33b-7a7ff0f2e53d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's file relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9dd67662-e66f-40fd-8465-2468e746fb72",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's variation relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8ba02a64-c085-4ffd-90e2-003cd33fce5a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product variation relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c0c7ac1d-3275-4e70-bcdf-67174b96e99d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Replace a products's variations relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0abb1764-fac9-4310-a014-c93e51bbd4aa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's variation relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "05f64c36-ac43-47b8-9e2e-d0d13f45fb99",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Builds child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/build",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "20e22446-64dd-42bc-a969-b5c604371fea",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "productsLegacy",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ab94556f-3eaa-449c-8346-7b374c2314ab",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "77d0acf5-b243-4b5b-8521-e8f8ce6ed19d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\",\n    \"slug\": \"desk-lamp\",\n    \"sku\": \"desk-lamp-001\",\n    \"manage_stock\": false,\n    \"description\": \"A cool desk lamp\",\n    \"status\": \"live\",\n    \"commodity_type\": \"physical\",\n    \"price\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"GBP\",\n        \"includes_tax\": true\n      }\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "df717f73-1bee-4122-bc80-ed386674ff2e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "742a497d-8621-48d5-9dad-b369decb2fbd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b6560c7e-c97b-4543-812e-e66ffee6fc21",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "promotions",
      "item": [
        {
          "name": "promotions_management",
          "item": [
            {
              "name": "Get all promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f270084d-0b91-423d-8f58-5d16d4dc25c5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)",
                      "d.each((item, index) => pm.environment.set(`promotionId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6da8dd2f-743b-4267-8584-141f48e312c2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a promotion history",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/history",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "history"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4986fd84-4f8a-4fc0-a78c-48c6e4441a55",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a cart fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"$10 off\",\n    \"description\": \"$10 off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"fixed_discount\",\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"amount\": 1000\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}, {{nodeId2}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue1}}\"\n                    ]\n                  }\n                }\n              ]\n            },\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId3}}, {{nodeId4}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue2}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "45059669-5f5c-4268-8229-f7ddbf7b72a3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"10% off\",\n    \"description\": \"10% off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"percent_discount\",\n    \"max_discount_value\": [\n      {\n        \"amount\": 1000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"percentage\": 10\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "599ef5d7-3d6b-4b95-b915-37b242c49e5e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for Y discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for Y promotion example\",\n    \"description\": \"2 for 1 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_y\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"y\": 1,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue2}}\"\n          }\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bbe8ba59-7bcd-438b-8ffd-b54bec0f8942",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for amount discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for amount promotion example\",\n    \"description\": \"2 for 100 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_amount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 10000,\n          \"currency\": \"USD\"\n        }\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fd06ea4e-0aad-4b42-89d8-b6d37893c025",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a fixed bundle discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Fixed bundle promotion example\",\n    \"description\": \"SKU1 and SKU2 for $150\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"bundle_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 15000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c5d1959c-b7d3-4853-992a-3b546480bfc9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item fixed discount promotion example\",\n    \"description\": \"$50 for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"amount\": 5000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId1}}\",\n          \"{{nodeId2}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "850225d7-94a0-4084-8e55-38e3f84e0f92",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item percent discount promotion example\",\n    \"description\": \"50% off for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_percent_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"percent\": 50,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId3}}\",\n          \"{{nodeId4}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2915e784-98e9-4b00-90c6-1029b7f58fe3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a free gift promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Buy SKU1 and SKU2 to get free gift\",\n    \"description\": \"SKU1 and SKU2 for free gift\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"promotion_type\": \"bundle_gift\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"gifts\": [\n        \"gift\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"auto_add_free_gift\": false\n    },\n    \"start\": \"2020-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a2090144-3260-4a56-8eb2-f9bfd61a42a6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"id\": \"{{promotionID}}\",\n    \"name\": \"Promotion name\",\n    \"description\": \"description\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3b155e57-c049-48f8-8751-7d349777627e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "04b3af47-4c6c-404f-9538-edb717206136",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_codes",
          "item": [
            {
              "name": "Get promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "de749a75-1d57-4e9d-984b-ec4f255484a2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      },\n      {\n        \"code\": \"5uses\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_item\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2eb46588-0ac0-48f6-876a-6bd7df3beebc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5da93bd3-3140-43c0-a33f-e3abade4fc92",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e79c298e-fa3c-4c76-8cc0-0ac7880a928d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes generation job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_generate\",\n    \"name\": \"job\",\n    \"parameters\": {\n      \"number_of_codes\": 1,\n      \"max_uses_per_code\": 1,\n      \"consume_unit\": \"per_cart\",\n      \"code_prefix\": \"promo-\",\n      \"code_length\": 8\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0b203e43-a40a-48e7-bbcc-b3194ee280f1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create export promotion codes job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_export\",\n    \"name\": \"export promo codes job\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "faeca7c7-6e38-4a4f-818d-83d5938ded54",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel a promotion job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{promotionJobID}}/cancel",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{promotionJobID}}",
                    "cancel"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8dfc46aa-b331-427c-9ad2-8eaeae245859",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion jobs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0bde51c0-f105-41a3-b4a7-4bf6e0da559a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion code export file",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{jobID}}/file",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{jobID}}",
                    "file"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8cfde5e1-4bf3-433c-9ffb-648de4c03a44",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_usages",
          "item": [
            {
              "name": "Get promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ae1ba028-aeee-4e6e-a351-f7d975f60889",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get single promotion code usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "94e076bf-25c1-4243-a93d-f4997acd0f39",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Public-Search-Type",
                    "value": "cm_search",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0eb0ebb6-7d4d-43d6-a16f-6faafc49e70d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID_1}}\",\n      \"{{usageID_2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "065c451e-8290-4dad-be11-147d000849c8",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_management",
          "item": [
            {
              "name": "Update a rule promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion update\",\n    \"description\": \"$10 off your order update!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2023-01-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    },\n    \"priority\": 100,\n    \"stackable\": true\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ec060245-3989-419d-8e42-f0bad207ff59",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all rule promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "41d55cb5-9af4-47e1-992a-4cabda23318f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a rule promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cba41701-6ddd-465a-9bd6-43b6bf751eed",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9866da9b-c956-47c0-961a-c207382a500f",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_rule_promotions",
          "item": [
            {
              "name": "Create a cart fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion\",\n    \"description\": \"$10 off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "71e7b21e-478f-46d4-a791-c70a96c9dfdd",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"10 percent off cart promotion\",\n    \"description\": \"10 percent off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            10\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e02dbc60-eda7-4a7d-955e-0e5a06a8876e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with max_discount limitation rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart promotion max discount $50\",\n    \"description\": \"50 percent off your order (up to max $50) when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_discount\": 5000\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ec0c35ce-1356-4725-b212-d28ba07a59c1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with custom attribute rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart with custom attribute\",\n    \"description\": \"50 percent off your order when cart member is gold\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_custom_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"member_status\",\n          \"string\",\n          \"gold\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c441a522-3b65-4f26-9521-3ab21c17abda",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with sub conditions",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart excluding exclusive item\",\n    \"description\": \"50 percent off your order excluding exclusive item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "24b4dc37-62f7-41ba-8cad-6caa5612c474",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "item_rule_promotions",
          "item": [
            {
              "name": "Create an item fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy item get $10 off\",\n    \"description\": \"Buy item get $10 off\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e95d1b54-ebae-475e-9a21-a44e93497e7b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item discount with condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get Y 50%\",\n    \"description\": \"Buy X get Y 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7e0a577a-5772-4803-a64b-6b6cf294fe0b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitations and exclusions rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50% max $10 max 2 items 2 quantities from category\",\n    \"description\": \"Items from category 50% off max $10 off 2 cheapest items with max quantity of 2 excluding one item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_quantity\": 2,\n            \"max_discount\": 1000,\n            \"items\": {\n              \"max_items\": 2,\n              \"price_strategy\": \"cheapest\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f4d8bffb-f8c5-4582-b4e7-481ce0a6ab65",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitation and condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get one Y for free\",\n    \"description\": \"Buy X get ONLY one Y for free\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            100\n          ],\n          \"limitations\": {\n            \"max_quantity\": 1\n          },\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c40bc89f-6734-44b3-a060-f5e0bd1f9b9c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a mixed of Cart and Item percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"description\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        },\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7a3c05af-b2dd-41b6-9efc-ce4be25dd58d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item fixed price discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy 2 items for $100\",\n    \"description\": \"Buy 2 items for $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed_price\",\n            2,\n            10000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "30857a75-2bed-48be-a4a2-392fddf4f719",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item attribute rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items with item attribute discount\",\n    \"description\": \"All items with attribute brand EP get 20% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"products(product_template)\",\n          \"brand\",\n          \"string\",\n          \"EP\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "84b57264-afc7-4d8c-99b7-52169c4c6b71",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with sub condition",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items discount for a category excluding items with attribute\",\n    \"description\": \"50% item discount excluding items with attribute when eligible items exceed $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_attribute\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"products(product_template)\",\n              \"sales\",\n              \"string\",\n              \"sale2024\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ],\n            \"children\": [\n              {\n                \"strategy\": \"item_attribute\",\n                \"operator\": \"nin\",\n                \"args\": [\n                  \"products(product_template)\",\n                  \"sales\",\n                  \"string\",\n                  \"sale2024\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7a6315cb-3751-4f3b-b09f-41fd85b65143",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item_sku OR item_product_id",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"description\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"or\",\n            \"children\": [\n              {\n                \"strategy\": \"item_sku\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productSku}}\"\n                ]\n              },\n              {\n                \"strategy\": \"item_product_id\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productId}}\"\n                ]\n              }\n            ]\n          },\n          {\n            \"strategy\": \"item_quantity\",\n            \"operator\": \"gte\",\n            \"args\": [\n              1\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ff35fd93-71f4-4331-929e-6f6ffdff09f8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotion_codes",
          "item": [
            {
              "name": "Get rule promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6ecf069c-ce66-49e6-a1fd-93bb95fa71e8",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\",\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"summer2024_limited\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"fall2024_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_application\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_checkout\",\n        \"user\": \"vip_shopper@email.com\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6f5bf30c-edc4-4a69-99b6-ab80a0af7078",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "04494e0c-b3db-4761-9369-06a907929dbc",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple rule promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\"\n      },\n      {\n        \"code\": \"summer2024_limited\"\n      },\n      {\n        \"code\": \"fall2024_limited\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ae533557-b1eb-4c84-875c-f5d9575f9b46",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_usages",
          "item": [
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "64232714-29de-4d23-871a-bd057f04d456",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages by code",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fdfc2381-7bc4-40a6-814f-f8af4dda4424",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize Rule Promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID1}}\",\n      \"{{usageID2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "beba5f05-f127-42c9-81a7-03122f518671",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "realms",
      "item": [
        {
          "name": "Get authentication realms",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "12d80c6f-4483-49d9-a2db-fe3ccbb5955c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get authentication realm",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5bf29434-9b34-4dc7-85bc-b8d8a460ff9e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update authentication realms",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"authentication-realm\",\n    \"name\": \"Test Authentication Realm\",\n    \"redirect_uris\": [\n      \"https://example.com\"\n    ],\n    \"relationships\": {\n      \"origin\": {\n        \"data\": {\n          \"id\": \"{{storeId}}\",\n          \"type\": \"customer-authentication-settings\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "55c8d672-b020-4f68-be7a-960251feca97",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "settings",
      "item": [
        {
          "name": "Get settings attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b6c3140f-2903-4f77-9f41-5e77c53f28b5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ae030cdc-5b64-448a-9223-081452b9f04a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"calculation_method\": \"line\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e4c574d1-02f0-4964-871d-d42bcce44eb7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete settings",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c6300625-1f1e-4ff0-9140-ce6e43b6813b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get cart settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9b7838a6-162d-40e7-8d94-111192c44255",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update cart settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"cart_expiry_days\": 7,\n    \"discounts\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3135af93-4d80-4287-9a6c-6bb9dcc49a5d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get account membership settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5b13d5ba-20a5-456d-ace8-358c47fcd762",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update account membership settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership_setting\",\n    \"membership_limit\": 13\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "05d008f6-eaab-4a39-964d-50f38cfd1083",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "transactions",
      "item": [
        {
          "name": "Get order transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8af30593-eade-4098-bbfd-019476bebb1a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "08c4b2fc-1b6d-4c1e-8e19-1be6b4673e0d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"transactionID\", transactionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Capture a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "capture"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"custom_reference\": \"customRef123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c6a43e12-9ca2-4274-8b13-38b07650677c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Refund a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "refund"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"amount\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4b21bd37-1b43-42e0-be17-057fa76e8d23",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Cancel a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/cancel",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "cancel"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"reason\": \"requested_by_customer\",\n    \"options\": {}\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b8198b98-5217-487b-b2c3-104c8307bad5",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationInfo",
      "item": [
        {
          "name": "Get all user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e65eb65c-d6e7-4aa2-949a-a4a95936655d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2cdbc8bb-e6ef-42df-bf85-b5f425623bb5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bc21ff1b-4093-4258-8c70-0f85b72c4203",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationInfoId\", userAuthenticationInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe Updated\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6e0fc17a-d8b7-4125-ae39-cc836a5dc191",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "66e9e1f5-4b29-428c-b968-16df198e6bde",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationOidcProfileInfo",
      "item": [
        {
          "name": "Get all user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "306f10a7-abbc-420a-b8e6-d476a92c8b51",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d17fc0d0-31bc-451a-abca-4f34b5a26dc6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication OIDC profile info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject\",\n    \"issuer\": \"{{oidcProfileIssuer}}\",\n    \"oidc_profile_id\": \"{{oidcProfileId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "aa62c07d-fb44-49c8-b67e-cc81479be914",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationOIDCProfileInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationOIDCProfileInfoId\", userAuthenticationOIDCProfileInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication OIDC profile info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject Updated\",\n    \"issuer\": \"{{oidcProfileIssuer}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6443e157-b8c6-4a7d-b978-390761dfcd0c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication OIDC profile info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "85e41218-f8f7-4b1d-a164-0ce994f3dd41",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationPasswordProfiles",
      "item": [
        {
          "name": "Get User Authentication Password Profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2265c686-924c-4ab8-b94c-af63bdd057c5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get User Authentication Password Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3d8625fb-8198-44f6-ad8c-f8d0b5361f8b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create User Authentication Password Profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_password_profile_info\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d3d05d88-cf67-49da-9279-b4873bfc677d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationPasswordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationPasswordProfileId\", userAuthenticationPasswordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Authentication Password Profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{userAuthenticationPasswordProfileId}}\",\n    \"type\": \"user_authentication_password_profile_info\",\n    \"username\": \"john.doe\",\n    \"password\": \"password.new\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6863a6a2-ee5b-4281-b263-0baea819e4e5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete User Authentication Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "902c436e-3152-4b4d-8317-8bb3d3b7231c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variations",
      "item": [
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "028291d9-8db0-4568-af5e-3f917a448cda",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1c103880-6716-4c46-ad92-6a440d26e73d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationId}}\",\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Color\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "17d9f219-efdd-4bab-b6ff-401ee3a89c8c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "79b26e3c-81cf-49fd-9c86-9bfe374f8e55",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "92b73a22-b24e-403f-b3ad-557ba8eec6b5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Options for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "155e1699-38ce-4028-8aad-6f9b7937ceed",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an Option for a Variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Small\",\n      \"description\": \"Products with a small size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5fdd4049-faba-4a56-8033-c0150b80b74e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionId\", optionId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an Option for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f50e000f-f892-4786-a4c5-4835d149bea3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an Option for a Variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionId}}\",\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Large\",\n      \"description\": \"Products with a large size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3cd04b3a-fecf-49a4-9259-0dc864fdd065",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an Option for a Variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "66f97b3a-3ec2-4bc2-aa83-fa99fcecc9f2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a Modifier for an Option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_prepend\",\n      \"value\": \"Child Product \"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d26ae4d9-2171-47d4-a169-fc47b05d78a3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierId\", modifierId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all Modifiers for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "afe0e453-c4c5-483f-ba83-ef306096c0a5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a Modifier for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7fe2ce0e-a0d2-4268-91f3-bca90135f99f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a Modifier for an Option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierId}}\",\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_append\",\n      \"value\": \" - A Child Product\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7d9a97b0-0100-4dbc-9300-e460e9069bf8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a Modifier for an Option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "930025b3-096f-468e-906e-2f0563d2cdbb",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variationsLegacy",
      "item": [
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ea65525d-79a7-44b0-802d-b6c6279de0d8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)",
                  "d.each((item, index) => pm.environment.set(`variationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1da9c2ee-8fe3-4037-8b77-175550c60172",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8165760d-b29f-4d0f-8bba-7f12f5305a48",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationID}}\",\n    \"type\": \"product-variation\",\n    \"name\": \"Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f9769798-888a-4347-90d4-804daa441f52",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a72094d8-72ce-4254-a391-33a6d199e85b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all variation options",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1a5cacab-fbde-4049-a020-28de0f86628f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)",
                  "d.each((item, index) => pm.environment.set(`optionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8bb24d8e-fda1-4f1b-a154-596c708e3fd6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"name\": \"BLUE\",\n    \"description\": \"Our most popular color\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "14ea153a-ee99-4e8c-9b0e-6870d5c4adef",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionID}}\",\n    \"type\": \"product-variation-option\",\n    \"name\": \"RED\",\n    \"description\": \"Reddish\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "29ce2135-aaf3-4bfd-ac3d-60590119dbee",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0ba82ee3-905b-4a2f-a4cb-7087e26b0fdf",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product modifiers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "55dedc34-ac19-44e8-b7f0-23f2d9739d32",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)",
                  "d.each((item, index) => pm.environment.set(`modifierId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product modifier",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a631b388-6f05-4351-bd9d-af8cda02f4f6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a product modifier",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Promotional product\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "99d3cfb8-da7b-4f35-9cc9-7adacafffe4d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product modifier",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierID}}\",\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Updated Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "99392d6a-ece1-481a-90d9-cb89eb3362c4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product modifier",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6b56fe38-6174-44a6-88ae-e7dfc193b0b5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Build child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}/build",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "833e6059-1693-401d-a1cb-914f0d0d7086",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    }
  ]
}