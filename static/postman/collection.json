{
  "info": {
    "name": "EPCC - Sep 6, 2024",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "accountAddresses",
      "item": [
        {
          "name": "Get account addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d3a076e6-e78f-4981-9ad3-bb940a0e9973",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)",
                  "d.each((item, index) => pm.environment.set(`accountAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get account address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "64a41d61-4686-4fe3-b0b4-7e27354d021c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "54efa4a8-1492-494f-867d-4d3d1ae578af",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{accountAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "199632f7-6781-4e00-bf19-31d714d3c0f3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7573f0be-f1ba-472b-98ad-b10b6cd66516",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "accounts",
      "item": [
        {
          "name": "Get account authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b09b0a2f-e601-4231-bd64-c5e060fe2033",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "pm.environment.set(\"authenticationRealmId\", d.relationships.authentication_realm.data.id)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account authentication settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_authentication_settings\",\n    \"enable_self_signup\": true,\n    \"auto_create_account_for_account_members\": true,\n    \"account_member_self_management\": \"update_only\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8d5e7beb-26e7-45c2-b434-295a2f9a85b9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all accounts",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0021c975-12f0-4e5e-9b34-f9e74c8707dd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)",
                  "d.each((item, index) => pm.environment.set(`accountId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "61b8a79a-c91f-4a4c-a90a-992ed39c26b7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse\",\n    \"legal_name\": \"Bluefuse Ltd.\",\n    \"registration_id\": \"{{$guid}}\",\n    \"external_ref\": \"Bluefuse Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "602040ee-91b0-49de-8277-4523259e4657",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a sub account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Canada\",\n    \"legal_name\": \"Bluefuse Canada\",\n    \"registration_id\": \"{{$guid}}\",\n    \"parent_id\": \"{{accountID}}\",\n    \"external_ref\": \"Bluefuse Canada Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1bc5a9cc-dd00-47ca-a496-aa302faa8519",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Updated\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "52c13875-4d44-4631-bb7f-a811dc2ed45f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an account",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "697d18d5-1161-4e60-bf27-427e5708da51",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members",
              "host": "{{baseUrl}}",
              "path": [
                "account-members"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6f04b847-5fb1-490a-a963-e82264590e5e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMemberID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMemberID\", accountMemberID)",
                  "d.each((item, index) => pm.environment.set(`accountMemberId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all unassigned account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/unassigned-account-members",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "unassigned-account-members"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "497da2ef-967c-44b7-9af4-5695c3ce1a00",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get an account member",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "310d9ca1-de9b-4b1a-962e-c9af9e4b1d36",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account memberships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1423d272-340e-4806-a765-0c5c1b47b36d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all account memberships using Account Member Id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5a2a95d9-d25c-4eff-9394-72425437a452",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account membership",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "aa6c9c57-7c02-415f-bdf2-9ede29a77f17",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account membership",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership\",\n    \"account_member_id\": \"{{accountMemberID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5b2c0e4e-749b-4dca-ad2a-883cc7d7f84b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete an account membership",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bbb51ba1-04b9-47b4-8b02-1a6dafcf40cc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"auth_code\",\n    \"oauth_redirect_uri\": \"redirect_uri\",\n    \"oauth_code_verifier\": \"pkce_code_verifier\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "373187de-9c4c-4208-8291-b7da0182d33a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Username and Password",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"password\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "76593992-cd34-4ed2-9f38-8ecfc385a48b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens with One-time Password Token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"passwordless\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"one_time_password_token\": \"abc123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "347bb350-652a-4db0-a966-1805f0648ae9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Self Signup",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"self_signup\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe@gmail.com\",\n    \"password\": \"password\",\n    \"name\": \"joe\",\n    \"email\": \"john.doe@gmail.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b6b6ed08-e58b-4408-a5b0-dd1698893448",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Switch account tokens",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"account_management_authentication_token\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d0e56067-d445-49af-a402-594d5e5fed0b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "authentication",
      "item": [
        {
          "name": "Get client credentials token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{clientSecret}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9c824fd5-b5d8-4e0d-9444-dc0fcc2a8c24",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get implicit token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ed1a3f76-5784-4670-b5eb-5189050629c5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "brandsLegacy",
      "item": [
        {
          "name": "Get brand attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f39b4f9c-d2f5-49ad-a1c4-e3cb551e8c5e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all brands",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "91705137-c727-4497-b274-ef825f42f13a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)",
                  "d.each((item, index) => pm.environment.set(`brandId{index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single brand",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "deb73c09-ac3c-41ed-b823-ea8444d1542d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a brand",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\",\n    \"slug\": \"lamprific\",\n    \"description\": \"Lamprific lamps\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8d4ce382-88a6-4eb6-b02d-79d3ace5e146",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a brand",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{brandID}}\",\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8344d6db-daf4-4f9c-bbea-c5bd971ddacf",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a brand",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "23b4f51d-f677-4987-a45f-58b537a47e7f",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAddresses",
      "item": [
        {
          "name": "Get customer addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f88a79e1-5b1c-47ce-a30e-db6747c23d45",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)",
                  "d.each((item, index) => pm.environment.set(`customerAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get customer address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "93117d91-d5bb-4f40-979f-9e014f20f351",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "80c6b7ad-de03-446a-96b3-7efde5c002d7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{customerAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9cdffc6d-e9e0-4cb2-9e5a-c0d85292e7ed",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "66e85401-90f5-4045-a1c3-c6f661adc6e5",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "carts",
      "item": [
        {
          "name": "cart_management",
          "item": [
            {
              "name": "Create a custom cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e513e870-ab86-4582-b0f8-72470c8e0324",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a cart",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1a40cdf7-33d9-4bed-bca5-5eb7f8efe1b6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "aea47b3f-986f-4784-8cce-45160ad17438",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "edc22673-5324-4ea2-8c55-09eb0e83917a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a promotion preview cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5b581c19-60aa-4671-80e2-8e51222eaace",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart to preview mode",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "21274988-0868-484f-91a9-6b743662ba0f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart with custom attributes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"member_status\": {\n        \"type\": \"string\",\n        \"value\": \"gold\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ec38f37d-80a0-40f9-bc23-c50a37c5a8b2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart with custom attributes",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"other_status\": {\n        \"type\": \"string\",\n        \"value\": \"silver\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ccf58473-3dc7-445e-9194-4f42f9079b64",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customer_cart_associations",
          "item": [
            {
              "name": "Get customer carts",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e1956de9-ddd5-4394-b764-36efac7af123",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create customer cart association",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f70a8c98-5740-4418-9378-374e908325b1",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete customer cart association",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f278163c-a00d-42e5-a5f3-2f07dc9613be",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_items",
          "item": [
            {
              "name": "Get cart items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b11f7383-9d8b-447e-9cea-233a493c0bc1",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add product to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2e1e89b4-ef8e-4a37-a330-5cc916a56b27",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add product to cart with shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1,\n    \"shipping_group_id\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7c661a28-21c5-46b3-b90d-812d79ad7136",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add custom item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_item\",\n    \"name\": \"My Custom Item\",\n    \"sku\": \"my-custom-item\",\n    \"description\": \"My first custom item!\",\n    \"quantity\": 1,\n    \"price\": {\n      \"amount\": 20000,\n      \"includes_tax\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "579b4c93-d544-4902-a4bc-430d9dea6b22",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add a promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_item\",\n    \"code\": \"PROMO1\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "43127a91-3f13-4bdb-8c15-157e30957a2b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion via promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/discounts/{{promoCode}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "discounts",
                    "{{promoCode}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "12913599-996d-43f8-935c-63f4b12d7474",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_item\",\n      \"name\": \"My Custom Item\",\n      \"sku\": \"my-custom-item\",\n      \"description\": \"My first custom item!\",\n      \"quantity\": 1,\n      \"price\": {\n        \"amount\": 20000,\n        \"includes_tax\": true\n      }\n    },\n    {\n      \"type\": \"cart_item\",\n      \"id\": \"{{productId1}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"cart_item\",\n      \"sku\": \"{{productSku2}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"promotion_item\",\n      \"code\": \"{{promoCode}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "17e9ced8-0ecd-4106-b526-42ba53ac9252",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Re-order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"order_items\",\n      \"order_id\": \"{{orderID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "291288b3-412f-4330-8138-ef5f7a1c9b27",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Cart merge",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"cart_items\",\n      \"cart_id\": \"{{cartID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "074df052-c9f0-4f24-9181-b13f45a54a9c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "44a43b7b-5069-4417-a422-2b90a3a5cc61",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"shippingGroupID\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "39029853-4423-45c0-9a7c-2423cd9aef9c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk update items in cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"id\": \"{{cartItemId1}}\",\n      \"quantity\": 2\n    },\n    {\n      \"id\": \"{{cartItemId2}}\",\n      \"quantity\": 3\n    }\n  ],\n  \"options\": {\n    \"update_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1f833f8d-57fe-468e-9780-c7bc4111b1b7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "72ba1aac-de35-4c19-91ce-0b1735d275ac",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete all cart items",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ea12ffe5-5756-47d8-b086-26e09b8714aa",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "tax_items",
          "item": [
            {
              "name": "Add tax item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"TAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "031a47c7-22c6-49e2-8caf-91b116a917fa",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk add tax items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name1\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX01\",\n      \"rate\": 0.1,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name2\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX02\",\n      \"rate\": 0.2,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4ae5cda0-d0d9-4fe0-a2f1-b460cff496bd",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a tax item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"MYTAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6f518e64-e078-4c79-9708-3d71c44151d1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a tax item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8e8b7e8c-e7ea-4fa2-9c55-2e2d5dac3291",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk delete tax items from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "38944f80-83ce-486b-acd4-142b157b2b92",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_shipping_groups",
          "item": [
            {
              "name": "Get cart shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "129cf69a-185a-4956-99d9-d0605e3ce3b2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single cart shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7c89fdea-0b47-4c25-b4bd-65f2d8cfe0fd",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_1234\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-04-25T00:00:00.000+00:00\",\n      \"end\": \"2023-04-29T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f783aa38-df64-4e98-a3b9-d5f552d59b1d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_5678\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-05-01T00:00:00.000+00:00\",\n      \"end\": \"2023-05-05T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5a2b15e3-55ae-477e-b22e-156c0d18e273",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "custom_discounts",
          "item": [
            {
              "name": "Add custom discount to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c5e5466c-41fe-42de-a018-575605f71638",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fba11e73-cc8d-424a-999c-994f5f2d18f8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "582ae78f-3a5b-401d-b8a2-b839bd114caa",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add custom discount to cart item",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e7f34c31-51bc-421b-be0c-7874bf2bc1bf",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5d10ff07-16d4-4631-bc54-391e17ff25dd",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a8ab0811-4ba2-4d4a-bb42-c32e63a58d14",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add custom discounts to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -1000,\n      \"description\": \"Custom discount description\",\n      \"discount_code\": \"cart-custom-promo-code\"\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"cart_item\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"custom=item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"custom_item\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "806a5400-bfb7-4069-918e-24be332ac796",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk delete custom discounts from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cc443d27-abd8-4a56-b9ae-5671414abe00",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_payment_intent",
          "item": [
            {
              "name": "Setup a Stripe Payment Intent for the cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"receipt_email\": \"your_receipt_email@email.com\",\n      \"automatic_payment_methods\": {\n        \"enabled\": true\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0b608e4d-4d64-41ea-8341-8b1dcd9724b6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Stripe Payment Intent for the cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments/{{paymentIntentId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments",
                    "{{paymentIntentId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d6e89e8c-7257-4376-8924-2b78a2da80b5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "catalog",
      "item": [
        {
          "name": "Get shopper catalog",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog",
              "host": "{{authUrl}}",
              "path": [
                "catalog"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c5f69ce0-bd93-4da3-8e4e-2409552e80b4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7f814b49-1892-468a-8b8f-e1596fa3ebc0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "162b3187-86c0-4eab-9f14-9c91a240ca47",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cc0badc0-c3e1-47f8-8c32-acd24818524d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1a4b4fc3-63ce-4820-9819-26e58dbbc2bb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86a765dc-270a-47ca-b627-5f774feb0001",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7a612383-b2ee-448c-922e-44386ce4e282",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "de8a1cc2-c765-4eda-a346-0088372c3a2f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e7347c8b-25d1-4a7d-819a-7e2a58921b89",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products/{{productId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e6d69c74-a466-4610-8c6a-54cce4978307",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "40f2d549-15ce-4a37-b498-0df433f4cdeb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "54d8b7d5-84d5-44bc-8fb1-4e4e2791e3c0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "catalogs",
      "item": [
        {
          "name": "catalog_configuration",
          "item": [
            {
              "name": "Get all catalogs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7baf5fc8-4b01-4752-be05-3361b81d7e3e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)",
                      "d.each((item, index) => pm.environment.set(`catalogId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get catalog by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cd6b6ab9-744f-4d90-8e45-dfe067ea9a6c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create catalog",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend brand games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b70eae03-0c6d-4dea-906c-3866b2568973",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update catalog",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogId}}\",\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend Games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2be33af1-affd-4650-a8a9-5789006ed212",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "96b75337-9eb6-4e29-a7a8-697a882bcb81",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_rules",
          "item": [
            {
              "name": "Get all rules",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bad04aa0-9a26-40c9-b563-f426504c1637",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)",
                      "d.each((item, index) => pm.environment.set(`catalogRuleId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get rule by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1b25ec5e-b7ce-4b6c-b473-abdc6fb2139b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Channel",
                    "value": "web",
                    "disabled": true
                  },
                  {
                    "key": "EP-Context-Tag",
                    "value": "vip",
                    "disabled": true
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"Preferred Customers\",\n      \"description\": \"Preferred Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4f0af999-26ce-4f33-8f94-106f93e5adb0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update rule",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogRuleId}}\",\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"VIP Customers\",\n      \"description\": \"VIP Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bff42134-7d1e-457a-97e9-1ca6e8992a7c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete rule",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a81dbe83-2ee5-444a-b8c3-f658d4b629e6",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_releases",
          "item": [
            {
              "name": "Get all releases",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1c355d10-ea64-4a0c-9ac3-5cf872d09ab7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)",
                      "d.each((item, index) => pm.environment.set(`releaseId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get release by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9a0118ab-cfb8-48d6-ae6e-417c0159672d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create release (publish)",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0897305c-a7cb-448e-b798-9e3a2f7f7285",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete all releases of a catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f0e7fc4a-4d61-4b66-92ba-3cddc55313f5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a release of catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f54ed1ae-4f5a-4663-aac5-40627cb0ed3a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete latest release of a catalog (rollback)",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4da1c8d7-3bd0-4745-b0ca-31b7da1e6b21",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_by_latest_release",
          "item": [
            {
              "name": "Get latest release",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e5bfd3b3-37a9-4fae-926f-dfe7feadee8e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all hierarchies",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3c92c3bd-d5fe-4bf5-af76-2b23aa8b3def",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"hierarchyId\", hierarchyId)",
                      "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d4c61f0e-dc42-496c-805b-b684f0ce8b03",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8a3b8838-b362-45c1-b3b5-d17bcdfdb9f7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "481bafcd-a04a-4972-9622-9d4b9e79882c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "151902e9-b7b6-4ea4-813c-6cdc42b0c202",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get node by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b6a6aa38-1e22-41d9-a0f4-5a11bfb912e2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get node's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a405a656-ad84-411f-9127-fd0dfe3f3e4c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "55014911-200d-42ec-9112-c5b10ba3adb5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get product by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products/{{productId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products",
                    "{{productId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bca7e737-5e4a-4560-a372-10eb0cf2cee9",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a hierarchy's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7364af77-3cd4-4f28-8590-f0af492993e7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a node's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4152fcab-e32c-400f-a02a-4dcdb421a9ff",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productIdpricebookId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productIdpricebookId\", productIdpricebookId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "categoriesLegacy",
      "item": [
        {
          "name": "Get category attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b3c1a396-372a-43fd-ba20-d5f8432d50ba",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "008dd636-026b-46c0-b7ff-80fd67d1bc79",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)",
                  "d.each((item, index) => pm.environment.set(`categoryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single category",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f1e5cabd-9434-404a-a071-ab449a82ed77",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get categories tree",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/tree",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "tree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7b738bd2-cad3-4f34-be46-d2f04a72bcc4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a category",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\",\n    \"slug\": \"desk-lamps\",\n    \"description\": \"For desk lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cb9c8c92-1d01-4ab2-b965-dbfe349e1bb5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a category",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{categoryID}}\",\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2f7049ad-c4b5-47cd-b3ed-6e98fc3bec8d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a category",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "180efe77-5007-48ef-a266-b23ae34070bd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create parent category relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/parent",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"id\": \"{{categoryID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4c9220ec-6ee4-4c21-a25b-2565ad27ed01",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create child category relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/children",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    },\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fbe7f1ad-d8ce-4645-a8d2-20550c7077aa",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "checkout",
      "item": [
        {
          "name": "Checkout as customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"id\": \"{{customerID}}\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5bab4649-204a-4bab-8344-ed55d2a99df0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as guest",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"email\": \"andy@example.com\",\n      \"name\": \"Andy Dwyer\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d9aaab3d-1398-4287-b0d4-0fe8476d924d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"account\": {\n      \"id\": \"{{accountID}}\",\n      \"member_id\": \"{{accountMemberID}}\"\n    },\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cc83d3fb-d250-4630-b6a4-c9f9faad0bb3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout with account management authentication token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a7043291-5efd-4ea9-8557-a8a0759c8a19",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "collectionsLegacy",
      "item": [
        {
          "name": "Get collection attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9a964c42-7847-46e2-997a-110285b32ae7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all collections",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "65e88c34-98d5-46d7-8ff2-c91a5795cae7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)",
                  "d.each((item, index) => pm.environment.set(`collectionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single collection",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d0938c8b-500e-477b-b777-d9d68531611b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a collection",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\",\n    \"slug\": \"fancy-lamps\",\n    \"description\": \"For fancy lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "39bb9ddc-97d6-450a-a744-8303455eb24b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a collection",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{collectionID}}\",\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "232ad791-b26b-4ccb-b1fb-bc52a6b2420f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a collection",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9b74203a-7e40-48cc-8224-1300d157c48b",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "commerceExtensions",
      "item": [
        {
          "name": "customApis",
          "item": [
            {
              "name": "Get all Custom APIs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "972ac370-ba4b-4af8-9e70-bf060eb345aa",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5e003872-52cd-47f5-b501-c7d658b84d8b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"Description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"api_type\": \"wishlist_ext\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cf92321a-b7f1-41c4-ac52-d5c8d0f9210d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiId\", customApiId)",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)",
                      "const customApiType = Array.isArray(d) ? d[0].api_type : d.api_type",
                      "pm.environment.set(\"customApiType\", customApiType)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"updated description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "28c08ac8-b231-40a0-b178-f6c8328f03e0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8e3768ff-da81-45a6-9d4e-1de8d645f884",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customFields",
          "item": [
            {
              "name": "Get all Custom Fields",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cc94fecf-61af-43fc-8be3-6821c0209e09",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom Field",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7a2c9cab-c311-4f87-94e1-a60807fac63f",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom Field",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Name\",\n    \"description\": \"Name of wishlist.\",\n    \"slug\": \"name\",\n    \"field_type\": \"string\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 16\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1fa33f4f-a908-4966-bc06-cdb573cabcb8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customFieldId\", customFieldId)",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom Field",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Longer Name\",\n    \"description\": \"Longer name of wishlist.\",\n    \"slug\": \"longer-name\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 32\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ee2794b6-5f35-4407-ba92-9070e8611f7d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom Field",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fd90e21a-9fb0-4b78-8c63-c53feff4ce1a",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customApiEntries",
          "item": [
            {
              "name": "Get all Custom API Entries",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9c7aea42-e06e-41ee-8f15-d936dd56ba40",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API Entry",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8590e48f-e9b8-4ffc-b37b-fc2c921c7a2a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API Entry",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bb18c41c-0890-4fef-9511-e268a97102b0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiEntryId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiEntryId\", customApiEntryId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API Entry",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Updated Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "53d490ae-97b4-4d9b-9fdd-851e8616dc79",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API Entry",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ec030df3-3108-41f7-a201-e9d45f276c14",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "currencies",
      "item": [
        {
          "name": "Get currency attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f3fa8065-e0a7-4211-8d02-941389b18792",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all currencies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d2f5f022-5579-4278-8b98-bea44c4fbd04",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const currencyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"currencyID\", currencyID)",
                  "d.each((item, index) => pm.environment.set(`currencyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a currency",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7815ee6d-89c2-4218-a32b-dbc30d9985ad",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a currency",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"currency\",\n    \"code\": \"GBP\",\n    \"exchange_rate\": 1,\n    \"format\": \"£{price}\",\n    \"decimal_point\": \".\",\n    \"thousand_separator\": \",\",\n    \"decimal_places\": 2,\n    \"default\": true,\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ecfa3a5e-2450-447f-83c6-bc7e5ee62619",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a currency",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"default\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d2cf90a7-9bbd-420d-a8da-b53c26283adc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a currency",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "77461697-9f8c-4520-a341-f7ee6a9cb299",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAuthenticationSettings",
      "item": [
        {
          "name": "Get customer authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/customer-authentication/",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "customer-authentication",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0f935312-c1d5-45df-bb28-314d2058cb2c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customers",
      "item": [
        {
          "name": "Get customer attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2bbbbac3-83fd-4728-982f-c720f62972b4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all customers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "81640e43-a0b0-4579-bdf6-65c02a62df45",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)",
                  "d.each((item, index) => pm.environment.set(`customerId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a customer",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d8ba6abd-a4cf-4809-8780-f9ab199e0163",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\",\n    \"email\": \"ron@example.com\",\n    \"external_ref\": \"abc123\",\n    \"password\": \"mysecretpassword\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4b5e70f9-3244-466c-b5c9-64000a5808e4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a customer",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce343a7c-d53f-4636-8784-19f9b958b12e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a customer",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bfc4d276-051b-4ade-a870-0ea6754df569",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate customer token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"email\": \"ron@example.com\",\n    \"password\": \"mysecretpassword\",\n    \"authentication_mechanism\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9ce716aa-2713-425e-a4dd-d6f069ba6853",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate customer token with OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"c2490f06-6d8e-4927-99aa-4bf02b419e96\",\n    \"oauth_redirect_uri\": \"https://example-store.com\",\n    \"oauth_code_verifier\": \"0E934PurR8ExVg6Pj7T4kQewxKzWSfSFG5d15FGfww8\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "305244a4-37a9-4dd3-8748-fcaaf5dd56b2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "files",
      "item": [
        {
          "name": "Get file attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8f3e570c-ebc2-4126-a5ec-450040221f33",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all files",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0bc72eeb-4a96-4f45-b214-d871410fc28c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a file",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "13f39fd6-dc3a-4afa-ab6a-07d823004307",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a file",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "file_location",
                  "value": "",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "public",
                  "value": "",
                  "type": "text",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6a649f16-4ee5-4500-a07c-0ad863c558b2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a file",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5d4ffc28-bac3-4fb0-bb4a-11a23c6d66df",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "flows",
      "item": [
        {
          "name": "Get all flows",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "165f1593-bf95-4a35-bc0b-952ec8500d71",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)",
                  "d.each((item, index) => pm.environment.set(`flowId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7e1993f8-4cb3-4e4f-830c-c2dee7327dac",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a flow",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"flow\",\n    \"name\": \"Products\",\n    \"slug\": \"products\",\n    \"description\": \"Extends the default product object\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e34dc22a-fd04-4c95-a106-2199c420c7dc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a flow",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{flowID}}\",\n    \"type\": \"flow\",\n    \"name\": \"FlowUpdated\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ab8dcebc-233b-46ec-99f2-91caad7adc61",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a flow",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f8c027e7-bba3-40d1-b705-3ceb8afc6932",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all fields",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bafe7083-9c0b-473c-bbcc-872f781f0b02",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all fields on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a47f26a2-e76e-46fc-b56a-17901c67a2da",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single field",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a37080a3-b917-45b5-8cbf-c973c9504408",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a field",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"name\": \"Product Rating\",\n    \"slug\": \"product-rating\",\n    \"field_type\": \"integer\",\n    \"validation_rules\": [\n      {\n        \"type\": \"between\",\n        \"options\": {\n          \"from\": 1,\n          \"to\": 5\n        }\n      }\n    ],\n    \"description\": \"Average rating as given by our users\",\n    \"required\": false,\n    \"default\": 0,\n    \"enabled\": true,\n    \"order\": 1,\n    \"relationships\": {\n      \"flow\": {\n        \"data\": {\n          \"type\": \"flow\",\n          \"id\": \"{{flowID}}\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1b113770-4a97-4c9c-bd61-10ee828683ac",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a field",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"id\": \"{{fieldID}}\",\n    \"field_type\": \"integer\",\n    \"slug\": \"product-rating\",\n    \"name\": \"Product Rating\",\n    \"description\": \"Average rating as given by our users\",\n    \"required\": true,\n    \"default\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8f6073be-55c5-492b-aecb-73dfd498584b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a field",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "460d9204-6cdf-448d-a48f-91c301edf6d3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an entry",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"FIELD_SLUG\": \"a value\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "88a3e456-f971-4b87-a25a-e07bacf93b88",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single entry",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e15ffa86-3053-420d-97a2-ef6de57b462c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"id\": \"{{entryID}}\",\n    \"FIELD1_SLUG\": \"value1\",\n    \"FIELD2_SLUG\": \"value2\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "867da558-2254-4f14-bd5f-ad154e8f97c2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "19b49c70-1e53-46c9-b50d-d91257e0c797",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all entries on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e265ea2b-323d-4c56-92fc-a12ec315bd1c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)",
                  "d.each((item, index) => pm.environment.set(`entryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create an entry relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{fieldSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{fieldSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    },\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fc87db50-7915-40e4-924b-806530c9d512",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry relationship",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b8c1e7c7-dba6-472d-a875-1ed96c487b7b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "461a91b1-f07f-4993-b7fd-af73ad6c67c4",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "gateways",
      "item": [
        {
          "name": "Get all gateways",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways",
              "host": "{{baseUrl}}",
              "path": [
                "gateways"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "92beab55-59ef-4c2c-900c-cff8b08ce81f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const gatewaySlug = Array.isArray(d) ? d[0].slug : d.slug",
                  "pm.environment.set(\"gatewaySlug\", gatewaySlug)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a gateway",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways/{{gatewaySlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "{{gatewaySlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4d681c44-ffa7-4496-9bda-869935493894",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Manual gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/manual",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "manual"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4d6ca4aa-e7ee-402b-b9ea-34956cc59c6a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1e45f75d-41de-4ad4-a366-6df4a9542bbe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6d639343-65cd-490d-83ea-0bd89142abcb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Intents gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_payment_intents",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_payment_intents"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d7ae187f-734a-4f65-b26f-df0671b51280",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Connect gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_connect",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_connect"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0cf46e9e-5184-488e-b585-26310e240d13",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8fcd15f4-491d-4e21-84b3-da74e528deca",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update PayPal Express Checkout gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/paypal_express_checkout",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "paypal_express_checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"payer_id\": \"{{merchant account id}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7edd0f05-9162-4fd6-ab5e-655a56bf1874",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update EP payments Stripe",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/elastic_path_payments_stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "elastic_path_payments_stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bd48dec9-1457-4ea5-838a-701620c48918",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Authorize Net gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/authorize_net",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "authorize_net"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"login\": \"{{loginID}}\",\n    \"password\": \"{{password}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "214f2d4b-ef30-4581-a940-72ca1f8af868",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "hierarchies",
      "item": [
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bb729453-9f00-465a-962a-fd8eced054cd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5aeab0c5-5fb9-4274-a83b-a8b7e152ba11",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a hierarchy",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games\",\n      \"description\": \"All the games we sell\",\n      \"slug\": \"games\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8dbe60c8-d7f2-4329-a1a0-a1e7cae987ff",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a hierarchy",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{hierarchyId}}\",\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games for Kids\",\n      \"description\": \"All the games we sell for kids\",\n      \"slug\": \"games-kids\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c60e3a46-ca7f-4583-819b-c92e56d761ff",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a hierarchy",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8067898d-5438-42a4-b1f3-a7b5e510c713",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce4573de-bdfa-4c10-923e-a69492f97ddb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "integrations",
      "item": [
        {
          "name": "Get integration attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8fd982f9-7444-4234-82b8-2141ac4bd904",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all integrations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "43907f7d-beab-47ac-b235-adea835524a4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)",
                  "d.each((item, index) => pm.environment.set(`integrationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an integration",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7a1b31a4-7672-4ffb-9ef6-4bb88fbe0636",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an integration",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"integration\",\n    \"name\": \"Order notification\",\n    \"description\": \"Send an order notification via email with discount code.\",\n    \"enabled\": true,\n    \"observes\": [\n      \"order.created\"\n    ],\n    \"integration_type\": \"webhook\",\n    \"configuration\": {\n      \"url\": \"https://yourwebsite.com/order-created-notification\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "048faf80-d8c5-4b69-9044-79111cda7e89",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an integration",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{integrationID}}\",\n    \"type\": \"integration\",\n    \"observes\": [\n      \"order.created\"\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2e8462e9-9240-4530-b7ea-1512605f4c49",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an integration",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6568d976-9e23-453c-975f-370ba931a3ad",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5c115575-c85f-4e30-8850-6ea8dacee2ca",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "de223a1c-e97a-496c-acd7-cecce8c665ac",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8dc6c69b-b5ca-4a9e-b06f-3a034d5df6a5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationJobId\", integrationJobId)",
                  "d.each((item, index) => pm.environment.set(`integrationJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get integration job logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs/{{integrationJobId}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs",
                "{{integrationJobId}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "75f4f4d8-358a-48b2-b858-aeb434d56d17",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "inventories",
      "item": [
        {
          "name": "Get all inventories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories",
              "host": "{{baseUrl}}",
              "path": [
                "inventories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a4b92479-77a2-4a94-990f-3dbfe9fb4742",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product inventory",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "48aba9ae-f18c-4c8b-a2f8-4dbd58b2f775",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product stock transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "51e84419-f583-401c-9777-ef35ed2863c4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product stock transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "926b36aa-50ab-4bfb-96d0-8b1294ce2958",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a stock transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"stock-transaction\",\n    \"action\": \"increment\",\n    \"quantity\": 3\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f0b89caa-1691-439f-a8b7-7b20d7cc898f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create inventory",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"quantity\": 1000\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "57a5a38f-2260-4472-b5c0-040eb107a174",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete inventory",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bd692deb-0ae7-4e44-a8e9-3cca8c7994f2",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "jobs",
      "item": [
        {
          "name": "Get all jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c77806e1-0cd1-495e-9b63-26d17ff570fb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const jobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"jobId\", jobId)",
                  "d.each((item, index) => pm.environment.set(`jobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a job",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": "{{baseUrl}}",
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4a184df4-db4a-414c-8fba-f8be2469d480",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a job",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"job\",\n    \"job_type\": \"order_export\",\n    \"filter\": \"gt(created_at,2020-04-28):lt(created_at,2020-04-30):eq(payment,paid)\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "597fb7b9-97d6-4381-bfe4-57e8fe73c26b",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "keys",
      "item": [
        {
          "name": "Get all keys",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1c7fa195-1aef-4cbb-95f8-a920d672c4ec",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a key",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"Pawnee City Parks and Recreation Department\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b5a6bcea-0645-4e2c-babe-c42ca2d9164f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const keyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"keyID\", keyID)",
                  "const clientID = Array.isArray(d) ? d[0].client_id : d.client_id",
                  "pm.environment.set(\"clientID\", clientID)",
                  "const clientSecret = Array.isArray(d) ? d[0].client_secret : d.client_secret",
                  "pm.environment.set(\"clientSecret\", clientSecret)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a key",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9de9b8b9-8538-46a5-b86e-4a459b8e1ef0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a key",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b4805b35-941b-4032-a01a-13b7e8dd938a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a key",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"New Key Name\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b0255e3c-ea46-416f-b66b-8dd38aef528b",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "merchantRealmMappings",
      "item": [
        {
          "name": "Get merchant realm mapping",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "318b46c2-058b-45f5-9bbc-bd0893c2d7eb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantMappingId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"merchantMappingId\", merchantMappingId)",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant realm mapping by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0663b047-2abb-4e50-a4e7-389abe21da69",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update merchant realm mapping's store prefix",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"merchant-realm-mappings\",\n    \"prefix\": \"myNewStorePrefix\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "04d03163-b6ae-4652-9d89-531c5309033e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant oauth2 profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}//merchant-oauth2-profiles",
              "host": "{{authUrl}}",
              "path": [
                "",
                "merchant-oauth2-profiles"
              ],
              "query": [
                {
                  "key": "prefix",
                  "value": "{{merchantStorePrefix}}",
                  "disabled": false
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ]
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d6f57b41-a554-4aec-bc4c-e7ae1a927f3f",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "nodes",
      "item": [
        {
          "name": "Get a node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "eb18d14c-fe87-43d8-9cef-211f3460b45e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a node",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Accessories\",\n      \"description\": \"Game accessories\",\n      \"slug\": \"accessories\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a27d16e5-a300-4294-99d5-56a0aeea5a97",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a node under parent",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming Keyboards\",\n      \"slug\": \"gaming-keyboards\"\n    },\n    \"relationships\": {\n      \"parent\": {\n        \"data\": {\n          \"id\": \"{{nodeId}}\",\n          \"type\": \"node\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "62a511a6-e130-4921-a34b-4b55725e9911",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{nodeId}}\",\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming keyboards for the dedicated player\",\n      \"slug\": \"gaming-keyboards\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1464358e-f79f-48d0-8d77-077917ee61b4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "66bb378e-434b-41b6-a51e-7387bbd21fda",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9fe87274-47e2-451a-afed-fa1c5706931c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create child node relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"node\",\n      \"id\": \"{{nodeId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a81fe397-4f48-41a3-b07f-d171aefaa53b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node's parent",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"id\": \"{{nodeId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ed6c4bd3-3a58-45ff-adc3-e7e782a8bb41",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node's parent relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2392b274-de1b-404a-8b64-d06eb3fdb7fc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "38c7e7e9-5a82-4ccd-98b9-cb84ed932f30",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create relationships to products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "49db3ddf-0131-4b12-97ce-32ce943b76aa",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete relationships to products",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a11ce5ba-553c-45bf-928b-81f246444f7d",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oidcProfiles",
      "item": [
        {
          "name": "Get OIDC profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8040fbaf-665d-4228-8dcb-456ba7979b6c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get OIDC profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a9822311-578d-4d90-9d10-3c520630286f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create OIDC profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d2f56f98-a8d4-47fe-83e3-8a9bc20690d1",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const oidcProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"oidcProfileId\", oidcProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update OIDC profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0d48ea0e-1d50-451c-bfca-69dd6afb822c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete OIDC profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "529213cd-8928-414e-8e40-63b333e5d39c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oneTimePasswordTokenRequest",
      "item": [
        {
          "name": "Create One-time Password Token Request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}/one-time-password-token-request",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}",
                "one-time-password-token-request"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"one_time_password_token_request\",\n    \"username\": \"john.doe\",\n    \"purpose\": \"reset_password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ec6246da-b19d-4b39-b27b-b5ac386da177",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "orders",
      "item": [
        {
          "name": "orders",
          "item": [
            {
              "name": "Get order attributes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/attributes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "attributes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c4d4c6d5-df9d-4c3e-8eec-39c8e529d6d0",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "531067a4-fb29-40ec-9e71-08bbffb056f4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get an order",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f5a98deb-0b75-4b65-924d-b0aa42136fcb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping_address\": {\n      \"first_name\": \"Ron\"\n    },\n    \"external_ref\": \"external_order_123\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c7c265af-a280-4875-814a-6dd1ca208a76",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Fulfill an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping\": \"fulfilled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "54014a3d-6b38-4a04-8f95-d4992e4ad507",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"status\": \"cancelled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6d274994-7708-4a13-8f8d-607e0978293e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get customer orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9ddeb246-0d25-4f69-937e-d948ccbf8189",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get order items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c62a3a32-963f-4459-b878-d749371ad68e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize orders",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"order_ids\": [\n      \"{{orderID}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "85b4b591-879a-4d13-8b9b-2a4ec1b1d2a0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm an order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"metadata\": {\n        \"order_id\": \"{{orderID}}\",\n        \"statement_descriptor\": \"Confirmed intent\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d07925b3-507d-4d7b-9d3a-1939430412a3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "order_shipping_groups",
          "item": [
            {
              "name": "Get order shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "34a2eb9b-4cd0-459e-a5da-250669b4e00c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single order shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups/{{orderShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups",
                    "{{orderShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "34c9482f-e167-4bbd-9f59-0d203cfb7df9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "passwordProfiles",
      "item": [
        {
          "name": "Get Password profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "51066bc3-76be-4b87-aa94-b425da8b2d11",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get Password profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1c00f700-f5c5-4268-9bb9-5faa50cdb10f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create Password profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"email\",\n    \"type\": \"password_profile\",\n    \"name\": \"password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "095107c1-3f65-4d84-867d-9ec86c3a488c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const passwordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"passwordProfileId\", passwordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Password profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"any\",\n    \"type\": \"password_profile\",\n    \"name\": \"updated password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "99d82758-fd7c-4704-a7f7-13ac861f219b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "78922778-0a6d-43e3-a259-583dbc162d05",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "payments",
      "item": [
        {
          "name": "adyen",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"authorize\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"shopper reference\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a271894e-e35a-4d70-b7a7-db54b6e35963",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"purchase\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"<shopper reference associated with token>\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "85056563-13a5-4c5d-8e6b-61810387f092",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "authorize_net",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"authorize\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e96d86b1-a5d3-4dbe-8be3-c15bc5c0253e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"purchase\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "db5a66ec-1f4b-40ca-980f-62db89722b2d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "braintree",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4e546831-a579-4b52-87c6-fd04ed7c0d73",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fa82a8d0-76b0-492c-8d92-570e16249942",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "948189fb-afd2-4322-b4ad-0f30c649777a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c7886f9d-e369-4a5c-85a6-da3766f17dd0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e2a9abd0-373a-491b-855b-40fe93474bd3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ce2b3682-d2ea-4e50-9c3d-5d7486e184ea",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "card_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "72aab465-71a2-432a-88de-4f82f8f343d1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6cd80b5d-1b19-4c09-aa73-57e7c159fb0b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cybersource",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"authorize\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f3a5ac44-f0fc-45af-ba88-abd57ad812e8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"purchase\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c8a606bb-6cb4-4a39-bae7-fedec647bd17",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "manual",
          "item": [
            {
              "name": "Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"authorize\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fcd3bf75-a005-4e7f-bd82-02ac30c117ce",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"purchase\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "56de3b49-abbb-4ac0-8b6f-3af3b2ba51ef",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "paypal_express_checkout",
          "item": [
            {
              "name": "Setup Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "dd7c134c-4a56-4ad1-ad90-847b89656813",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Setup Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"purchase\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ae2dbdde-6e6f-4fc0-8816-6b65648c3b8b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4908e0d1-fa56-419c-9e38-84cce952a5f5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Capture Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "capture"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"soft_descriptor\": \"Test soft descriptor\",\n      \"note_to_payer\": \"Capture note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0cdbc824-53a8-434a-952f-27bdaee438b1",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Refund a payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "refund"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"amount\": 1,\n    \"options\": {\n      \"note_to_payer\": \"Refund note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "36b1fdad-86af-4e5a-b870-c5bb88a53129",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f9e41b1b-c1c9-4990-8b90-0470630f3d9d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "79b35997-4ee5-41d6-8af1-d3811c73b825",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_intents",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bbfeda72-ac35-40d3-ba11-100ff960fe27",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cf822b24-3d5b-4b07-bfbf-e1a09450e96f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "946b37fe-1fb8-457e-a33f-9042a2c7ab86",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "996573ce-f446-44e3-92a7-8c5e24ecf249",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d70605cc-90e2-4354-9c05-cf9f8c7ade4c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5d77ff79-6e98-453c-90f5-4959226305ee",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "65bd559d-8282-4d40-9c77-a5964e82bc80",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6429b3ae-c029-4396-ba00-cabd6226d9de",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "ep_payments_stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9f99867f-f644-4510-acce-96d7b7f9d5cc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_threeDSecureRequired\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\",\n      \"confirm\": true,\n      \"execute_threed\": true,\n      \"confirmation_method\": \"manual\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e6b0a3c1-bc0b-4329-9500-2d0983aa5f17",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c58b834f-056f-429d-a515-ee18a6c47453",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "42a7c04e-1183-457e-8105-16746e65d06a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5e32e895-dacd-44e6-be3b-c0827ba69373",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9d274751-f472-44c0-8ba9-400899e90020",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "31e88d86-5c98-4bc0-b198-3a849e14b751",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "personalData",
      "item": [
        {
          "name": "Get related data entries",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d1161acf-7ef7-48a2-b46e-deabba0745a6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "285366b5-ee3f-4596-91a6-cc7580eb5a20",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create erasure request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"resource_id\": \"{{customerID}}\",\n    \"resource_type\": \"customer\",\n    \"type\": \"erasure_request\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1721d383-a19d-4049-9237-4a0bd32870f0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const erasureRequestID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"erasureRequestID\", erasureRequestID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get erasure request",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests/{erasureRequestID}",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests",
                "{erasureRequestID}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "075933ee-c7d9-4810-8137-6b7272593d9a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get erasure requests",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fede0788-2084-4297-b72a-0765d8c03b17",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update TTL",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"time_to_live\",\n    \"days\": 20\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7f6074af-6a71-4d2a-ade0-35dee0daaed0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get TTL",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8c6783a7-65e1-42e5-9a10-0bf5cf7a148a",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pimJobs",
      "item": [
        {
          "name": "Get all Jobs for PIM",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a0d285f5-6a06-4d98-9928-1e6008252f31",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)",
                  "d.each((item, index) => pm.environment.set(`pimJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a Job for PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4a8edd6b-47fa-4304-8e01-386ff7dc3b00",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Errors for a Job in PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}/errors",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}",
                "errors"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fc518015-73ea-4e7d-b832-e46f233851e9",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pricebooks",
      "item": [
        {
          "name": "Get all pricebooks",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2c0384e3-248f-4545-93d9-4e63341cd97b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)",
                  "d.each((item, index) => pm.environment.set(`pricebookId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a pricebook",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "07fab420-c52c-4163-a18f-3fd52beccd1f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a pricebook",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Standard Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dab4a6d5-02b9-46e3-98d5-5cfc4dd86dc5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a pricebook",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{pricebookId}}\",\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Seasonal Sales Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3ad5f3e9-78cf-4753-b73d-8be48bd7c111",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a pricebook",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "41dffefb-0e9f-429b-b96b-f0acb3fa5846",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product prices",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "15d8ebaa-9f0d-468b-a90c-451c9ebee418",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`priceId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product price by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6abdd6a8-ddb1-4ef8-b906-7c80e51729af",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a price",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 100,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "18d91191-7998-478d-99c7-8cfec711c4e6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product price",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{priceId}}\",\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 300,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e19eb26f-ca2c-48a5-8f16-ac91c7aace8e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product price",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f792053b-8703-4208-b320-9f3af9f78c7c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "products",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0d5a570c-ca8f-47ee-8d7f-c9ec4170c246",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5f19fa72-2809-4306-82a3-aceec0aae85e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"1234-5678-ABCD\",\n      \"upc_ean\": \"123456\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9939e9e7-85be-4d46-a34b-4689458df54a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"id\": \"{{productId}}\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand top of the line gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"9934-5678-ABCD\",\n      \"upc_ean\": \"125656\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d88737e5-221e-4eb2-a0c5-af456b5db403",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e1998556-a96d-4038-ab19-21479c7b7327",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a bundle",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"2 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 2\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cb235734-b632-4cba-82d0-994b936c1b0a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a bundle",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{bundleId}}\",\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"5 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 5\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2d8701fc-4bd2-4e43-98c4-6ebdb6ea0c9c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a bundle",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "25715898-395e-4be1-900a-5ef8aa2a3fde",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a7fdf4b4-12e8-4997-96e8-0bc9e3e01c6f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product's file relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f16f6b55-9f60-4b5f-82d7-6d2710e3fda2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product file relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-1\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-2\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5c6f63ba-25aa-4062-97df-524985a1b83e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Replace a products's file relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0cff06d9-d464-4be1-8246-5e044fb44a8c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's file relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ea269bee-ad92-430c-ba28-caa3384e8238",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's variation relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "42ce98e1-c1cf-4c47-8dad-894d2e156321",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product variation relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1e17aa69-e004-4f50-8b12-71f82fb7178b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Replace a products's variations relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5d799188-6af9-4c6a-b772-9d07357be1c9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's variation relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "128a65c5-7585-4841-926d-09ed5043a45e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Builds child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/build",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "57c3189a-8ffb-4799-bfe3-6cab84259d5f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "productsLegacy",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ece92e82-e705-4287-911f-fe49761afb2e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b8d4ec0d-3712-4ced-b21a-7e72cb808d50",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\",\n    \"slug\": \"desk-lamp\",\n    \"sku\": \"desk-lamp-001\",\n    \"manage_stock\": false,\n    \"description\": \"A cool desk lamp\",\n    \"status\": \"live\",\n    \"commodity_type\": \"physical\",\n    \"price\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"GBP\",\n        \"includes_tax\": true\n      }\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6e52d4e2-2c72-4a75-9d7d-c552b6579edd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9dea6a28-801b-4f76-879f-c9395c8a44f0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d1f10cbb-34d0-4f12-acd6-6c6a4a5f0ca7",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "promotions",
      "item": [
        {
          "name": "promotions_management",
          "item": [
            {
              "name": "Get all promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7f120e27-4853-493f-8b75-d002e428aed5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)",
                      "d.each((item, index) => pm.environment.set(`promotionId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1abc72be-3f01-4fcc-abdf-7bf8d806b471",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a promotion history",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/history",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "history"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b0d4ae4d-47c1-45a3-b0b3-8b607f196e6d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a cart fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"$10 off\",\n    \"description\": \"$10 off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"fixed_discount\",\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"amount\": 1000\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}, {{nodeId2}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue1}}\"\n                    ]\n                  }\n                }\n              ]\n            },\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId3}}, {{nodeId4}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue2}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ca80bf71-949a-48bd-b3c9-8f9ae6f18118",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"10% off\",\n    \"description\": \"10% off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"percent_discount\",\n    \"max_discount_value\": [\n      {\n        \"amount\": 1000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"percentage\": 10\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "163efdfd-cd64-44c3-bbf6-4d68e01c7051",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for Y discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for Y promotion example\",\n    \"description\": \"2 for 1 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_y\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"y\": 1,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue2}}\"\n          }\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "831d69a4-8e9a-4e6c-88c4-29be1a016e4a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for amount discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for amount promotion example\",\n    \"description\": \"2 for 100 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_amount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 10000,\n          \"currency\": \"USD\"\n        }\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f42a9e89-c25d-482b-91f2-8cbb55ffb979",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a fixed bundle discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Fixed bundle promotion example\",\n    \"description\": \"SKU1 and SKU2 for $150\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"bundle_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 15000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "11868bd8-2d36-47a6-806c-6922a4f80344",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item fixed discount promotion example\",\n    \"description\": \"$50 for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"amount\": 5000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId1}}\",\n          \"{{nodeId2}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "10f44bed-3c6c-4e4c-bf22-bae0846491ec",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item percent discount promotion example\",\n    \"description\": \"50% off for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_percent_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"percent\": 50,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId3}}\",\n          \"{{nodeId4}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "82abfd20-7e37-4cd5-b199-0576174df25c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a free gift promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Buy SKU1 and SKU2 to get free gift\",\n    \"description\": \"SKU1 and SKU2 for free gift\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"promotion_type\": \"bundle_gift\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"gifts\": [\n        \"gift\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"auto_add_free_gift\": false\n    },\n    \"start\": \"2020-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "877835d0-baf7-4359-af00-1864d1cb5b48",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"id\": \"{{promotionID}}\",\n    \"name\": \"Promotion name\",\n    \"description\": \"description\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "03b64b03-2d78-47c7-9186-c4004b3d1125",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d4d1e3df-3341-4d6e-8553-5cf7e418e2a1",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_codes",
          "item": [
            {
              "name": "Get promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2cf62386-67e9-4bda-89a3-f3c9d786a218",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      },\n      {\n        \"code\": \"5uses\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_item\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d7f75012-74bf-4de5-a191-e424d4cfb0e6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "165f2b19-2f0b-4e05-8a42-2715405db3f8",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f9c67772-28be-4e8e-8489-0fa1198a8ca9",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes generation job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_generate\",\n    \"name\": \"job\",\n    \"parameters\": {\n      \"number_of_codes\": 1,\n      \"max_uses_per_code\": 1,\n      \"consume_unit\": \"per_cart\",\n      \"code_prefix\": \"promo-\",\n      \"code_length\": 8\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0ee4541e-f6c8-4765-93a9-491cacd2f631",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create export promotion codes job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_export\",\n    \"name\": \"export promo codes job\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c9691bcb-9eee-492c-add2-57fb9211f9e5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel a promotion job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{promotionJobID}}/cancel",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{promotionJobID}}",
                    "cancel"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "71218fc0-ae99-4585-8a1d-b9f7cbc1decf",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion jobs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "73ffbdc2-3b6d-454a-932e-b83d4801f7b0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion code export file",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{jobID}}/file",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{jobID}}",
                    "file"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "38ec5b7f-7103-46ed-995e-29cf8fbd031f",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_usages",
          "item": [
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Public-Search-Type",
                    "value": "cm_search",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "74954f09-29b6-4884-9edd-090f8e1e9baf",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_management",
          "item": [
            {
              "name": "Update a rule promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion update\",\n    \"description\": \"$10 off your order update!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2023-01-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    },\n    \"priority\": 100,\n    \"stackable\": true\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "490e44d2-a42b-427a-b85f-6be30e3899ec",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all rule promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fd78172c-dfbe-46f0-acb7-dc1f9e6463b2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a rule promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "71914569-76ef-4c43-98f5-70892194af74",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "949300cd-349f-4464-b6a5-760c67663ff4",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_rule_promotions",
          "item": [
            {
              "name": "Create a cart fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion\",\n    \"description\": \"$10 off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ce151d30-6133-4693-9d9f-1ee832f8a9d6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"10 percent off cart promotion\",\n    \"description\": \"10 percent off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            10\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "89f7ff54-5316-4da1-b4b2-8b080542cc7c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with max_discount limitation rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart promotion max discount $50\",\n    \"description\": \"50 percent off your order (up to max $50) when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_discount\": 5000\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "274dd4cf-f006-4402-88c0-dbe9bd353087",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with custom attribute rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart with custom attribute\",\n    \"description\": \"50 percent off your order when cart member is gold\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_custom_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"member_status\",\n          \"string\",\n          \"gold\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "626edec6-814c-453e-9a83-b316c16ab8a7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with sub conditions",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart excluding exclusive item\",\n    \"description\": \"50 percent off your order excluding exclusive item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f42ca4b7-9af6-44db-9b1b-421ff21e118a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "item_rule_promotions",
          "item": [
            {
              "name": "Create an item fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy item get $10 off\",\n    \"description\": \"Buy item get $10 off\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4156af31-bbef-455b-bf2d-78a6d2c5aa98",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item discount with condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get Y 50%\",\n    \"description\": \"Buy X get Y 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "aa853669-6f2a-426e-9cca-896d30fc451f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitations and exclusions rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50% max $10 max 2 items 2 quantities from category\",\n    \"description\": \"Items from category 50% off max $10 off 2 cheapest items with max quantity of 2 excluding one item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_quantity\": 2,\n            \"max_discount\": 1000,\n            \"items\": {\n              \"max_items\": 2,\n              \"price_strategy\": \"cheapest\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e984d874-cba6-425c-96c3-89dc2678f83c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitation and condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get one Y for free\",\n    \"description\": \"Buy X get ONLY one Y for free\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            100\n          ],\n          \"limitations\": {\n            \"max_quantity\": 1\n          },\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "48db805e-84b4-4efd-83e8-46f5cb3e1a70",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a mixed of Cart and Item percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"description\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        },\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c0f9cc66-4776-4cd0-9925-34c55d189032",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item fixed price discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy 2 items for $100\",\n    \"description\": \"Buy 2 items for $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed_price\",\n            2,\n            10000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "de138aee-9244-49f1-a69f-1f137ec5121f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item attribute rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items with item attribute discount\",\n    \"description\": \"All items with attribute brand EP get 20% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"products(product_template)\",\n          \"brand\",\n          \"string\",\n          \"EP\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e1d1ba69-2ff8-44c8-b9e2-2a50739d0e53",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with sub condition",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items discount for a category excluding items with attribute\",\n    \"description\": \"50% item discount excluding items with attribute when eligible items exceed $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_attribute\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"products(product_template)\",\n              \"sales\",\n              \"string\",\n              \"sale2024\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ],\n            \"children\": [\n              {\n                \"strategy\": \"item_attribute\",\n                \"operator\": \"nin\",\n                \"args\": [\n                  \"products(product_template)\",\n                  \"sales\",\n                  \"string\",\n                  \"sale2024\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1b26df5e-3fe6-4f88-a7d3-887dec825a32",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item_sku OR item_product_id",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"description\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"or\",\n            \"children\": [\n              {\n                \"strategy\": \"item_sku\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productSku}}\"\n                ]\n              },\n              {\n                \"strategy\": \"item_product_id\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productId}}\"\n                ]\n              }\n            ]\n          },\n          {\n            \"strategy\": \"item_quantity\",\n            \"operator\": \"gte\",\n            \"args\": [\n              1\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "72ba9724-36cd-43d1-8df3-ed15d3f260d7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotion_codes",
          "item": [
            {
              "name": "Get rule promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f1052f52-efe2-48f6-a580-d2c239b2fb8b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\",\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"summer2024_limited\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"fall2024_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_application\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_checkout\",\n        \"user\": \"vip_shopper@email.com\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "63096c71-e946-4b3a-b2c9-13d5bac4e5ee",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "06cfa1aa-10e4-425c-ab72-aefff5a4e686",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple rule promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\"\n      },\n      {\n        \"code\": \"summer2024_limited\"\n      },\n      {\n        \"code\": \"fall2024_limited\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3e83202f-974f-4a0e-a961-722281d1e1f8",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_usages",
          "item": [
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a770370d-5621-46b5-a419-e48c383a4e1f",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages by code",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "252c6c96-9f0b-40fa-9aea-f683ea7f683b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize Rule Promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID1}}\",\n      \"{{usageID2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7c995686-abc4-4ead-afa5-d49ac3bc5e2d",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "realms",
      "item": [
        {
          "name": "Get authentication realms",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce47ec39-5e4d-44b0-8392-b28f6542643d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get authentication realm",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce023f6e-2f0b-4406-a9eb-ba773eef5e39",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update authentication realms",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"authentication-realm\",\n    \"name\": \"Test Authentication Realm\",\n    \"redirect_uris\": [\n      \"https://example.com\"\n    ],\n    \"relationships\": {\n      \"origin\": {\n        \"data\": {\n          \"id\": \"{{storeId}}\",\n          \"type\": \"customer-authentication-settings\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3a415e9c-1483-48cd-9f57-b1310e732fd4",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "settings",
      "item": [
        {
          "name": "Get settings attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "70e4c02f-0adc-4bcb-a92b-a30838a25c75",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "18e96897-a3d3-425f-89f7-bd8ee29a2527",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"calculation_method\": \"line\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "59d578ce-27c0-4fb2-a379-c58fc7e52cc6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete settings",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "91517814-d44b-4681-b3f7-ee9fc5f17d09",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get cart settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0e7c6f0d-3ea8-4fd7-9b41-5accbe068bd2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update cart settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"cart_expiry_days\": 7,\n    \"discounts\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b85f3bf8-3547-4b89-bc21-78ec98605753",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get account membership settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2f96756b-fc45-4ebd-a374-44268a0a2d86",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update account membership settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership_setting\",\n    \"membership_limit\": 13\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6e87e694-79b4-4755-aa35-a1710930f06c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "transactions",
      "item": [
        {
          "name": "Get order transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3078c766-829b-448d-b054-83b1ce6f4448",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c9ddb5f2-3002-4563-9031-fe30f31f1314",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"transactionID\", transactionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Capture a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "capture"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"custom_reference\": \"customRef123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0c22217a-3098-4032-89bd-a5ba28b140c1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Refund a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "refund"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"amount\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d9342256-b34f-4a32-910d-3fbbe0af45b5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Cancel a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/cancel",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "cancel"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"reason\": \"requested_by_customer\",\n    \"options\": {}\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1c68beda-c45b-4b3c-b564-25c3c182d7ab",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationInfo",
      "item": [
        {
          "name": "Get all user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "717c1da2-5f51-4d42-99ee-e3a1817d17f3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "913ce15f-cb7d-4b8c-889d-2007579cd17e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9b0fa7ef-8a72-4747-bf01-d3e8ad0c5543",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationInfoId\", userAuthenticationInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe Updated\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8c83145b-52f8-46e0-8f75-2a60e059df8e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1324a27c-6e14-453f-9e9c-d4d48448386e",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationOidcProfileInfo",
      "item": [
        {
          "name": "Get all user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8ec6ecd5-017c-44a4-8052-27ac1b5ebc98",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7e28c5c3-a81b-4ccb-b4e1-407b614ebecc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication OIDC profile info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject\",\n    \"issuer\": \"{{oidcProfileIssuer}}\",\n    \"oidc_profile_id\": \"{{oidcProfileId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "40e21b00-956c-4671-818c-79910aae325a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationOIDCProfileInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationOIDCProfileInfoId\", userAuthenticationOIDCProfileInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication OIDC profile info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject Updated\",\n    \"issuer\": \"{{oidcProfileIssuer}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "60d261c1-cb45-469d-a125-53a57f047357",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication OIDC profile info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e31fb03b-1376-4660-b3fe-9e84a5731f74",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationPasswordProfiles",
      "item": [
        {
          "name": "Get User Authentication Password Profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "df019198-1250-42a5-8a7d-75fa8bd2471a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get User Authentication Password Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2fc84a81-2df5-4fa1-8cf8-0688123f9d17",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create User Authentication Password Profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_password_profile_info\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f596a1b2-c564-44de-bce0-7162a186a79c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationPasswordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationPasswordProfileId\", userAuthenticationPasswordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Authentication Password Profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{userAuthenticationPasswordProfileId}}\",\n    \"type\": \"user_authentication_password_profile_info\",\n    \"username\": \"john.doe\",\n    \"password\": \"password.new\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "571cf349-4d23-4acc-a323-21bc9bdf3762",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete User Authentication Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8bc50620-9c0f-4670-81c7-5fea2a68ae8f",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variations",
      "item": [
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dd378a03-0379-4c5d-8343-5f3f9ecc5941",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "aa35a409-7104-49b9-8448-f5d9a6752273",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationId}}\",\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Color\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b8bb0ebe-883e-4140-9ffc-0ac8d26f6bc4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d5d21bd4-a0f7-417b-90d1-5024aeed0698",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2c7145b5-6aef-4e36-9ff0-cd3d5c42e9ca",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Options for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "167e8a1c-7979-4296-967d-7f8d9e43624d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an Option for a Variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Small\",\n      \"description\": \"Products with a small size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "294ad099-d41a-4ae5-afa2-3530a41f6cd2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionId\", optionId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an Option for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "eb4934a3-d497-47bb-8b17-60c7a09c4910",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an Option for a Variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionId}}\",\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Large\",\n      \"description\": \"Products with a large size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e94d403a-5137-49c7-91a9-5fc903ec36af",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an Option for a Variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "659b353e-c663-4726-b26d-ec0bc347b13d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a Modifier for an Option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_prepend\",\n      \"value\": \"Child Product \"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "91562175-c4be-40cf-ad72-423602ae2b36",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierId\", modifierId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all Modifiers for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3222d906-6f59-4361-b0f9-51402bdbdb6d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a Modifier for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "529083e6-1686-4c74-b49d-926d9a49dc14",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a Modifier for an Option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierId}}\",\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_append\",\n      \"value\": \" - A Child Product\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ddbc5ec7-d724-4c22-a1d6-820cad1531dd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a Modifier for an Option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7ffda860-79d4-453f-9f22-59b71ed9f2c9",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variationsLegacy",
      "item": [
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "27d868e8-b2f2-4139-a5a5-61fad2a3dbdc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)",
                  "d.each((item, index) => pm.environment.set(`variationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b0a15c81-df68-4661-8ca6-5ce43e0490f9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7b2c8ab8-961f-41ba-96f0-29e1f53afdcf",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationID}}\",\n    \"type\": \"product-variation\",\n    \"name\": \"Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bff8a9f8-4b3d-4aa7-85e7-3bf980d91d41",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "285bea86-eda0-4a71-b1b5-6b2e613c4dbe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all variation options",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a785231a-13a4-484c-ada5-aed5961fb2ed",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)",
                  "d.each((item, index) => pm.environment.set(`optionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a14c75fa-fd7d-405c-a9cf-ff137daf8094",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"name\": \"BLUE\",\n    \"description\": \"Our most popular color\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "25ae7150-c3b9-4cb1-b106-32bed731a536",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionID}}\",\n    \"type\": \"product-variation-option\",\n    \"name\": \"RED\",\n    \"description\": \"Reddish\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d3f69227-62d5-4bbe-82dd-0d0b700dc907",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fb72b286-fb84-4800-a50a-fca01f1e1c85",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product modifiers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "efc017ec-788e-43d9-b55b-0bd6f47db4b9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)",
                  "d.each((item, index) => pm.environment.set(`modifierId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product modifier",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a6dbfa53-430f-4f59-9afb-2a036ba22863",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a product modifier",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Promotional product\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e16c7c65-7fc6-407f-be90-414d230a89e0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product modifier",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierID}}\",\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Updated Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "73baac9e-815e-4fc8-ba1a-97f01e8b0fed",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product modifier",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bf01ced1-fb85-4011-ac24-fd71f7791e45",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Build child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}/build",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f78e2578-f7c8-49d9-9f97-09e3f08956ea",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    }
  ]
}