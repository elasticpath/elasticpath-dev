{
  "info": {
    "name": "EPCC - Oct 4, 2024",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "accountAddresses",
      "item": [
        {
          "name": "Get account addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3bd86d02-b727-4757-aa4b-8fba8c28a1c6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)",
                  "d.each((item, index) => pm.environment.set(`accountAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get account address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9102a5ec-fc85-4acc-ad18-32c35e206e71",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "861f1b4c-0e93-4e12-b6ae-5dd4d0477daa",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{accountAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a760bac7-2d40-48fb-8317-6f23a5666f02",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1e477296-53f6-4725-849f-45ad4d54b222",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "accounts",
      "item": [
        {
          "name": "Get account authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fee175d4-c581-43a2-af65-7ac6a1c73034",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "pm.environment.set(\"authenticationRealmId\", d.relationships.authentication_realm.data.id)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account authentication settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_authentication_settings\",\n    \"enable_self_signup\": true,\n    \"auto_create_account_for_account_members\": true,\n    \"account_member_self_management\": \"update_only\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5bc75243-1f5d-472f-bb5c-2268706acd13",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all accounts",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5923b84e-eb8c-4b65-a2bf-1c81351ccc4b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)",
                  "d.each((item, index) => pm.environment.set(`accountId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "524bd40c-ff33-4a92-8cdd-5b0f2b6fabd4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse\",\n    \"legal_name\": \"Bluefuse Ltd.\",\n    \"registration_id\": \"{{$guid}}\",\n    \"external_ref\": \"Bluefuse Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "551da746-1943-4a1f-9279-2cf1a08b5198",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a sub account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Canada\",\n    \"legal_name\": \"Bluefuse Canada\",\n    \"registration_id\": \"{{$guid}}\",\n    \"parent_id\": \"{{accountID}}\",\n    \"external_ref\": \"Bluefuse Canada Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d6bc7e27-eaca-4e2a-8ea6-0b49b7405dca",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Updated\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c1156c3c-fc71-4d8a-8a00-317039244584",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an account",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7c23956e-df07-427d-bb98-4933995cc764",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members",
              "host": "{{baseUrl}}",
              "path": [
                "account-members"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4102a072-1800-46df-b591-c0ce39045d4c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMemberID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMemberID\", accountMemberID)",
                  "d.each((item, index) => pm.environment.set(`accountMemberId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all unassigned account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/unassigned-account-members",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "unassigned-account-members"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "454662fa-5396-4581-9e65-69975bd203ca",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get an account member",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9a3d107a-d7f8-46bd-afac-7e7b89e30d82",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account memberships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "667ec20c-a045-4b19-a26f-a3752795e429",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all account memberships using Account Member Id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9f5ec498-6a39-4342-8d83-0b16f2a1705c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account membership",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3b88f81f-ebc1-4c38-8ab0-e9d73899510d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account membership",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership\",\n    \"account_member_id\": \"{{accountMemberID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "30ec8661-7220-456f-928d-6f938bad378e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete an account membership",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "754adb51-a699-4813-b5a2-1bed3917e772",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"auth_code\",\n    \"oauth_redirect_uri\": \"redirect_uri\",\n    \"oauth_code_verifier\": \"pkce_code_verifier\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5e7bf946-cf44-4d33-bca5-420a58fe6389",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Username and Password",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"password\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d47e3317-6411-4be0-a24b-05af6ef674f4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens with One-time Password Token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"passwordless\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"one_time_password_token\": \"abc123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "274f76a7-b517-4a87-bb3a-f72212ce9f52",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Self Signup",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"self_signup\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe@gmail.com\",\n    \"password\": \"password\",\n    \"name\": \"joe\",\n    \"email\": \"john.doe@gmail.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a29dbe7b-4675-482e-ab54-1e46781ec631",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Switch account tokens",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"account_management_authentication_token\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7ed7d68d-cb0b-4d2d-a8fb-c9f400fc2d91",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "authentication",
      "item": [
        {
          "name": "Get client credentials token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{clientSecret}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "77ecff66-20b2-4cb5-9219-2bbe200c267a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get implicit token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f6dad88c-0175-4cff-9f1c-2653bc3bdf81",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "brandsLegacy",
      "item": [
        {
          "name": "Get brand attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "87555b08-ba7e-47b3-87fb-cad54ca00ed8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all brands",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5251cd4f-dfa6-4339-8e6e-67c0f4fe4eee",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)",
                  "d.each((item, index) => pm.environment.set(`brandId{index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single brand",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "da40ee7e-e54f-48e9-a0b8-e170747601d6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a brand",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\",\n    \"slug\": \"lamprific\",\n    \"description\": \"Lamprific lamps\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a5be743f-71eb-49e7-a059-34e8cbeb5603",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a brand",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{brandID}}\",\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b6b1cb59-329c-4215-998c-a2248bc5088c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a brand",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5406406d-1440-4941-90f5-bc1a84615585",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAddresses",
      "item": [
        {
          "name": "Get customer addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6270ee55-dc55-4413-af24-258fdf58046e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)",
                  "d.each((item, index) => pm.environment.set(`customerAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get customer address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ec93bf9b-c44a-446e-8a65-9ef7595a48a4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "331dbb0e-f967-4697-8300-a8b4884a04f3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{customerAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ac1c5b39-b2a1-4ca1-bf7e-67117e7e4a91",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9fc77efa-0b05-4fbd-a836-15d703aee503",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "carts",
      "item": [
        {
          "name": "cart_management",
          "item": [
            {
              "name": "Create a custom cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1589f9df-09fc-48a8-b486-ec8935a0b2e0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a cart",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2a82fb2d-e38b-43ca-a5ec-3eac10b04046",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2aa5e8b6-2ae6-43fe-8aea-fbfea90667f5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "74ac1bdc-a85e-48c1-bce9-d4fab08d56e0",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a promotion preview cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c19687f5-9e2a-464a-b8e7-c35987e1487c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart to preview mode",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3867a025-7a44-4441-bddc-989a998cd96b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart with custom attributes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"member_status\": {\n        \"type\": \"string\",\n        \"value\": \"gold\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "49f4762c-cc41-4db5-a5c0-3387ca08eaa5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart with custom attributes",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"other_status\": {\n        \"type\": \"string\",\n        \"value\": \"silver\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f7ff167d-edef-4a0f-94ab-536ca692cd9f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customer_cart_associations",
          "item": [
            {
              "name": "Get customer carts",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c54adf75-f9d8-4683-a219-f21bd52464c7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create customer cart association",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d8074756-a00d-4e61-a64a-708e545d4bb9",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete customer cart association",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1e596754-8dc3-451c-9064-f5b80278abf8",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_items",
          "item": [
            {
              "name": "Get cart items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "52413cbf-d25d-4dff-b3f5-1600714d68e5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add product to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a5d94e55-f901-402b-9399-ee987165e1ef",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add product to cart with shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1,\n    \"shipping_group_id\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "52ee46ad-b05e-4e76-aa65-50114d3190c0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add custom item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_item\",\n    \"name\": \"My Custom Item\",\n    \"sku\": \"my-custom-item\",\n    \"description\": \"My first custom item!\",\n    \"quantity\": 1,\n    \"price\": {\n      \"amount\": 20000,\n      \"includes_tax\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cefe7932-67c8-48e0-aeca-8dec191f2360",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add a promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_item\",\n    \"code\": \"PROMO1\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e19ce8be-8ccb-40c8-a1f1-37f543a5af47",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion via promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/discounts/{{promoCode}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "discounts",
                    "{{promoCode}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0028d2d4-1760-4f58-91e9-6746f662cecd",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_item\",\n      \"name\": \"My Custom Item\",\n      \"sku\": \"my-custom-item\",\n      \"description\": \"My first custom item!\",\n      \"quantity\": 1,\n      \"price\": {\n        \"amount\": 20000,\n        \"includes_tax\": true\n      }\n    },\n    {\n      \"type\": \"cart_item\",\n      \"id\": \"{{productId1}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"cart_item\",\n      \"sku\": \"{{productSku2}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"promotion_item\",\n      \"code\": \"{{promoCode}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7ba25ffb-3d9f-4da6-99f3-6b1e7fd6fd0c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Re-order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"order_items\",\n      \"order_id\": \"{{orderID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fd8df86a-f45b-4f06-9ed1-cb98daf5ca99",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Cart merge",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"cart_items\",\n      \"cart_id\": \"{{cartID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ed16dc7d-7420-4e6e-b293-c22ea9a5e673",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "31dd5072-3fed-4544-a2b8-2ffd449b7944",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"shippingGroupID\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0970154e-aa34-4cc6-9740-f698a6296d55",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk update items in cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"id\": \"{{cartItemId1}}\",\n      \"quantity\": 2\n    },\n    {\n      \"id\": \"{{cartItemId2}}\",\n      \"quantity\": 3\n    }\n  ],\n  \"options\": {\n    \"update_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "942ac8f9-0090-49e4-8e46-72a686eca582",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "230b192c-6604-43a5-971c-8e7ba1007825",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete all cart items",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8eb2623b-2396-4fed-8834-a930b6e1ca95",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "tax_items",
          "item": [
            {
              "name": "Add tax item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"TAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "46f2c5da-1e11-4814-b91a-fdc8ee0805a3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk add tax items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name1\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX01\",\n      \"rate\": 0.1,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name2\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX02\",\n      \"rate\": 0.2,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "808b4fc0-dd6e-457d-aa6d-9f3b60874189",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a tax item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"MYTAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cbb1ac4a-e19a-4c75-9d74-11043f29dd87",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a tax item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7c73cecc-552f-46b7-9d35-73ba04effd36",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk delete tax items from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d8c3709a-2624-429b-be13-dd5c33f3fcda",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_shipping_groups",
          "item": [
            {
              "name": "Get cart shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2c80f08c-c2d9-4200-b343-7abd1fb82f64",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single cart shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "991047a3-750e-498f-99b8-fe9c21907738",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_1234\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-04-25T00:00:00.000+00:00\",\n      \"end\": \"2023-04-29T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ec7a3ba1-74ac-4f7f-abef-3b58f777f679",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_5678\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-05-01T00:00:00.000+00:00\",\n      \"end\": \"2023-05-05T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d4ab90ce-c88f-41ae-b065-99a574ce48bc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "custom_discounts",
          "item": [
            {
              "name": "Add custom discount to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7a777725-61fe-413f-bb1a-4a421ef58351",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "08e38921-4b68-46a8-85a9-e89460a3aa1f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d39bcf69-03d9-453f-87d0-f1daa45358fd",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add custom discount to cart item",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7d960c73-3fed-47c8-aa14-6cf5025887d4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b7c8bd01-eb2a-4488-966a-cd727a2f25e8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "00dfee18-4089-4cc0-a42d-22ee5afffdd5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add custom discounts to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -1000,\n      \"description\": \"Custom discount description\",\n      \"discount_code\": \"cart-custom-promo-code\"\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"cart_item\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"custom=item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"custom_item\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "76eb2643-4063-4b86-b70f-59a92f8f3b14",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk delete custom discounts from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f7ebf6a6-3f3d-45d2-a0d3-271dbab804f8",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_payment_intent",
          "item": [
            {
              "name": "Setup a Stripe Payment Intent for the cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"receipt_email\": \"your_receipt_email@email.com\",\n      \"automatic_payment_methods\": {\n        \"enabled\": true\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4428e946-1538-403b-af89-501462cec93f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Stripe Payment Intent for the cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments/{{paymentIntentId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments",
                    "{{paymentIntentId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "84e69a6d-d79a-4a7d-8caf-3591e52778b0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "catalog",
      "item": [
        {
          "name": "Get shopper catalog",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog",
              "host": "{{authUrl}}",
              "path": [
                "catalog"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c00856cd-30e0-4666-95fc-3d33e1b9b8ba",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "949542f4-ece0-4776-8149-a0541f48688e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "676f0e14-4336-4ccf-a401-11e45a8f949b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4130ed8c-d43f-4adb-954a-b9315b25e73d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9226adc0-c704-47e1-815d-f704fbf12207",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e6197ddd-c6c7-48f9-9500-abce1a7d0ad9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3d0e9cf0-8d57-45d0-a105-7ba774abf8f6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6c9e406e-5a0a-440d-b0f0-6f18067065e1",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d7d6b4ba-1a6e-4eee-a988-e65b96d8c87d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products/{{productId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "46c2653b-1143-4718-8f11-ed658efd7a90",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d3f3aec4-fb6a-4c53-96f1-10522f2f029a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9c2e9b3a-fc67-4081-abee-627f9576a5a6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "catalogs",
      "item": [
        {
          "name": "catalog_configuration",
          "item": [
            {
              "name": "Get all catalogs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "943ec221-b9f0-4612-9b16-e6ab7531568d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)",
                      "d.each((item, index) => pm.environment.set(`catalogId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get catalog by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "da63f640-1bc6-4bed-9165-6960a6f86dde",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create catalog",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend brand games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "57ed7fd2-c2cc-4add-b0f2-121e97e856cf",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update catalog",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogId}}\",\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend Games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f1a06ffd-7a85-451f-877b-4b2900663da7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "437a9b06-2dd8-4ef0-9171-e00059e9f7c5",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_rules",
          "item": [
            {
              "name": "Get all rules",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "11ac899a-d27b-42be-8f21-62b88630983f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)",
                      "d.each((item, index) => pm.environment.set(`catalogRuleId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get rule by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2fb7a4b8-7bfb-4935-9ec9-c7912df1f107",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Channel",
                    "value": "web",
                    "disabled": true
                  },
                  {
                    "key": "EP-Context-Tag",
                    "value": "vip",
                    "disabled": true
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"Preferred Customers\",\n      \"description\": \"Preferred Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "93c06b41-707b-4722-bbf9-3ed0e5e822be",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update rule",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogRuleId}}\",\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"VIP Customers\",\n      \"description\": \"VIP Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "55927bc2-7828-485d-b1c1-da35e8fbf95e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete rule",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e9a46afb-a89b-4a31-abce-ae6db259db88",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_releases",
          "item": [
            {
              "name": "Get all releases",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "485c5213-89bf-4d22-bd91-fd14b9841da7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)",
                      "d.each((item, index) => pm.environment.set(`releaseId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get release by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "574b1239-e136-47c0-840b-74322ac2b419",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create release (publish)",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b449edb7-c95c-485e-bbb2-dd8e9ddb239f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete all releases of a catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c47ee89d-8c68-4da0-9386-57d99a131232",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a release of catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bab8ac06-3ffc-48b7-9ab2-3b759d4620eb",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete latest release of a catalog (rollback)",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4750fba3-ca02-4b03-81fc-76cb21afbe88",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_by_latest_release",
          "item": [
            {
              "name": "Get latest release",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "07e2024c-e39a-44b4-80d1-7a9f2cb0e706",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all hierarchies",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8baed8d3-667e-4415-922b-0b1c5f5ea7b1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"hierarchyId\", hierarchyId)",
                      "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "736465ba-7ae5-461a-9d67-739ad332f06a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "83743f49-fc8c-4977-b977-22878457f210",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2f896afd-c7bf-4fe2-bbf1-b002a4aa17ff",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0a5843a4-620c-40b0-98f7-1513c13f09e1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get node by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "33dfcc3f-1320-4b4e-b59b-2d8955916add",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get node's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d80e0df7-dbe8-4554-911b-8d787fb409b3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "454cdcc3-13cb-4ffe-a687-3031ebcc9233",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get product by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products/{{productId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products",
                    "{{productId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "03d7b14e-9476-4f9c-95ac-a3d6ad68da60",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a hierarchy's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5869b5cc-dce5-465e-b515-645e017a0ab0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a node's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "56ce398c-8cd1-47f7-93b1-e53cde9d4f1b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productIdpricebookId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productIdpricebookId\", productIdpricebookId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "categoriesLegacy",
      "item": [
        {
          "name": "Get category attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "49f8a10c-1193-4c23-8ade-30e3d7415dc6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "79c951c1-3179-4d3d-af64-0c7c9fc38161",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)",
                  "d.each((item, index) => pm.environment.set(`categoryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single category",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "27a58f2b-1890-46c8-b538-f930d44029f2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get categories tree",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/tree",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "tree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "422eec5d-6d17-4fe9-86b2-693194368539",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a category",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\",\n    \"slug\": \"desk-lamps\",\n    \"description\": \"For desk lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "177381d1-fce0-42bf-9768-f82d58d90c2c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a category",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{categoryID}}\",\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "057cf1fa-0311-4743-bf50-3f3b4e23b9e7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a category",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3887c231-a459-463a-8e94-626c62bb5089",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create parent category relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/parent",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"id\": \"{{categoryID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "717d82d4-a7af-4a25-9c22-bc57e34fdf9b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create child category relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/children",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    },\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "01c5d972-5e15-4381-8405-9f09931c91a6",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "checkout",
      "item": [
        {
          "name": "Checkout as customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"id\": \"{{customerID}}\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1ab3ff9e-9b8a-4d60-88d8-8771c8a405ed",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as guest",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"email\": \"andy@example.com\",\n      \"name\": \"Andy Dwyer\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6730b86a-7206-4f06-a22d-4a4e47254e55",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"account\": {\n      \"id\": \"{{accountID}}\",\n      \"member_id\": \"{{accountMemberID}}\"\n    },\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b43d5922-709d-4857-bd04-e6decaacebec",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout with account management authentication token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9e246f78-d26d-4ce9-8d7e-4ed574790d0f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "collectionsLegacy",
      "item": [
        {
          "name": "Get collection attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "98fe5f83-4595-424f-8e58-e4426ddebb0d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all collections",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "26b69285-ee00-442e-bcc8-1281d1b50084",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)",
                  "d.each((item, index) => pm.environment.set(`collectionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single collection",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "35a3dbaa-4663-434f-a637-17edf5514bfa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a collection",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\",\n    \"slug\": \"fancy-lamps\",\n    \"description\": \"For fancy lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0765908c-c17c-4d98-96c0-28c279f5f037",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a collection",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{collectionID}}\",\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b6ff4189-4855-40d6-aa39-c8e85326ef35",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a collection",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "55ebeefc-df22-4a33-b547-f803c55c1c24",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "commerceExtensions",
      "item": [
        {
          "name": "customApis",
          "item": [
            {
              "name": "Get all Custom APIs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b3e4c914-cbd2-4b5f-9255-79c63387c7ec",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9e615a5d-634d-4fd1-89d4-cd19422faf2d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"Description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"api_type\": \"wishlist_ext\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8a870b46-ffd9-458c-948e-bda933c8dbe1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiId\", customApiId)",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)",
                      "const customApiType = Array.isArray(d) ? d[0].api_type : d.api_type",
                      "pm.environment.set(\"customApiType\", customApiType)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"updated description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "67380c61-6c9c-45f1-9d48-686389e8c699",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cd8743f5-6be4-48b3-943e-7230763fd22f",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customFields",
          "item": [
            {
              "name": "Get all Custom Fields",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4705679d-32f2-401b-a5e0-4888fe60932e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom Field",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e37a609b-2663-4547-953a-0008c2d94658",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom Field",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Name\",\n    \"description\": \"Name of wishlist.\",\n    \"slug\": \"name\",\n    \"field_type\": \"string\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 16\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "04ba8aa0-24b4-4573-a5f7-9f5e223cedf5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customFieldId\", customFieldId)",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom Field",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Longer Name\",\n    \"description\": \"Longer name of wishlist.\",\n    \"slug\": \"longer-name\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 32\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d2e4e239-1929-45c9-9f66-f9a907c864e5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom Field",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "54cee6cf-5663-4b2f-b816-26e2a46db9ba",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customApiEntries",
          "item": [
            {
              "name": "Get all Custom API Entries",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9bd1f7b1-e497-4d3c-ac3e-c2f7b4a3f4ed",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API Entry",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "708a06da-3b36-42ab-9092-9c5493c19d3b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API Entry",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2f43ae0d-8512-45f7-9dd7-9b7978c77f4b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiEntryId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiEntryId\", customApiEntryId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API Entry",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Updated Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7aefec2e-2638-4044-9240-2840694082d2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API Entry",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3f05f248-b0ef-4f37-8827-20fb1f9e7612",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "currencies",
      "item": [
        {
          "name": "Get currency attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "62791d48-3917-4730-8c64-7ed3bf7ea9e8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all currencies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "76112ddf-4d63-42db-9ed3-082a0aa74cad",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const currencyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"currencyID\", currencyID)",
                  "d.each((item, index) => pm.environment.set(`currencyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a currency",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7f390c72-f761-40ee-87ee-f00e261aa106",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a currency",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"currency\",\n    \"code\": \"GBP\",\n    \"exchange_rate\": 1,\n    \"format\": \"£{price}\",\n    \"decimal_point\": \".\",\n    \"thousand_separator\": \",\",\n    \"decimal_places\": 2,\n    \"default\": true,\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e5222fcd-4a24-4d1f-8750-47ed67fbb692",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a currency",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"default\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "13ed75fb-4850-418c-9e3e-aeb4221c79b5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a currency",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0814ac81-2650-4588-be16-db32f1089cf6",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAuthenticationSettings",
      "item": [
        {
          "name": "Get customer authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/customer-authentication/",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "customer-authentication",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3283105c-46c3-42d0-8208-b61a71a39d9f",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customers",
      "item": [
        {
          "name": "Get customer attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "02d1b8c1-c1be-4042-b064-7e910c26b56f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all customers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "903f9795-ceaf-4788-8509-42793586b07b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)",
                  "d.each((item, index) => pm.environment.set(`customerId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a customer",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "15780216-9098-4110-aabc-e9bec896bd06",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\",\n    \"email\": \"ron@example.com\",\n    \"external_ref\": \"abc123\",\n    \"password\": \"mysecretpassword\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "46cd00a9-aa7e-47a2-b732-b413b7f1835b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a customer",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "73090353-fcc0-4f65-9386-6de989d62f06",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a customer",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2e4fea4e-57eb-4b47-8cc1-6fff497fe8e4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate customer token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"email\": \"ron@example.com\",\n    \"password\": \"mysecretpassword\",\n    \"authentication_mechanism\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d5a2bd9a-720f-422c-9e1d-bebe51b47817",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate customer token with OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"c2490f06-6d8e-4927-99aa-4bf02b419e96\",\n    \"oauth_redirect_uri\": \"https://example-store.com\",\n    \"oauth_code_verifier\": \"0E934PurR8ExVg6Pj7T4kQewxKzWSfSFG5d15FGfww8\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5f0220f2-6ae6-4c28-94a4-dfa60ac1857e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "files",
      "item": [
        {
          "name": "Get file attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "48c1b663-f8ec-4df7-88e5-6e9b1345bd58",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all files",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ecabea49-9169-494f-8253-affd7f65b1a3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a file",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ca779173-59c0-4ed8-a4a4-a412f7c59e33",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a file",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "file_location",
                  "value": "",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "public",
                  "value": "",
                  "type": "text",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a376dbe8-adfd-4e7c-a964-453b7741d44f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a file",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f6e5012c-5000-49b3-a6a8-e5cb0ce14335",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "flows",
      "item": [
        {
          "name": "Get all flows",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "649da1ee-aa4c-4760-9947-35312de29aef",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)",
                  "d.each((item, index) => pm.environment.set(`flowId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d44aabaf-6278-4eae-9241-e62fd6388039",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a flow",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"flow\",\n    \"name\": \"Products\",\n    \"slug\": \"products\",\n    \"description\": \"Extends the default product object\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "466e50d7-523f-4d12-b169-2d342631f00d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a flow",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{flowID}}\",\n    \"type\": \"flow\",\n    \"name\": \"FlowUpdated\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f3dbf431-052c-417e-823d-9a5c53469f3d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a flow",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c0922a0b-73bf-4f23-8a4d-13e44115dd8d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all fields",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9846d51b-9046-4299-b8c3-08ba83f67a2d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all fields on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5156a5e8-8f96-4201-bcdf-8cd4761497b3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single field",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4a802496-7646-4df2-88b5-e4cc3821eb54",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a field",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"name\": \"Product Rating\",\n    \"slug\": \"product-rating\",\n    \"field_type\": \"integer\",\n    \"validation_rules\": [\n      {\n        \"type\": \"between\",\n        \"options\": {\n          \"from\": 1,\n          \"to\": 5\n        }\n      }\n    ],\n    \"description\": \"Average rating as given by our users\",\n    \"required\": false,\n    \"default\": 0,\n    \"enabled\": true,\n    \"order\": 1,\n    \"relationships\": {\n      \"flow\": {\n        \"data\": {\n          \"type\": \"flow\",\n          \"id\": \"{{flowID}}\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fef4f5df-92b1-4d9f-b7aa-4431bbac6f70",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a field",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"id\": \"{{fieldID}}\",\n    \"field_type\": \"integer\",\n    \"slug\": \"product-rating\",\n    \"name\": \"Product Rating\",\n    \"description\": \"Average rating as given by our users\",\n    \"required\": true,\n    \"default\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "03eb18cf-2ca9-4daa-ba44-09555472baae",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a field",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "22b9af9e-8a7a-4937-889d-93dafc8c4746",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an entry",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"FIELD_SLUG\": \"a value\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b2cdd103-a7b0-4b30-bb0d-f11d676dde38",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single entry",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d8075b0b-d765-485f-9f7f-7ea4dd265b08",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"id\": \"{{entryID}}\",\n    \"FIELD1_SLUG\": \"value1\",\n    \"FIELD2_SLUG\": \"value2\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2b1334bf-30f8-4735-853c-a0bd164475cc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a0691117-f551-41e1-bdb3-ae3976c5ab8c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all entries on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c2d56909-1d26-4a2d-9f62-2d4df791ff0c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)",
                  "d.each((item, index) => pm.environment.set(`entryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create an entry relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{fieldSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{fieldSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    },\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5b0a4dd6-55cc-42cd-b220-0ee1c43dcf83",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry relationship",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f182437e-ce7f-4dbd-beaf-48740322ef0f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5822ff55-3348-4da6-95fb-efff4d9a1a58",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "gateways",
      "item": [
        {
          "name": "Get all gateways",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways",
              "host": "{{baseUrl}}",
              "path": [
                "gateways"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "85ce1c52-b991-4408-baaa-4073ab8118d0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const gatewaySlug = Array.isArray(d) ? d[0].slug : d.slug",
                  "pm.environment.set(\"gatewaySlug\", gatewaySlug)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a gateway",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways/{{gatewaySlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "{{gatewaySlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bc8807f5-b657-4c2e-a915-dce45639ce51",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Manual gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/manual",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "manual"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c51cfbe7-26be-435c-80ab-d15e6f87ac0e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c7765426-69f8-443d-ae71-1d253beba7e4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d639b7c4-6fa9-424f-a0ea-b43cb80c614b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Intents gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_payment_intents",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_payment_intents"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "57345f41-61b5-43da-ac61-704e281bde00",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Connect gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_connect",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_connect"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e1a730f1-ca44-4331-ac31-8ca6cce5b454",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5faacb74-a923-414c-96d0-69a47809ba59",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update PayPal Express Checkout gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/paypal_express_checkout",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "paypal_express_checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"payer_id\": \"{{merchant account id}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "eb67cb54-0264-40d3-a97f-dce167a1315e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update EP payments Stripe",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/elastic_path_payments_stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "elastic_path_payments_stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6930bc13-2d43-42bb-863b-e54f7f875c78",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Authorize Net gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/authorize_net",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "authorize_net"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"login\": \"{{loginID}}\",\n    \"password\": \"{{password}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "59bf6aea-4d81-4881-bee2-853e1ed0e220",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "hierarchies",
      "item": [
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fd167db6-96cc-4cb6-830c-b5b34b3f7c5b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "50818850-5363-4969-ad15-faeeec2e95ac",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a hierarchy",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games\",\n      \"description\": \"All the games we sell\",\n      \"slug\": \"games\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3109081c-76fd-4b9f-8738-b0b47f35a44c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a hierarchy",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{hierarchyId}}\",\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games for Kids\",\n      \"description\": \"All the games we sell for kids\",\n      \"slug\": \"games-kids\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "67e3fd80-28ae-4da5-b808-ba6131d77715",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a hierarchy",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "79639548-f93d-4e2b-ba38-efbcfa241a95",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ab8f0faf-ae5f-480a-9f01-e6de641c0bfb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "integrations",
      "item": [
        {
          "name": "Get integration attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8fcfd92a-444d-4f50-ad1a-9fa38309aaef",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all integrations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "557062bd-d0d5-491a-a274-7c42f76cf884",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)",
                  "d.each((item, index) => pm.environment.set(`integrationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an integration",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce161975-7155-4f9d-be56-9913d598ebdd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an integration",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"integration\",\n    \"name\": \"Order notification\",\n    \"description\": \"Send an order notification via email with discount code.\",\n    \"enabled\": true,\n    \"observes\": [\n      \"order.created\"\n    ],\n    \"integration_type\": \"webhook\",\n    \"configuration\": {\n      \"url\": \"https://yourwebsite.com/order-created-notification\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c321ec56-af11-45d2-8e69-4104e24ee248",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an integration",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{integrationID}}\",\n    \"type\": \"integration\",\n    \"observes\": [\n      \"order.created\"\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fc666e77-1e2a-4c7b-8ef8-a94f4dd94b9a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an integration",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1675b6c6-63d8-4c82-ab3a-2c8e8ace009c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "51b395d2-a140-4b89-a860-e3e8ac03b544",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "20cf503d-f397-4341-8fc8-b785871b706c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "850bd23c-5bc9-4d4a-b4cb-adcfb93820a7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationJobId\", integrationJobId)",
                  "d.each((item, index) => pm.environment.set(`integrationJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get integration job logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs/{{integrationJobId}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs",
                "{{integrationJobId}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ff109e21-ddb3-4e16-a738-1acb812b9538",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "inventories",
      "item": [
        {
          "name": "Get all inventories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories",
              "host": "{{baseUrl}}",
              "path": [
                "inventories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dbee4010-840c-4c9f-8169-c90cf183bb8d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product inventory",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "15713525-25ee-4e76-9763-f4d3bb2b3f5a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product stock transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3cc2c3d9-9c74-4864-a3db-1f8849297c7d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product stock transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fde769ce-426a-4f60-91f7-8f178d8dbde7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a stock transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"stock-transaction\",\n    \"action\": \"increment\",\n    \"quantity\": 3\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "53a7659d-04ad-41e4-ae9f-6935bc4f76fe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create inventory",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"quantity\": 1000\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dcfd9a57-1599-4e7a-b282-7098ec0bde04",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete inventory",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1fa2bdfd-d21a-47d3-968e-8e693513375d",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "jobs",
      "item": [
        {
          "name": "Get all jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dd73382d-ad73-4ada-b41c-e5ca7bdeb25b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const jobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"jobId\", jobId)",
                  "d.each((item, index) => pm.environment.set(`jobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a job",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": "{{baseUrl}}",
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "95f44a63-8d13-4897-be3e-e2459266023c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a job",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"job\",\n    \"job_type\": \"order_export\",\n    \"filter\": \"gt(created_at,2020-04-28):lt(created_at,2020-04-30):eq(payment,paid)\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "29af8e32-7913-4f99-a18c-03068bfeec01",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "keys",
      "item": [
        {
          "name": "Get all keys",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2b8d5a36-ad18-4473-b52f-4126dd7eeecb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a key",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"Pawnee City Parks and Recreation Department\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "edd281e0-f9d8-451a-9a3d-23dd34affa79",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const keyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"keyID\", keyID)",
                  "const clientID = Array.isArray(d) ? d[0].client_id : d.client_id",
                  "pm.environment.set(\"clientID\", clientID)",
                  "const clientSecret = Array.isArray(d) ? d[0].client_secret : d.client_secret",
                  "pm.environment.set(\"clientSecret\", clientSecret)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a key",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b058726a-337e-4fc5-9186-2a2fe603a62b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a key",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "517d62b1-143f-41e5-91da-9938b7f46c09",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a key",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"New Key Name\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "aacebc11-baf8-4152-bf80-9f5d0369b377",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "merchantRealmMappings",
      "item": [
        {
          "name": "Get merchant realm mapping",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8639168c-3400-44cb-856c-c1b75e22fe1e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantMappingId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"merchantMappingId\", merchantMappingId)",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant realm mapping by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9aaf3037-ed3d-4463-aa0c-49cab936b0d4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update merchant realm mapping's store prefix",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"merchant-realm-mappings\",\n    \"prefix\": \"myNewStorePrefix\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b8d74483-5204-4d2f-a110-ae9eb18a63ad",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant oauth2 profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}//merchant-oauth2-profiles",
              "host": "{{authUrl}}",
              "path": [
                "",
                "merchant-oauth2-profiles"
              ],
              "query": [
                {
                  "key": "prefix",
                  "value": "{{merchantStorePrefix}}",
                  "disabled": false
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ]
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4bfcddeb-4522-493c-904c-116065a08780",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "nodes",
      "item": [
        {
          "name": "Get a node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cdc65b45-0e87-46a2-a27d-86a71ab0e362",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a node",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Accessories\",\n      \"description\": \"Game accessories\",\n      \"slug\": \"accessories\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7a840485-c89a-469a-8526-42903cf1d27d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a node under parent",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming Keyboards\",\n      \"slug\": \"gaming-keyboards\"\n    },\n    \"relationships\": {\n      \"parent\": {\n        \"data\": {\n          \"id\": \"{{nodeId}}\",\n          \"type\": \"node\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bf67ac59-7c37-46d4-97fd-b8458cb363a4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{nodeId}}\",\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming keyboards for the dedicated player\",\n      \"slug\": \"gaming-keyboards\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "92336985-042b-4e34-9ac9-89f88eb2a4f6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e99508e4-d873-4bba-98f6-2e7427830e7d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8e77cd5a-45a2-45a4-b48e-dde33e157124",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create child node relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"node\",\n      \"id\": \"{{nodeId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bec0dbd0-0d5f-4400-b01b-108fa4595d5a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node's parent",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"id\": \"{{nodeId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8e76e372-616c-407f-9939-406a543f09eb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node's parent relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ba88421c-5907-4f20-84c2-85f71bfa14d0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "36fb51b6-92ff-40ba-906a-a774ac421941",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create relationships to products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bac19ef0-535a-45c6-9efe-d44d75244fbc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete relationships to products",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a93194a3-486b-48b3-8252-75dcb0aca1ee",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oidcProfiles",
      "item": [
        {
          "name": "Get OIDC profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3da6e9b4-4509-4856-8a39-711fccbb7679",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get OIDC profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "795b2c84-d32b-4816-a648-8c61bf00ee0a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create OIDC profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3aa4570a-e6ea-46f6-a2c4-6e4f9b4ba19b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const oidcProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"oidcProfileId\", oidcProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update OIDC profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "da442145-cdbe-49a7-91f4-4b1777c2ae68",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete OIDC profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cbd469b9-5031-49e4-a204-fa3cb5b0e3af",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oneTimePasswordTokenRequest",
      "item": [
        {
          "name": "Create One-time Password Token Request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}/one-time-password-token-request",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}",
                "one-time-password-token-request"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"one_time_password_token_request\",\n    \"username\": \"john.doe\",\n    \"purpose\": \"reset_password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ee18eab5-bbb2-4675-b4d5-cfa4f2ab77c3",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "orders",
      "item": [
        {
          "name": "orders",
          "item": [
            {
              "name": "Get order attributes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/attributes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "attributes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "20fdbd01-b7b6-401a-94bd-cdc76389c12d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "744718d2-9b6b-4c2a-9dc4-3a9c8887011a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get an order",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ad5b8ead-b23d-4d72-952c-a3d52c75c8ac",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping_address\": {\n      \"first_name\": \"Ron\"\n    },\n    \"external_ref\": \"external_order_123\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1f556d10-ca91-469e-8463-27dcffec2cdd",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Fulfill an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping\": \"fulfilled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "64d7406b-cac8-4bed-aeb2-9541bea01155",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"status\": \"cancelled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "15b2f21a-a311-4c0b-8a64-17de5df95a30",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get customer orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "71968d75-6818-4c25-93a2-e8a1288f4cf5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get order items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e80a141f-0465-4581-a94a-e379d2831568",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize orders",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"order_ids\": [\n      \"{{orderID}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d5f8497a-a3b4-40a4-b847-67c6e5decdd7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm an order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"metadata\": {\n        \"order_id\": \"{{orderID}}\",\n        \"statement_descriptor\": \"Confirmed intent\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "324fa526-d077-4c2c-b201-1761c9d61229",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "order_shipping_groups",
          "item": [
            {
              "name": "Get order shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "eb687a00-5aac-43c2-b406-95cc3e1d71ff",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single order shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups/{{orderShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups",
                    "{{orderShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "30235c32-084a-46d8-8f93-f9cc960bb9bc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update an order shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups/{{orderShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups",
                    "{{orderShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"update_type\",\n    \"tracking_reference\": \"update_reference\",\n    \"delivery_estimate\": {\n      \"start\": \"2025-01-01T00:00:00.000+00:00\",\n      \"end\": \"2025-01-05T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron Update\",\n      \"last_name\": \"Swanson Update\",\n      \"phone_number\": \"222-333-4567\",\n      \"company_name\": \"Update Enterprises\",\n      \"line_1\": \"123 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at door\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f8f12381-7f81-448e-9649-aa6703536d53",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "passwordProfiles",
      "item": [
        {
          "name": "Get Password profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fa287ae8-3c45-4a6f-a8b1-5256d90d35f9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get Password profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "81219935-1406-4b05-a1c9-dd20a7a61c7e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create Password profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"email\",\n    \"type\": \"password_profile\",\n    \"name\": \"password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c2829f28-13c6-455d-90ae-da5b38b8e166",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const passwordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"passwordProfileId\", passwordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Password profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"any\",\n    \"type\": \"password_profile\",\n    \"name\": \"updated password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "479d952f-b9f4-4801-95fa-430df49c9425",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0066fe0c-7664-4006-94cc-8285f7c0423a",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "payments",
      "item": [
        {
          "name": "adyen",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"authorize\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"shopper reference\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ad4cf3a4-d414-4385-b63a-91a4d273e497",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"purchase\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"<shopper reference associated with token>\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7db7d966-4917-4386-9883-95608304418f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "authorize_net",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"authorize\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "40fe6a62-7cf9-4011-9b38-bbdcf419e12f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"purchase\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "13f99768-c818-478e-972c-68e60f380faf",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "braintree",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9367e13d-711e-42be-9680-c7248ed7bcae",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0e2e75e6-4323-4f85-bf78-34ed7c15c3b1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0fc832b4-d771-4f87-8316-c3fa15d1ba87",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c267a593-6353-4a00-84ce-ae54cbe2fd2d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f1e46773-cdf9-4fde-88bf-e4c4a922699d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "61704b78-e4e0-4e4a-bf1a-50abe962cc68",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "card_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "153d7a9a-f01b-477a-83ab-16280f0b7e93",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3f2158b0-4153-4597-a969-d5d4b606f229",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cybersource",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"authorize\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d4a2adc9-320d-4282-92fa-0dc6a182ec41",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"purchase\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a60de9a4-bc7f-4be9-94a2-3298c4a7e2a7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "manual",
          "item": [
            {
              "name": "Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"authorize\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "94494208-1834-4a41-a0ff-2c21dbf0e1be",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"purchase\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8ca57cac-a50c-497c-92a6-02a6fa2a06d4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "paypal_express_checkout",
          "item": [
            {
              "name": "Setup Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cbef493a-995a-4a6c-a471-2695e480d6d4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Setup Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"purchase\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "68387a95-c669-4147-95a6-2ecbb8f09a45",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6c128513-27d3-4724-9c2f-3800af7d694b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Capture Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "capture"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"soft_descriptor\": \"Test soft descriptor\",\n      \"note_to_payer\": \"Capture note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2cf6568c-eec3-4ab8-900c-f090a71fb605",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Refund a payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "refund"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"amount\": 1,\n    \"options\": {\n      \"note_to_payer\": \"Refund note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ead417e1-f7ec-4f50-b2c0-b9546a7160ae",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3b15390a-be42-4c20-9474-4b387c3c2e6c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c4f2c177-65fa-4cbf-a96c-cb7a1a8da453",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_intents",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0c5e98e9-4cae-4cad-b19d-d8620bf2e7e8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d9807e68-0924-422c-a826-30b8a08140d4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cbf742fb-97d8-4d1b-9d9d-e1c339463d70",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "19205520-eba4-4578-938b-e87bab49b12e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "87543e6b-2c21-48db-a3d7-63206473588e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bf490f6a-0b46-4368-96d4-fac6a93d04fe",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4f3a6931-9bda-4c4f-a090-9138df827139",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d00a36db-da96-4a8a-9dc0-bb935d627f6f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "ep_payments_stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "926f22e2-69a8-4ff5-871d-3db3436a867a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_threeDSecureRequired\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\",\n      \"confirm\": true,\n      \"execute_threed\": true,\n      \"confirmation_method\": \"manual\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a8644f34-294e-4efa-93f6-3dc21f3be8c6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a826c38f-2f4f-42cf-ad61-160fda2ed9b5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bcbdd44e-4b28-4580-aca7-12c00d8f3242",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bec9035b-4a4f-4df9-993d-9809e8bd5dae",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7256d49d-a6be-4b2d-8eab-237a83302a57",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "84f33575-5f8d-4d19-860d-edb8d13c5552",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "personalData",
      "item": [
        {
          "name": "Get related data entries",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "666b5734-58b0-4fd7-ab86-d8d8d18cee84",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cd0e1a8b-4c90-44a2-85d5-56ec9e0bf94b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create erasure request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"resource_id\": \"{{customerID}}\",\n    \"resource_type\": \"customer\",\n    \"type\": \"erasure_request\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "26683614-04c2-41b2-b276-b1a5bc0cf830",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const erasureRequestID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"erasureRequestID\", erasureRequestID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get erasure request",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests/{erasureRequestID}",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests",
                "{erasureRequestID}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "896b4dc2-074b-4e0c-8d7c-25d44c5c47f8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get erasure requests",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "59579059-5a99-4034-9fc4-e7b82f5f6acb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update TTL",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"time_to_live\",\n    \"days\": 20\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c30cfd76-9453-40a2-a458-4ddf54c8e577",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get TTL",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0a04639b-191f-4be1-964d-5e656262dd88",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pimJobs",
      "item": [
        {
          "name": "Get all Jobs for PIM",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1c247bd3-75ac-4963-b5d2-bc183ae9456e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)",
                  "d.each((item, index) => pm.environment.set(`pimJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a Job for PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c2f7e0a2-aab8-4e89-821a-fa8c1e33b1d0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Errors for a Job in PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}/errors",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}",
                "errors"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a88ac5af-183b-41b0-aa5e-8ff69fdb72e8",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pricebooks",
      "item": [
        {
          "name": "Get all pricebooks",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b3779484-124b-4479-ad01-14192543ad9f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)",
                  "d.each((item, index) => pm.environment.set(`pricebookId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a pricebook",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "01509b3d-f2a7-4726-b88e-641089bb968b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a pricebook",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Standard Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0c1b2b99-b48f-4087-986a-b151681174b8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a pricebook",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{pricebookId}}\",\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Seasonal Sales Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b9d70171-28ff-4123-bd69-59b0c3128cdc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a pricebook",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "115b51a8-5a19-4d40-a061-cddd265b3ca3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product prices",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ef0b16d8-23ea-4b00-9390-9b54cc20327f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`priceId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product price by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "05aa5db0-9a7e-4617-b51d-24535622f2e6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a price",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 100,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "82b45663-f5ac-4ef4-afac-686fed82387f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product price",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{priceId}}\",\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 300,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1b6ca453-edb8-4d8f-8014-a0e5e03c69f6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product price",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "69d0fc68-9c32-4378-a841-8cd445cb20f2",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "products",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "74eabde1-3f2b-4ea5-b7f7-1d90c93ff1a3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9c218e06-cb74-4bd5-a607-a0729396d570",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"1234-5678-ABCD\",\n      \"upc_ean\": \"123456\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3e8998a2-3c67-4eb2-8df9-1b6013eb9172",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"id\": \"{{productId}}\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand top of the line gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"9934-5678-ABCD\",\n      \"upc_ean\": \"125656\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce1d3714-63c7-4ff1-a63f-f9616b6bc308",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bfce6bc8-dfa1-4644-acea-fd378cfd4a79",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a bundle",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"2 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 2\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f2bed188-697c-4781-9287-88e1b3ce638d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a bundle",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{bundleId}}\",\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"5 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 5\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "68d4566e-36dc-4f57-aea9-e3648b98b782",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a bundle",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "40711dcd-48bb-431b-a24a-4f2a04238d23",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c3db9c7f-4d40-496c-9226-3d5fa0886a1e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product's file relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "32463132-1296-41d3-a6b6-5924dab6ad7c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product file relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-1\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-2\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "77ec9022-03c4-4259-a6c6-f7de4f6dc349",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Replace a products's file relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ed77a5b6-8814-47d1-b830-833480f446fe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's file relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "52db8870-f596-4d7f-a2e2-b24ad3bca04b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's variation relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2afe9201-db6f-4204-83fd-f13c38f550e9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product variation relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7945db6d-bc4b-4709-9ebf-1fd84b436818",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Replace a products's variations relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c30132ac-90fe-40fb-b208-ed27aaa0afff",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's variation relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1591d1af-b7b9-48ae-bafc-ee0f51b9f49e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Builds child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/build",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9841d11e-d4e1-42e9-ae6b-bbc91e30060d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "productsLegacy",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "092174a1-877c-4fe1-b205-99153ffa371a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "973ad154-b719-4335-b83a-f5c1043ff6e4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\",\n    \"slug\": \"desk-lamp\",\n    \"sku\": \"desk-lamp-001\",\n    \"manage_stock\": false,\n    \"description\": \"A cool desk lamp\",\n    \"status\": \"live\",\n    \"commodity_type\": \"physical\",\n    \"price\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"GBP\",\n        \"includes_tax\": true\n      }\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bf882a73-ea22-4731-a6a6-4ea2d2d53767",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "09ffb33d-5441-40e2-a62b-6d1af8dc9b2c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0642c76d-08a3-417d-9596-5a59aa48c753",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "promotions_standard",
      "item": [
        {
          "name": "promotions_management",
          "item": [
            {
              "name": "Get all promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d2d3e2d6-7ffc-4f0e-be9e-10c73942ce89",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)",
                      "d.each((item, index) => pm.environment.set(`promotionId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4237ed90-5870-43ab-a83a-92c752c4e5e2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a promotion history",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/history",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "history"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "45890318-4f64-4248-be81-361eab418bb5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a cart fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"$10 off\",\n    \"description\": \"$10 off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"fixed_discount\",\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"amount\": 1000\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}, {{nodeId2}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue1}}\"\n                    ]\n                  }\n                }\n              ]\n            },\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId3}}, {{nodeId4}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue2}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e8d209ad-fb72-49a7-9d79-70d700be39e4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"10% off\",\n    \"description\": \"10% off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"percent_discount\",\n    \"max_discount_value\": [\n      {\n        \"amount\": 1000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"percentage\": 10\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b724a9ef-57d9-4bc1-9838-422ae12645a4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for Y discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for Y promotion example\",\n    \"description\": \"2 for 1 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_y\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"y\": 1,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue2}}\"\n          }\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e2180428-7c47-4b63-b44b-274d38304ddd",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for amount discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for amount promotion example\",\n    \"description\": \"2 for 100 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_amount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 10000,\n          \"currency\": \"USD\"\n        }\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e1620389-6ff8-484c-a1e1-b35d5c64e8ed",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a fixed bundle discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Fixed bundle promotion example\",\n    \"description\": \"SKU1 and SKU2 for $150\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"bundle_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 15000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9734908a-46e3-4116-8356-f805f1afb38f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item fixed discount promotion example\",\n    \"description\": \"$50 for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"amount\": 5000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId1}}\",\n          \"{{nodeId2}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "534a8dca-f8e1-46bc-8db3-394a52bbe57c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item percent discount promotion example\",\n    \"description\": \"50% off for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_percent_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"percent\": 50,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId3}}\",\n          \"{{nodeId4}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "974cd168-02bc-4410-9d66-8ae9ad67a907",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a free gift promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Buy SKU1 and SKU2 to get free gift\",\n    \"description\": \"SKU1 and SKU2 for free gift\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"promotion_type\": \"bundle_gift\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"gifts\": [\n        \"gift\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"auto_add_free_gift\": false\n    },\n    \"start\": \"2020-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1104ac59-2068-49be-9b91-a57f75c495d3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"id\": \"{{promotionID}}\",\n    \"name\": \"Promotion name\",\n    \"description\": \"description\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8470660a-9e35-4c16-ad14-15716e943757",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5dc4c0cd-09ad-4b46-8d67-fec285f44908",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_codes",
          "item": [
            {
              "name": "Get promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0839ade4-76ad-44f0-a366-86a430b1ca82",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      },\n      {\n        \"code\": \"5uses\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_item\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "87794e73-9e63-4b54-880d-86742207d71f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cf024467-7344-48ea-9d1a-644a8d7595e5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7325133f-43c6-4f56-b9eb-ac2d8f618d7f",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes generation job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_generate\",\n    \"name\": \"job\",\n    \"parameters\": {\n      \"number_of_codes\": 1,\n      \"max_uses_per_code\": 1,\n      \"consume_unit\": \"per_cart\",\n      \"code_prefix\": \"promo-\",\n      \"code_length\": 8\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7e665abd-af70-43bf-ad15-0035fecc6d15",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create export promotion codes job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_export\",\n    \"name\": \"export promo codes job\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "acbd54db-d625-4de5-a2e3-e843eefa8722",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel a promotion job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{promotionJobID}}/cancel",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{promotionJobID}}",
                    "cancel"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5566dbd0-771d-4b41-8ea0-6c713ae637eb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion jobs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "32adab05-23a0-401a-a777-df06c0232420",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion code export file",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{jobID}}/file",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{jobID}}",
                    "file"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "635b5f88-401e-43cf-b285-85485a7c30b9",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_usages",
          "item": [
            {
              "name": "Get promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0a5bb74a-09bf-4246-8b8f-61541d8e7db3",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get single promotion code usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e6c605d9-7254-4ade-a84c-f5e546d53e1c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Public-Search-Type",
                    "value": "cm_search",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "206045fb-fd8e-483b-84d5-529a901eb520",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID_1}}\",\n      \"{{usageID_2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5a2238d8-f8e0-492b-af65-2e5c3d6f23cb",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "rule_promotions",
      "item": [
        {
          "name": "rule_promotions_management",
          "item": [
            {
              "name": "Update a rule promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion update\",\n    \"description\": \"$10 off your order update!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2023-01-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    },\n    \"priority\": 100,\n    \"stackable\": true\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1ef5c51f-0013-4261-bba5-1fa399e2df53",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all rule promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "76f8e619-c23e-4de2-9896-f8d667d8afb1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a rule promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7d18116d-dcbe-4f43-967e-be626dd94b61",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "63dc54a3-486b-4676-935c-9c5bcf9c5bab",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_rule_promotions",
          "item": [
            {
              "name": "Create a cart fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion\",\n    \"description\": \"$10 off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d9f0dca5-9f57-48a0-955e-2e0efed83e91",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"10 percent off cart promotion\",\n    \"description\": \"10 percent off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            10\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b89f655e-2ee3-4bb2-89a9-863ce7f29542",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with max_discount limitation rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart promotion max discount $50\",\n    \"description\": \"50 percent off your order (up to max $50) when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_discount\": 5000\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d6ff380b-4f93-40d5-b51f-a3cab2a4af52",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with custom attribute rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart with custom attribute\",\n    \"description\": \"50 percent off your order when cart member is gold\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_custom_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"member_status\",\n          \"string\",\n          \"gold\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6969a6ba-4447-4b8b-b999-91bc418ce72c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with sub conditions",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart excluding exclusive item\",\n    \"description\": \"50 percent off your order excluding exclusive item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "aa07abcd-f013-410e-ba84-144d0df506c9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "item_rule_promotions",
          "item": [
            {
              "name": "Create an item fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy item get $10 off\",\n    \"description\": \"Buy item get $10 off\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "41247eb5-00d7-4ea2-bc78-8b110049b72d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item discount with condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get Y 50%\",\n    \"description\": \"Buy X get Y 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "12ae5e2c-596f-4fd5-ba19-618f46297048",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitations and exclusions rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50% max $10 max 2 items 2 quantities from category\",\n    \"description\": \"Items from category 50% off max $10 off 2 cheapest items with max quantity of 2 excluding one item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_quantity\": 2,\n            \"max_discount\": 1000,\n            \"items\": {\n              \"max_items\": 2,\n              \"price_strategy\": \"cheapest\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e8d2642f-d1ae-4e69-a5f5-563862a07efb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitation and condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get one Y for free\",\n    \"description\": \"Buy X get ONLY one Y for free\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            100\n          ],\n          \"limitations\": {\n            \"max_quantity\": 1\n          },\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5e430d7e-d5fe-4f6e-b38c-6f3a8e0fa49d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a mixed of Cart and Item percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"description\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        },\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4f16964c-7207-4c24-92c2-98336c98046f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item fixed price discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy 2 items for $100\",\n    \"description\": \"Buy 2 items for $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed_price\",\n            2,\n            10000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "23069f15-590a-46f7-af9a-c2ceddb74423",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item attribute rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items with item attribute discount\",\n    \"description\": \"All items with attribute brand EP get 20% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"products(product_template)\",\n          \"brand\",\n          \"string\",\n          \"EP\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e64d5332-b595-43db-b8ba-35fbc4718f0d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with sub condition",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items discount for a category excluding items with attribute\",\n    \"description\": \"50% item discount excluding items with attribute when eligible items exceed $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_attribute\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"products(product_template)\",\n              \"sales\",\n              \"string\",\n              \"sale2024\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ],\n            \"children\": [\n              {\n                \"strategy\": \"item_attribute\",\n                \"operator\": \"nin\",\n                \"args\": [\n                  \"products(product_template)\",\n                  \"sales\",\n                  \"string\",\n                  \"sale2024\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "287da5ef-9823-42dd-a2bc-df3a659a5093",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item_sku OR item_product_id",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"description\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"or\",\n            \"children\": [\n              {\n                \"strategy\": \"item_sku\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productSku}}\"\n                ]\n              },\n              {\n                \"strategy\": \"item_product_id\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productId}}\"\n                ]\n              }\n            ]\n          },\n          {\n            \"strategy\": \"item_quantity\",\n            \"operator\": \"gte\",\n            \"args\": [\n              1\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8060b97b-b8f8-4a77-ae8d-e224b4b08d86",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotion_codes",
          "item": [
            {
              "name": "Get rule promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "eb0956d9-5689-488a-8d7e-35b455bc49e7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\",\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"summer2024_limited\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"fall2024_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_application\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_checkout\",\n        \"user\": \"vip_shopper@email.com\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "421bd83f-f867-45dd-9ca0-1e7402e13cd2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "430f2616-9eaa-4042-83df-48915534b3fb",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple rule promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\"\n      },\n      {\n        \"code\": \"summer2024_limited\"\n      },\n      {\n        \"code\": \"fall2024_limited\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "26e349cd-d14b-4ffb-9081-5eca99bdb880",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_usages",
          "item": [
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b4956b95-acde-42ae-90c3-e0f2e12838e2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages by code",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3bfa40c1-2890-4c75-a7b3-687a131dc31f",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize Rule Promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID1}}\",\n      \"{{usageID2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "96862ca7-e4c8-4ea4-9b52-78476e250246",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "shipping_rule_promotions",
          "item": [
            {
              "name": "Create a shipping rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Free regular shipping when cart total greater equal to $100\",\n    \"description\": \"Free regular shipping when cart total greater equal to $100\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"shipping_discount\",\n          \"args\": [\n            \"percent\",\n            100\n          ],\n          \"condition\": {\n            \"strategy\": \"shipping_type\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"regular\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bc8f7c67-2810-4098-8e48-2d0b9c7d5484",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "realms",
      "item": [
        {
          "name": "Get authentication realms",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "694e4bb5-3a14-4bfd-aeeb-a7a65d4fea3a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get authentication realm",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bda26312-ca64-42db-838c-2682ce6075ae",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update authentication realms",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"authentication-realm\",\n    \"name\": \"Test Authentication Realm\",\n    \"redirect_uris\": [\n      \"https://example.com\"\n    ],\n    \"relationships\": {\n      \"origin\": {\n        \"data\": {\n          \"id\": \"{{storeId}}\",\n          \"type\": \"customer-authentication-settings\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b52f37ed-a361-4532-908d-e38c5d215c71",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "settings",
      "item": [
        {
          "name": "Get settings attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9adae0af-5a78-4a2b-a6b2-6dad590afdb6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cb114703-a07e-48c1-a621-815e86c8b822",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"calculation_method\": \"line\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e2f3e151-3ecc-4beb-b7c7-e38427a2eafc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete settings",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "baaf58a4-1311-458d-9707-0325fcf584cc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get cart settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c8729e75-627f-4bad-929f-9712dc0d51cb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update cart settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"cart_expiry_days\": 7,\n    \"discounts\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "935669b5-8338-4dfa-b6f2-02c8f2a2029e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get account membership settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fd4355b1-9487-495d-a4bc-d9f2876fc695",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update account membership settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership_setting\",\n    \"membership_limit\": 13\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9435e94c-6be9-490d-a7aa-23b2920acc0c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "transactions",
      "item": [
        {
          "name": "Get order transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4a078bea-f9c1-4f67-8fbb-cc816e346342",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "05efcf54-0eb5-4e1b-a746-3a708f4d8b1c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"transactionID\", transactionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Capture a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "capture"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"custom_reference\": \"customRef123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ca3f0520-9690-447e-867c-a7d89eb51776",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Refund a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "refund"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"amount\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b66a03c8-bca1-496e-ada2-35c8a45baeed",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Cancel a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/cancel",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "cancel"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"reason\": \"requested_by_customer\",\n    \"options\": {}\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cece9d4a-4e49-4f8a-89bf-a3c7e5be9486",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationInfo",
      "item": [
        {
          "name": "Get all user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "70a3a3aa-c2a5-4d3b-bc16-831f3adf959e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a84953dd-bb8e-4f09-8228-cca5d5b81a44",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a87f2144-7ba2-41d7-9932-3e64dcd30e30",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationInfoId\", userAuthenticationInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe Updated\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d699a073-94c4-4e9a-9f9a-4b94bd1d6705",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "963e75e8-ed39-4637-98af-1110e69cc353",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationOidcProfileInfo",
      "item": [
        {
          "name": "Get all user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "99530518-0f73-4da7-8e2f-663aaa284de0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e79dc6e2-1820-4b4b-b21e-d761709edbb2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication OIDC profile info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject\",\n    \"issuer\": \"{{oidcProfileIssuer}}\",\n    \"oidc_profile_id\": \"{{oidcProfileId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1f02f4a1-8fc8-4b1b-86d7-b3183673f1f4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationOIDCProfileInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationOIDCProfileInfoId\", userAuthenticationOIDCProfileInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication OIDC profile info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject Updated\",\n    \"issuer\": \"{{oidcProfileIssuer}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7df0fea6-b44d-42ed-9863-04c327de06e7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication OIDC profile info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b2dde8c2-bb37-4be9-a429-f0c2184e79ec",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationPasswordProfiles",
      "item": [
        {
          "name": "Get User Authentication Password Profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8f7feaad-b8f4-4b4e-8067-b846d2b5fc50",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get User Authentication Password Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f1320724-e3cd-4c3d-8f08-d31a111748bc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create User Authentication Password Profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_password_profile_info\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6b1bc631-e4ac-4c37-9e01-824cb3f767b5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationPasswordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationPasswordProfileId\", userAuthenticationPasswordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Authentication Password Profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{userAuthenticationPasswordProfileId}}\",\n    \"type\": \"user_authentication_password_profile_info\",\n    \"username\": \"john.doe\",\n    \"password\": \"password.new\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ee66ce12-2632-4c06-b357-c19eb25b8c27",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete User Authentication Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4d62f402-5fcf-468d-970f-a56a3bc338e0",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variations",
      "item": [
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4e6eef69-0f33-45b4-ac09-d4b9701ee9c0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5f06ef5e-2609-4c12-9617-3ee827c54eb0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationId}}\",\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Color\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3a8a6cb4-7932-4a7b-8b53-db116192afd7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "af85cd63-2285-4ae1-9e30-98b9c2e24b05",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f0c064af-f017-4b6d-b8fd-59967fa15786",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Options for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bca1cf03-a8e8-4bbd-a852-9cf9de0a4878",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an Option for a Variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Small\",\n      \"description\": \"Products with a small size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3639dfd8-f01a-4363-9380-13c265961eba",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionId\", optionId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an Option for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e17d91a0-ce4b-4ef5-84c1-0bf6784b841d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an Option for a Variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionId}}\",\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Large\",\n      \"description\": \"Products with a large size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c265be39-d6e3-476f-a782-e712cd9e29cf",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an Option for a Variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8d348852-d291-4a38-877f-68262964ae88",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a Modifier for an Option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_prepend\",\n      \"value\": \"Child Product \"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0e5701ef-300d-4224-b25e-183549984683",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierId\", modifierId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all Modifiers for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7b4fae3c-0ecb-4911-b902-3b90ef945d89",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a Modifier for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0b8c15b9-8ee2-46c5-b0b5-e2abd188b307",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a Modifier for an Option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierId}}\",\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_append\",\n      \"value\": \" - A Child Product\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "19d07e67-dfd3-499a-8df8-3cd9ea4ccd34",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a Modifier for an Option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e1f03d0a-59cb-4b55-b38f-10597b350578",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variationsLegacy",
      "item": [
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3aba765a-6f5e-439f-a159-df9e68e5ed2e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)",
                  "d.each((item, index) => pm.environment.set(`variationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce33432f-6e81-4bc9-b8ba-5340e30e38de",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b27484bb-3745-4c08-a54a-950b4667f484",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationID}}\",\n    \"type\": \"product-variation\",\n    \"name\": \"Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5120aa54-e512-4305-8d46-cb7af1c63345",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7a11a37c-88d2-4f0a-a975-63527063f335",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all variation options",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "617e491a-2eb4-4428-8e7f-502dfbaec73f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)",
                  "d.each((item, index) => pm.environment.set(`optionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "65257d72-64a3-4d63-9cde-a97b40ed5074",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"name\": \"BLUE\",\n    \"description\": \"Our most popular color\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bfc16bfc-213f-4db6-9673-12bf232c9fe7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionID}}\",\n    \"type\": \"product-variation-option\",\n    \"name\": \"RED\",\n    \"description\": \"Reddish\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fbc407d3-6aa4-49bc-ac20-6f86b9c8a4f6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ae343ab1-7392-4fb5-8b90-98c38efd56cf",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product modifiers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6898029a-a05b-4645-b96f-8d924f89a424",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)",
                  "d.each((item, index) => pm.environment.set(`modifierId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product modifier",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "32791bd5-d389-42a3-9f73-96c914d6c97c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a product modifier",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Promotional product\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3f7a25c3-202d-4cac-baac-324d528701ad",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product modifier",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierID}}\",\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Updated Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3ffa9a7b-80fb-4cea-af3d-9a502a3718f3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product modifier",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9f9fe4e6-3fac-4659-8256-7d1147a3a123",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Build child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}/build",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2fdf1a81-b724-4d0e-8cf8-dacc9033504b",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    }
  ]
}