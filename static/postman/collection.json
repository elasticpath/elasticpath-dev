{
  "info": {
    "name": "EPCC - Sep 5, 2024",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "accountAddresses",
      "item": [
        {
          "name": "Get account addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "148aaeb7-4f74-4ebe-9f06-cbb03f0059cc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)",
                  "d.each((item, index) => pm.environment.set(`accountAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get account address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "76c14c45-0e51-451d-901d-682e063fca1f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "da977b5d-c34e-4d06-9460-f704e5ef37bf",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{accountAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1907eb4c-ac1c-4958-9c06-7dd81145f21f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "27edd045-572c-433a-8082-7e6e44d371a0",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "accounts",
      "item": [
        {
          "name": "Get account authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6b61558f-b4d8-4f4a-92ab-262566d92941",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "pm.environment.set(\"authenticationRealmId\", d.relationships.authentication_realm.data.id)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account authentication settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_authentication_settings\",\n    \"enable_self_signup\": true,\n    \"auto_create_account_for_account_members\": true,\n    \"account_member_self_management\": \"update_only\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c2453d23-6c5e-4f8a-a3e7-af5dab22270c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all accounts",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c09cfba8-0065-4cf9-8490-2bc56f4ebd53",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)",
                  "d.each((item, index) => pm.environment.set(`accountId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3032bba1-2a3d-497d-a769-d90793503e89",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse\",\n    \"legal_name\": \"Bluefuse Ltd.\",\n    \"registration_id\": \"{{$guid}}\",\n    \"external_ref\": \"Bluefuse Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "803e5caf-81d4-415f-888d-223bffdd08fc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a sub account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Canada\",\n    \"legal_name\": \"Bluefuse Canada\",\n    \"registration_id\": \"{{$guid}}\",\n    \"parent_id\": \"{{accountID}}\",\n    \"external_ref\": \"Bluefuse Canada Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "877e4833-be05-46d7-ab50-ce432146032e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Updated\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a15553c5-c067-46e4-81b5-e9efa2ab1b21",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an account",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ecdf0fe3-0b85-4367-b900-4d20a46278e7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members",
              "host": "{{baseUrl}}",
              "path": [
                "account-members"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "93d0f0bf-a8a1-46b9-88bb-64a7167ddf04",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMemberID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMemberID\", accountMemberID)",
                  "d.each((item, index) => pm.environment.set(`accountMemberId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all unassigned account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/unassigned-account-members",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "unassigned-account-members"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5903cd46-f4bf-4ce4-ac8a-30ca3cb08b17",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get an account member",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2ae9bdc4-4f87-4b6d-a034-06753977e966",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account memberships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "08374d40-3f3c-4cd5-ab7e-d8cb0f94b70b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all account memberships using Account Member Id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "55a7a261-697e-4d78-84f5-fbc7307ba9d3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account membership",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "40104eea-071e-4e22-9929-a85849618bf0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account membership",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership\",\n    \"account_member_id\": \"{{accountMemberID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "82393a99-f3aa-4575-9f1a-98047c2aa950",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete an account membership",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9708acf6-ee6a-4566-aee0-c505bf387633",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"auth_code\",\n    \"oauth_redirect_uri\": \"redirect_uri\",\n    \"oauth_code_verifier\": \"pkce_code_verifier\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "14cad63a-feed-4be2-8591-2698c17f2a1c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Username and Password",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"password\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ee2a241c-2b27-4db5-84c4-c9142f518959",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens with One-time Password Token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"passwordless\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"one_time_password_token\": \"abc123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0e259041-f68e-4c9a-b744-daeba92436b5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Self Signup",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"self_signup\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe@gmail.com\",\n    \"password\": \"password\",\n    \"name\": \"joe\",\n    \"email\": \"john.doe@gmail.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "83e6f583-85b8-401c-a2dd-d36bcb189b96",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Switch account tokens",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"account_management_authentication_token\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "429ccaec-023b-43a9-bbbd-53045fc22a65",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "authentication",
      "item": [
        {
          "name": "Get client credentials token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{clientSecret}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0c32c869-bc4a-4b58-8e1d-f2cc0bed409f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get implicit token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bf58af4b-78f1-400f-9c97-1baecf2558d4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "brandsLegacy",
      "item": [
        {
          "name": "Get brand attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ceb6b06d-dc5b-4a61-803a-64a1211bb17e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all brands",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "136203e1-aa9d-4491-ba88-238360329765",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)",
                  "d.each((item, index) => pm.environment.set(`brandId{index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single brand",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bd3d81f6-839b-49c2-be03-f23a169a9753",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a brand",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\",\n    \"slug\": \"lamprific\",\n    \"description\": \"Lamprific lamps\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c4c0cfcf-c4fc-4b32-a5fc-c0763f40c1cb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a brand",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{brandID}}\",\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "65145fec-3bdb-4fb4-80eb-2281fced10dd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a brand",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b9175ec1-98d3-4236-a1bd-3a3aeeca06d5",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAddresses",
      "item": [
        {
          "name": "Get customer addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "41660ed6-135c-4e2f-8be2-9da1a6da7449",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)",
                  "d.each((item, index) => pm.environment.set(`customerAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get customer address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "111cdc28-8c31-4f9a-9799-7fd9b8afb8a7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c5a72ea2-8cb3-465d-9d64-9d60975c0326",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{customerAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e3a9438a-24fb-47a1-89fa-57b40729d646",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c092d80e-2122-493e-8856-ec20e2b2966f",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "carts",
      "item": [
        {
          "name": "cart_management",
          "item": [
            {
              "name": "Create a custom cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c670f365-9ad7-4a45-8dbf-5c7c2eb68972",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a cart",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6c0cf07e-fb93-46af-adfd-40efd771d747",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c736f10e-d05a-4f05-80dd-18dae676bc46",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b2867ace-b134-460f-875b-4c03bc4e5440",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a promotion preview cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "08080703-4891-4f5a-89e9-dbf39eb19c5d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart to preview mode",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c738f1d2-b55a-4dd9-80d7-476c03e1d213",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart with custom attributes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"member_status\": {\n        \"type\": \"string\",\n        \"value\": \"gold\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "61eafbc3-b286-4216-a01c-a85301f8cce2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart with custom attributes",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"other_status\": {\n        \"type\": \"string\",\n        \"value\": \"silver\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3fcd974d-8da4-4c45-9f30-bb58618ead49",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customer_cart_associations",
          "item": [
            {
              "name": "Get customer carts",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3a25af8b-80f7-4b76-a715-e93094e2cfe1",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create customer cart association",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "58dbddd3-37cc-46e3-aa4a-0243ef03b785",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete customer cart association",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "52c9cd47-8339-4a08-af59-d8a19c9bd8d6",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_items",
          "item": [
            {
              "name": "Get cart items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9b031c0a-7ba8-4170-8de2-f66d60e38b18",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add product to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6885c665-c1ba-4763-8cf3-76c92885754c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add product to cart with shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1,\n    \"shipping_group_id\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "779bd1ef-01ba-4c60-bd6f-832ab99b471f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add custom item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_item\",\n    \"name\": \"My Custom Item\",\n    \"sku\": \"my-custom-item\",\n    \"description\": \"My first custom item!\",\n    \"quantity\": 1,\n    \"price\": {\n      \"amount\": 20000,\n      \"includes_tax\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c77d9c3c-de7f-4bed-9d32-04dcde042f77",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add a promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_item\",\n    \"code\": \"PROMO1\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f6e74973-c0d2-4384-b40c-beaab29c641d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion via promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/discounts/{{promoCode}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "discounts",
                    "{{promoCode}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d51bc7b5-9903-46da-808b-6516a344fdc8",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_item\",\n      \"name\": \"My Custom Item\",\n      \"sku\": \"my-custom-item\",\n      \"description\": \"My first custom item!\",\n      \"quantity\": 1,\n      \"price\": {\n        \"amount\": 20000,\n        \"includes_tax\": true\n      }\n    },\n    {\n      \"type\": \"cart_item\",\n      \"id\": \"{{productId1}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"cart_item\",\n      \"sku\": \"{{productSku2}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"promotion_item\",\n      \"code\": \"{{promoCode}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2d7e6843-5373-4098-9efb-7a21266c543f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Re-order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"order_items\",\n      \"order_id\": \"{{orderID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9471d9a7-d659-4182-a6be-3b700629b60f",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Cart merge",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"cart_items\",\n      \"cart_id\": \"{{cartID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "656d0956-0c99-40d9-a4be-fe36869fe2d6",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e7fefaf7-f8af-4076-9eaf-4c1902113c19",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"shippingGroupID\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6d1b39e9-b5b8-4569-8e9a-4944e32aa7b8",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk update items in cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"id\": \"{{cartItemId1}}\",\n      \"quantity\": 2\n    },\n    {\n      \"id\": \"{{cartItemId2}}\",\n      \"quantity\": 3\n    }\n  ],\n  \"options\": {\n    \"update_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f991563a-eed6-4405-bef6-35f9446983bf",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "40b73d05-4355-489a-9a7e-6dcebf752536",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete all cart items",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cfaea2e6-14f0-4785-afe1-1bbd71344fb0",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "tax_items",
          "item": [
            {
              "name": "Add tax item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"TAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e4840677-5504-4850-b2dc-f8ff3a3c0b34",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk add tax items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name1\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX01\",\n      \"rate\": 0.1,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name2\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX02\",\n      \"rate\": 0.2,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0cab75ad-b752-4067-8c2e-522d79f68567",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a tax item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"MYTAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "839f3822-dc3f-4f6f-baee-6fe542fde79d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a tax item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e2118173-fdf0-4f91-b95e-cd8ddbf7d27a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk delete tax items from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c9aea89a-7382-4f9b-98c6-c41ddb9779be",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_shipping_groups",
          "item": [
            {
              "name": "Get cart shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a9c5ecf0-761c-4686-b1a9-c0493eaff71b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single cart shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ac571fab-c5c5-466e-ab12-9cc094406ac1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_1234\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-04-25T00:00:00.000+00:00\",\n      \"end\": \"2023-04-29T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ed05ac05-2581-4666-b6ea-7a5bb99c9b71",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_5678\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-05-01T00:00:00.000+00:00\",\n      \"end\": \"2023-05-05T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "41f94e06-e922-4059-a9be-12239e000105",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "custom_discounts",
          "item": [
            {
              "name": "Add custom discount to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2b5a5344-6906-4f0d-a320-194ab6fb529d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d1d5f0da-c63c-4901-950e-5ccf9483408b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6797fd94-dd89-4477-9e16-a2af0512df8e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add custom discount to cart item",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9e229279-29da-4ec4-8713-d4c93cfff2a9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "de9c2a5f-ff26-4679-ac26-482d858837b5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7199625c-d48c-4af4-b9dc-bf89b7e91bea",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add custom discounts to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -1000,\n      \"description\": \"Custom discount description\",\n      \"discount_code\": \"cart-custom-promo-code\"\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"cart_item\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"custom=item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"custom_item\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "722b5b84-5bd1-4ac6-bbfa-c5dcb4d84d5f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk delete custom discounts from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "391edc9f-8471-43a3-bc63-30634dfda809",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_payment_intent",
          "item": [
            {
              "name": "Setup a Stripe Payment Intent for the cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"receipt_email\": \"your_receipt_email@email.com\",\n      \"automatic_payment_methods\": {\n        \"enabled\": true\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "03b698e8-568a-4762-a5d1-04327035abc7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Stripe Payment Intent for the cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments/{{paymentIntentId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments",
                    "{{paymentIntentId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "20326ea4-07cb-4432-9b57-a7cbb4d29f7c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "catalog",
      "item": [
        {
          "name": "Get shopper catalog",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog",
              "host": "{{authUrl}}",
              "path": [
                "catalog"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cb7b9267-161c-4157-8146-16a32eb1f6a5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ac532d54-e2f8-423e-9b1d-1dbde38e9e84",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c512ba9b-0d94-4bcf-aa48-6f17e90a3743",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "04adef93-b87d-47e4-baed-d4ba86fa04ac",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5b6255db-688f-4930-825e-89bd218b0805",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c1d1b637-0dbc-4a2e-844e-4878616c76a9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3e06f919-dc33-4db5-bcf3-d13544a6bf27",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "98647f62-8bd2-44e2-97a1-9719339953b4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a3e287b2-5422-470b-bfc7-25d96ea887b6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products/{{productId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b4fa9b8e-4a41-434a-9367-46a2b9ee494f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "991dad56-de91-452d-80ab-636b94e44a7d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "24c19ad3-25eb-4bde-9d59-7f0c0ec8e0d8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "catalogs",
      "item": [
        {
          "name": "catalog_configuration",
          "item": [
            {
              "name": "Get all catalogs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3cca15da-b2e4-4d90-990f-b45bb9affdd0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)",
                      "d.each((item, index) => pm.environment.set(`catalogId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get catalog by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d3dceef5-1fdf-4433-8ab7-8e6ecd88b20b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create catalog",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend brand games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "26adb6db-c53a-402c-95e9-99e93c5f08cb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update catalog",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogId}}\",\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend Games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f440053f-54c6-4bc8-acb9-951df5e239df",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8182c9e8-5129-4806-88e6-9e8614fcc677",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_rules",
          "item": [
            {
              "name": "Get all rules",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cce1f9bf-d3c4-467b-98f5-26813a6ecaa0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)",
                      "d.each((item, index) => pm.environment.set(`catalogRuleId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get rule by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5cbd9ec5-c725-452b-a1aa-1e793310f71b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Channel",
                    "value": "web",
                    "disabled": true
                  },
                  {
                    "key": "EP-Context-Tag",
                    "value": "vip",
                    "disabled": true
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"Preferred Customers\",\n      \"description\": \"Preferred Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e5b49078-5f47-4e3c-99e6-131607e9c4a4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update rule",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogRuleId}}\",\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"VIP Customers\",\n      \"description\": \"VIP Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a7aa10bd-9ed6-48c6-b28d-4b763d0b9022",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete rule",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "af0e0760-5a1f-4338-8135-090563ee0190",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_releases",
          "item": [
            {
              "name": "Get all releases",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c85694f3-4bcc-47c9-be25-0f7f96e0ace5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)",
                      "d.each((item, index) => pm.environment.set(`releaseId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get release by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "28c7ef00-1a8e-46c7-a4a4-aa98578cdb81",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create release (publish)",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "975efd5c-06e5-4666-8726-aa05101960e8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete all releases of a catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cbbe80f5-364d-4c6c-b74e-b37f76d6765a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a release of catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b56e8174-0cee-42bd-b2bb-168945bd7aeb",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete latest release of a catalog (rollback)",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a0fec610-cdf7-4386-8729-872957288531",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_by_latest_release",
          "item": [
            {
              "name": "Get latest release",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3e00b5ee-6fbe-4d36-9825-9c68f8b4812d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all hierarchies",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9d06bb7d-4cb5-4412-b485-f4f922b4bf8f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"hierarchyId\", hierarchyId)",
                      "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9f5b62c1-90f4-4294-8c8f-810a27d5a2c2",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "35052710-347a-4074-8594-080fe48625a7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3e2fb626-984b-4c32-9ce5-d090843daad1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "39dd6a86-a24c-4412-bace-b525d100bd0f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get node by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "31c3732b-ae82-4c23-b02a-a1038567c03b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get node's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5e017632-26f4-46eb-989c-709a13514c4e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cb87f54a-ff54-4c51-b73f-3f89191639bd",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get product by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products/{{productId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products",
                    "{{productId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "adf71b19-cd16-447a-8ed1-fe1b7a6b5a6c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a hierarchy's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "601fa302-9862-4510-9a1d-43e128291560",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a node's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f74fd214-39d9-4882-bd2e-7793067f6c99",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productIdpricebookId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productIdpricebookId\", productIdpricebookId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "categoriesLegacy",
      "item": [
        {
          "name": "Get category attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9e9f7ccb-c5cf-4989-bceb-032dd74f87c0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e1e8ed1f-8b63-42ac-8ead-b9701744c3e4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)",
                  "d.each((item, index) => pm.environment.set(`categoryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single category",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "83c5cc03-9ba0-41e4-bbe6-7aaeced6343c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get categories tree",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/tree",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "tree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0c83d149-a65b-42d0-9620-cbc220d5c07b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a category",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\",\n    \"slug\": \"desk-lamps\",\n    \"description\": \"For desk lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "852fe02a-f2bb-4552-9191-990f2a1bbf0b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a category",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{categoryID}}\",\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "468e8252-cd11-4938-b97e-1022533d0f88",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a category",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ca462c0b-8d44-4e3e-9032-b3b731002df6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create parent category relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/parent",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"id\": \"{{categoryID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "14838667-187d-42d6-906b-414c7a3fdc98",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create child category relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/children",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    },\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4771bd14-3370-4515-83fe-87435c316c8c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "checkout",
      "item": [
        {
          "name": "Checkout as customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"id\": \"{{customerID}}\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d3bb18c8-408f-4e4b-bab4-1bdd4d6d747f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as guest",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"email\": \"andy@example.com\",\n      \"name\": \"Andy Dwyer\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d383fc19-f53c-4130-a71e-3e436b7155a5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"account\": {\n      \"id\": \"{{accountID}}\",\n      \"member_id\": \"{{accountMemberID}}\"\n    },\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "517257b9-b6a2-4487-8d9f-7d14c7efeb45",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout with account management authentication token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5fee05ad-1308-48da-bb29-eab58e540d49",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "collectionsLegacy",
      "item": [
        {
          "name": "Get collection attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0331769b-8ea6-4588-8903-53ff314fa4dc",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all collections",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b42c8a94-f7a3-462e-969a-0bc629999e8f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)",
                  "d.each((item, index) => pm.environment.set(`collectionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single collection",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a8a7f179-4b0a-4ae2-bfc6-35ab654d83d4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a collection",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\",\n    \"slug\": \"fancy-lamps\",\n    \"description\": \"For fancy lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bc4bcece-b07c-43b7-9424-5fc5916bcf9a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a collection",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{collectionID}}\",\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "955c1cce-b653-45bd-8341-f3dd01266a79",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a collection",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3194d32a-f92b-41d1-8344-2f107d63b4f9",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "commerceExtensions",
      "item": [
        {
          "name": "customApis",
          "item": [
            {
              "name": "Get all Custom APIs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "facd3ac8-6e60-420d-817b-bbfc61df4e9b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "85f0df61-aec3-472e-9602-365827e81322",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"Description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"api_type\": \"wishlist_ext\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "176e934c-41c6-4d94-aaab-e943a95ccd6e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiId\", customApiId)",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)",
                      "const customApiType = Array.isArray(d) ? d[0].api_type : d.api_type",
                      "pm.environment.set(\"customApiType\", customApiType)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"updated description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b393a015-28fc-46b5-8d00-1af3a6ed3824",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "24a4d471-54a3-49a6-b18b-4e75c2b4e1a1",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customFields",
          "item": [
            {
              "name": "Get all Custom Fields",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ba26aed9-c7d1-4831-99a0-87a475227a61",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom Field",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "74964d5c-8d8d-4f1a-973b-3d0e480a0f98",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom Field",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Name\",\n    \"description\": \"Name of wishlist.\",\n    \"slug\": \"name\",\n    \"field_type\": \"string\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 16\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "16fc6593-dc41-4ab1-a29c-c1aa0a0bf714",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customFieldId\", customFieldId)",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom Field",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Longer Name\",\n    \"description\": \"Longer name of wishlist.\",\n    \"slug\": \"longer-name\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 32\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4cbdf47d-6826-4b32-853a-d04fed9a7320",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom Field",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cdb2008e-38af-4e6c-aeba-1302d34bdfa8",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customApiEntries",
          "item": [
            {
              "name": "Get all Custom API Entries",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "578038d7-c3d5-4c45-9477-cc16f2ac78a3",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API Entry",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "db1b20be-7f92-42f4-803c-90f203e9365b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API Entry",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fe3f37a8-7bed-4b11-aa4e-af0fe651f7ab",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiEntryId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiEntryId\", customApiEntryId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API Entry",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Updated Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a2bd8c13-03e9-4c33-8b3b-e5d8ccf34556",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API Entry",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ca7541bc-3a14-4e11-9ca8-bfbe6ca39fd5",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "currencies",
      "item": [
        {
          "name": "Get currency attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "97bcfcae-9a8c-4323-ac94-47197288d2c1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all currencies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fd394a07-3fb0-4d3c-835a-4a98442d7288",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const currencyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"currencyID\", currencyID)",
                  "d.each((item, index) => pm.environment.set(`currencyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a currency",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86e2b53a-d95c-41c8-a26b-07a32247065c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a currency",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"currency\",\n    \"code\": \"GBP\",\n    \"exchange_rate\": 1,\n    \"format\": \"£{price}\",\n    \"decimal_point\": \".\",\n    \"thousand_separator\": \",\",\n    \"decimal_places\": 2,\n    \"default\": true,\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d9eb1917-fe6f-4311-aba7-78d576236f39",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a currency",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"default\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1d2f71ba-2af3-47f4-afad-6710e0084db7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a currency",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "041f615f-511d-46ac-88ac-1d523c9b5120",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAuthenticationSettings",
      "item": [
        {
          "name": "Get customer authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/customer-authentication/",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "customer-authentication",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3a161f0f-e8d6-4d36-9d7e-049b55e6a335",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customers",
      "item": [
        {
          "name": "Get customer attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1ebef634-45b6-4f50-911d-c7511ec00be2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all customers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6a1dbf20-a177-4cdc-8d19-8068c6bad2e0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)",
                  "d.each((item, index) => pm.environment.set(`customerId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a customer",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c9ce2f6a-d7b0-4d85-abf8-e2fbd7083900",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\",\n    \"email\": \"ron@example.com\",\n    \"external_ref\": \"abc123\",\n    \"password\": \"mysecretpassword\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7908719a-c9e6-40a5-a54b-b89b5757489e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a customer",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cd524bbd-5240-4ecb-b69a-eccf04d977e1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a customer",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "476f36fc-68b9-45a0-a4b9-92dae8438a86",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate customer token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"email\": \"ron@example.com\",\n    \"password\": \"mysecretpassword\",\n    \"authentication_mechanism\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ff6d40c3-3ac4-45bc-ab19-ad42d9d918d7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate customer token with OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"c2490f06-6d8e-4927-99aa-4bf02b419e96\",\n    \"oauth_redirect_uri\": \"https://example-store.com\",\n    \"oauth_code_verifier\": \"0E934PurR8ExVg6Pj7T4kQewxKzWSfSFG5d15FGfww8\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4204309b-509a-4890-830e-09bb5eff50fa",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "files",
      "item": [
        {
          "name": "Get file attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ba698c29-ef8c-45eb-be69-4b204bd2e354",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all files",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6c82c601-a747-4281-b9f9-c886ed10ea09",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a file",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "90563027-0eeb-4fee-9726-d3aa4acedd46",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a file",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "file_location",
                  "value": "",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "public",
                  "value": "",
                  "type": "text",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0691c656-7cf0-4f2f-8515-36583a5ae01a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a file",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3c0fce79-6f68-4bea-ad2f-b566f3c71c22",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "flows",
      "item": [
        {
          "name": "Get all flows",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d923801d-91c2-43a0-b330-166b1a0e7afa",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)",
                  "d.each((item, index) => pm.environment.set(`flowId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ad128312-1584-4b11-821f-03e0e293db61",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a flow",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"flow\",\n    \"name\": \"Products\",\n    \"slug\": \"products\",\n    \"description\": \"Extends the default product object\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ddc04e39-6775-4f4d-9601-427e1a9b22c9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a flow",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{flowID}}\",\n    \"type\": \"flow\",\n    \"name\": \"FlowUpdated\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "33ad9fe0-2127-4c6e-a571-9cd0e43aa262",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a flow",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ed1308fa-ba43-4255-993d-72b493547f49",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all fields",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fe32771f-4038-47f1-8175-51801bea92e3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all fields on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e6c8448d-caa0-4fc2-9079-56f797a0c47a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single field",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b98d192e-fc9c-4a03-8306-48904d0f3b21",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a field",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"name\": \"Product Rating\",\n    \"slug\": \"product-rating\",\n    \"field_type\": \"integer\",\n    \"validation_rules\": [\n      {\n        \"type\": \"between\",\n        \"options\": {\n          \"from\": 1,\n          \"to\": 5\n        }\n      }\n    ],\n    \"description\": \"Average rating as given by our users\",\n    \"required\": false,\n    \"default\": 0,\n    \"enabled\": true,\n    \"order\": 1,\n    \"relationships\": {\n      \"flow\": {\n        \"data\": {\n          \"type\": \"flow\",\n          \"id\": \"{{flowID}}\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "04b63211-3135-4ae3-94e5-e72a1c0198ba",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a field",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"id\": \"{{fieldID}}\",\n    \"field_type\": \"integer\",\n    \"slug\": \"product-rating\",\n    \"name\": \"Product Rating\",\n    \"description\": \"Average rating as given by our users\",\n    \"required\": true,\n    \"default\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "778028f3-ade3-410d-8f82-b87cc1510f7c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a field",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6a036c77-5eb0-45f4-9ce1-1030e135bec7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an entry",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"FIELD_SLUG\": \"a value\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86bbee13-0916-4a2e-8ebe-ec5114c860dc",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single entry",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "518df048-192d-40d8-a548-cab34a6a516a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"id\": \"{{entryID}}\",\n    \"FIELD1_SLUG\": \"value1\",\n    \"FIELD2_SLUG\": \"value2\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2bd70273-8b47-45eb-aa8a-9acbe4d51a27",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4aa799fc-5bea-4a4e-aa9d-68b88b5d38c0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all entries on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f2e7b952-d94e-4937-97c2-ed34f9efb12b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)",
                  "d.each((item, index) => pm.environment.set(`entryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create an entry relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{fieldSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{fieldSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    },\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f241eac9-226f-40b5-97e3-45d419262d4d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry relationship",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a33781a1-6a75-4feb-9c94-7ea86c0600cb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "69da1236-5257-4af0-9a1e-205a68c5b6e1",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "gateways",
      "item": [
        {
          "name": "Get all gateways",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways",
              "host": "{{baseUrl}}",
              "path": [
                "gateways"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "afda0035-8195-4680-bced-e4f1824f8d2b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const gatewaySlug = Array.isArray(d) ? d[0].slug : d.slug",
                  "pm.environment.set(\"gatewaySlug\", gatewaySlug)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a gateway",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways/{{gatewaySlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "{{gatewaySlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ba1849b2-a78d-4f6d-8726-3c98347555e3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Manual gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/manual",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "manual"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "12030a71-8720-4d6c-a589-e6b438687bb8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "622a02c9-295a-46e6-9723-e05ab58b2610",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1cd64c86-b256-40d4-9af4-54a9e633e731",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Intents gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_payment_intents",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_payment_intents"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "507546ff-63a7-4532-a377-058acadb57ce",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Connect gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_connect",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_connect"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c91fb1e9-9934-45dc-898f-644bec430d1c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "930c655b-de77-4c77-b0db-d53bf4205e9a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update PayPal Express Checkout gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/paypal_express_checkout",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "paypal_express_checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"payer_id\": \"{{merchant account id}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e25f468f-cb09-460d-bb0c-e915a0a4ffdd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update EP payments Stripe",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/elastic_path_payments_stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "elastic_path_payments_stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "34f60b3c-98e9-42c0-9d40-cadc7ca647fe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Authorize Net gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/authorize_net",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "authorize_net"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"login\": \"{{loginID}}\",\n    \"password\": \"{{password}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dfbd01b2-7cd4-4bd4-890f-6f14cae4cfbc",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "hierarchies",
      "item": [
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f80f8854-27d2-4f4c-aa45-4c6ac094aeef",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4c7c30ef-298d-48d3-9be1-cd717cf7aee5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a hierarchy",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games\",\n      \"description\": \"All the games we sell\",\n      \"slug\": \"games\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "db2a426d-79c4-4353-aa3e-ae1585a952db",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a hierarchy",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{hierarchyId}}\",\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games for Kids\",\n      \"description\": \"All the games we sell for kids\",\n      \"slug\": \"games-kids\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "09c80802-796f-4bb2-b406-a6cd25bd084f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a hierarchy",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "604b1aab-9a4a-4067-876f-9e7ebbea95be",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c4e14cc0-a4ca-440f-8215-1121e5a0c85f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "integrations",
      "item": [
        {
          "name": "Get integration attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b22b7037-03c6-4879-a8e7-a84b78927151",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all integrations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ec0bb557-6dc7-4efa-bcbd-cbb54da475af",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)",
                  "d.each((item, index) => pm.environment.set(`integrationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an integration",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5fbc24e6-39db-4e3f-9eeb-03822019bbfe",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an integration",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"integration\",\n    \"name\": \"Order notification\",\n    \"description\": \"Send an order notification via email with discount code.\",\n    \"enabled\": true,\n    \"observes\": [\n      \"order.created\"\n    ],\n    \"integration_type\": \"webhook\",\n    \"configuration\": {\n      \"url\": \"https://yourwebsite.com/order-created-notification\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9e13424c-4284-4d0a-be49-92985a81c2d4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an integration",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{integrationID}}\",\n    \"type\": \"integration\",\n    \"observes\": [\n      \"order.created\"\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "17f3e516-b6bc-4f63-acf4-3a755da7c304",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an integration",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "68f4f879-8b30-45e0-9ddd-ac3d4a20a298",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7fe12060-56c3-4e52-8b4e-1efa82e54742",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ae5bdfb5-dcaf-43ea-a114-9cb35c0167c1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a6863ac5-e6e1-47ba-8fc0-32119d6789ec",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationJobId\", integrationJobId)",
                  "d.each((item, index) => pm.environment.set(`integrationJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get integration job logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs/{{integrationJobId}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs",
                "{{integrationJobId}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "26844f75-2407-4f08-a077-44ecb6fb82ee",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "inventories",
      "item": [
        {
          "name": "Get all inventories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories",
              "host": "{{baseUrl}}",
              "path": [
                "inventories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5b359234-cb90-4c7a-ba5b-26a2faf93bec",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product inventory",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bf0158b0-ad28-4042-85bc-b6d9012d7fc6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product stock transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "89096fc5-3696-4302-9f6e-26767d02403e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product stock transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0ecdd4ee-0dc1-4137-a023-9e1eb0c68a96",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a stock transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"stock-transaction\",\n    \"action\": \"increment\",\n    \"quantity\": 3\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "12dd0e24-d33b-4b50-af95-5b4a64c02017",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create inventory",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"quantity\": 1000\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2427f14c-4434-4b7c-adb1-4f954dcda454",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete inventory",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ae62c0d5-f411-40f7-acfe-80c0e99113f2",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "jobs",
      "item": [
        {
          "name": "Get all jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2799589f-3339-423f-824b-3b4cbb5d3963",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const jobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"jobId\", jobId)",
                  "d.each((item, index) => pm.environment.set(`jobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a job",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": "{{baseUrl}}",
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e89359bf-798f-4ebe-bd56-4a6a5be605b1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a job",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"job\",\n    \"job_type\": \"order_export\",\n    \"filter\": \"gt(created_at,2020-04-28):lt(created_at,2020-04-30):eq(payment,paid)\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6cae3fb0-231a-40da-9131-55079055e276",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "keys",
      "item": [
        {
          "name": "Get all keys",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bfde0470-ea90-4e4c-b913-ed4ec793ba66",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a key",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"Pawnee City Parks and Recreation Department\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "56f6287e-d291-4a8b-987c-669a97246ec7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const keyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"keyID\", keyID)",
                  "const clientID = Array.isArray(d) ? d[0].client_id : d.client_id",
                  "pm.environment.set(\"clientID\", clientID)",
                  "const clientSecret = Array.isArray(d) ? d[0].client_secret : d.client_secret",
                  "pm.environment.set(\"clientSecret\", clientSecret)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a key",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bb2dcb22-113b-48f2-b552-e106b649aae5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a key",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ed3b56bf-4b98-4a3f-b1e1-af69cdb1b639",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a key",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"New Key Name\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a87ade38-7bea-4d20-b6c3-c1199af79498",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "merchantRealmMappings",
      "item": [
        {
          "name": "Get merchant realm mapping",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2418d11e-d18e-4823-a547-fa556cf7f0d4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantMappingId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"merchantMappingId\", merchantMappingId)",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant realm mapping by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e22cf2a5-e53b-4e88-a452-f00a5173d1a1",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update merchant realm mapping's store prefix",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"merchant-realm-mappings\",\n    \"prefix\": \"myNewStorePrefix\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f3a5b3c9-98e1-484d-8084-2a0cb0e6d685",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant oauth2 profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}//merchant-oauth2-profiles",
              "host": "{{authUrl}}",
              "path": [
                "",
                "merchant-oauth2-profiles"
              ],
              "query": [
                {
                  "key": "prefix",
                  "value": "{{merchantStorePrefix}}",
                  "disabled": false
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ]
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1c685b36-1ce8-4139-ac40-f682e5e365aa",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "nodes",
      "item": [
        {
          "name": "Get a node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f4690fc6-85e6-436a-a6e8-24ab094cfd17",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a node",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Accessories\",\n      \"description\": \"Game accessories\",\n      \"slug\": \"accessories\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7e65f5b1-d065-4f00-b260-c1bb31097aa0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a node under parent",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming Keyboards\",\n      \"slug\": \"gaming-keyboards\"\n    },\n    \"relationships\": {\n      \"parent\": {\n        \"data\": {\n          \"id\": \"{{nodeId}}\",\n          \"type\": \"node\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c98ae237-e421-42bb-9aaf-708c2aa3f99e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{nodeId}}\",\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming keyboards for the dedicated player\",\n      \"slug\": \"gaming-keyboards\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f75c0e2a-fd30-4043-8fa8-6e7a5639bee0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "036a29bb-27f6-4334-ac01-683d76775ec6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c0d366aa-609e-4bbb-b82c-426124f9e43a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create child node relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"node\",\n      \"id\": \"{{nodeId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a2d09474-1c77-46f0-a3d4-155ec4630aa5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node's parent",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"id\": \"{{nodeId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7249004e-8266-42eb-93e4-be49ee4eab6f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node's parent relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8008c6eb-893b-471d-9b2c-9195b011859f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "36eef54a-d9d1-490b-8c35-aced51ae0a26",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create relationships to products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8c1146f5-82da-4104-9c0d-b35b55605e9f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete relationships to products",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7b8c11ff-26c0-4877-82db-2827b996b02b",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oidcProfiles",
      "item": [
        {
          "name": "Get OIDC profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7eb684a4-3960-4169-bfaa-a25c3a6c2cb1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get OIDC profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c0fde3d7-29ac-45d2-9314-bf20e4ed7903",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create OIDC profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "32f6ff32-950d-421f-aa37-db5d4626e415",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const oidcProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"oidcProfileId\", oidcProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update OIDC profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b26b1cc1-7291-4eed-8401-643289e5f817",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete OIDC profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "274a802a-ac3a-43f9-8fee-0f5f58cf1336",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oneTimePasswordTokenRequest",
      "item": [
        {
          "name": "Create One-time Password Token Request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}/one-time-password-token-request",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}",
                "one-time-password-token-request"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"one_time_password_token_request\",\n    \"username\": \"john.doe\",\n    \"purpose\": \"reset_password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "64af286a-53f1-41f5-b635-dab0f7652bff",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "orders",
      "item": [
        {
          "name": "orders",
          "item": [
            {
              "name": "Get order attributes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/attributes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "attributes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a65ea6e5-e407-42b7-bb4f-045793b42c85",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2bb0c2d5-ad35-4428-834c-3d954a49c704",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get an order",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "edf6f316-e0fa-47c1-a541-9fbe0f099a28",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping_address\": {\n      \"first_name\": \"Ron\"\n    },\n    \"external_ref\": \"external_order_123\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4fc01db7-15bd-4b02-a845-00d440198e82",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Fulfill an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping\": \"fulfilled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b1cfcc38-3b47-4a4c-97d7-1a7e52edf7b3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"status\": \"cancelled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "95b66212-52b8-4a9a-b756-a69d226acff6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get customer orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "21dd9800-c480-41c7-a2e8-7765474775f6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get order items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "be52e518-ad11-40a7-9c9d-78e04cd08cad",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize orders",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"order_ids\": [\n      \"{{orderID}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ce7657b9-e207-42f6-94f9-74c62d180426",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm an order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"metadata\": {\n        \"order_id\": \"{{orderID}}\",\n        \"statement_descriptor\": \"Confirmed intent\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2ab3d192-71b0-40d9-b024-d1596ce1355f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "order_shipping_groups",
          "item": [
            {
              "name": "Get order shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a4d2924b-f9b2-4006-87ac-a4c21f500e57",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single order shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups/{{orderShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups",
                    "{{orderShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9572d935-9293-4308-b827-9b021dd0687b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "passwordProfiles",
      "item": [
        {
          "name": "Get Password profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c6cbf334-be77-458a-b84b-ecf1a88b2bc5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get Password profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b07f09b9-5023-43d6-908b-542089b156f7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create Password profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"email\",\n    \"type\": \"password_profile\",\n    \"name\": \"password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "69f92b10-75e2-424b-bc49-c1ec2ed76477",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const passwordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"passwordProfileId\", passwordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Password profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"any\",\n    \"type\": \"password_profile\",\n    \"name\": \"updated password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "15aa467e-50c7-4ca0-8e15-88ef7aac1d59",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e8397b23-3631-4488-af30-50180fdc06f5",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "payments",
      "item": [
        {
          "name": "adyen",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"authorize\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"shopper reference\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "eb38c5f5-e018-4912-ab90-e5c0dbcdc6c9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"purchase\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"<shopper reference associated with token>\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "506616a3-3db4-43b0-ad9f-4d2556f49fcb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "authorize_net",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"authorize\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "edffc28f-e459-4cbd-9834-da38b7e66d9c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"purchase\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d34c985b-e42c-4fc3-8e53-f0ed200fd786",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "braintree",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4a34a1e9-a667-421d-b2cc-69ab18f02666",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f539a33f-9c42-49bc-98ce-280879cd9e1c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f683c2d2-cfba-4ee2-98ff-d85280b244fc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "733f7f84-ce41-4e88-a4c3-6d3c4dec8584",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "18c3786e-e26a-43f3-8590-37c12d77d252",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a1088d22-c942-4159-8222-6cb45db40396",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "card_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2b2e7a31-da73-47b4-a6a5-fd66991d780e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e9c01554-7514-46f6-85c3-5a77bd88e888",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cybersource",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"authorize\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "99a776aa-6183-4192-8ad0-4adbee41d4fe",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"purchase\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "83e662ba-2c75-45cb-bf9b-d7e53300bac1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "manual",
          "item": [
            {
              "name": "Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"authorize\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ffefb68c-9ab2-431c-8f2e-8ee664a202ce",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"purchase\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ca46d3dd-2a03-4805-afe4-c8aea723380f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "paypal_express_checkout",
          "item": [
            {
              "name": "Setup Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "86250373-a355-4d30-93c3-085f7c1b475e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Setup Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"purchase\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "52f5bf42-f09c-4828-941e-d036d47a7971",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ce723f35-0eda-4293-a050-24a48d587046",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Capture Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "capture"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"soft_descriptor\": \"Test soft descriptor\",\n      \"note_to_payer\": \"Capture note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cebcaa94-6286-4397-acb2-bfa422a69d97",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Refund a payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "refund"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"amount\": 1,\n    \"options\": {\n      \"note_to_payer\": \"Refund note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3fe5a413-1c7c-4323-b4b3-004db44e474f",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "695090c6-4243-4d76-a513-9ac21c15599c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f4ed3798-aad4-4299-b992-1342a4ed7ed9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_intents",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f70eaebc-e5d5-4bc2-9134-bdfd5151cca1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bca79f46-4fc0-4254-9c52-57ddb08953d1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ee1d5885-8f33-40d1-8068-906cbc2cdc73",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "601249eb-b3df-4899-aa1a-d1f1ec17ff5f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4b1a64e0-1e1a-47af-bfc7-e8e92ae7b5a4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "452e4b94-804e-4e83-a180-c0778b8d5a5e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d7ed210c-5d99-4a29-bc73-3bc10b5a2e0f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1900b2b1-d62d-4f5d-b5e8-2cc5391a5b47",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "ep_payments_stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a6af808a-295b-449d-9826-7e5f85c7fc7b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_threeDSecureRequired\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\",\n      \"confirm\": true,\n      \"execute_threed\": true,\n      \"confirmation_method\": \"manual\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ac76f6a2-84bf-47b7-bea7-7bb7f0121cc4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "07ad4b16-7680-436d-b7ea-0242fb18320e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6b73af16-50de-4195-ad86-dffe9c7e3df3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "af630b16-8d82-4896-a4ac-66e87ff60093",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1a47d849-8837-44a6-bba7-508e878ebfe1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d3fdc4f0-3c4c-4231-a434-087e3e952a1e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "personalData",
      "item": [
        {
          "name": "Get related data entries",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "97e63bc5-f012-41f9-9b75-5a069aa0f5d8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c17026cf-5065-4a1c-aa91-36aba0c1af49",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create erasure request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"resource_id\": \"{{customerID}}\",\n    \"resource_type\": \"customer\",\n    \"type\": \"erasure_request\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ef488d2a-e758-4c3f-9400-738d54b1c9b2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const erasureRequestID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"erasureRequestID\", erasureRequestID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get erasure request",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests/{erasureRequestID}",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests",
                "{erasureRequestID}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "39302e11-5aee-4ae6-9934-5d11ef58fcce",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get erasure requests",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a7db9c8e-e4b6-4e4a-a809-841ff56bf3e2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update TTL",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"time_to_live\",\n    \"days\": 20\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1655965f-d8c5-4cc7-9ea7-88c79afcef93",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get TTL",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0773b00a-9f3b-4d5e-9d5e-61db0eb9e44c",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pimJobs",
      "item": [
        {
          "name": "Get all Jobs for PIM",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fad71789-645d-4ec8-9e1e-a77da42668b2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)",
                  "d.each((item, index) => pm.environment.set(`pimJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a Job for PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ee70b6e5-5e35-4bc9-b1e1-e9a5ae0ef607",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Errors for a Job in PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}/errors",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}",
                "errors"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "873092f4-0ce3-4914-8024-a5ff3d55ad46",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pricebooks",
      "item": [
        {
          "name": "Get all pricebooks",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "95922db3-739e-4542-a861-b343d109a011",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)",
                  "d.each((item, index) => pm.environment.set(`pricebookId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a pricebook",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e17d4fec-da0e-4fab-ba1e-77f9c5f1ed27",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a pricebook",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Standard Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "75d17d67-64b9-48a9-8428-9b30b644300d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a pricebook",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{pricebookId}}\",\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Seasonal Sales Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "008f7b84-8fe2-4149-85fa-ed0fb0c641ad",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a pricebook",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d97a8749-c8e6-452e-9684-1cfbc17c25d3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product prices",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "97b4ba73-6d10-42bc-a257-05914b21b5f9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`priceId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product price by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a2e217d0-21ae-429e-9269-8a13d87d0f44",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a price",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 100,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0f11bddb-d836-4d5c-b141-1f77edbd925e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product price",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{priceId}}\",\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 300,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "131caba5-4345-4da4-a91a-f174f5d172f3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product price",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "50d2ad88-2228-4eb2-8f5c-d383115dca0a",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "products",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "88818d13-bbb6-4138-87cb-31fc4261fc89",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "84aa4aff-6593-4d8b-be4b-1f61107ee42f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"1234-5678-ABCD\",\n      \"upc_ean\": \"123456\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c44dfaf0-4fbe-4b46-b64b-1923067f4464",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"id\": \"{{productId}}\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand top of the line gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"9934-5678-ABCD\",\n      \"upc_ean\": \"125656\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f0527d16-498e-4ffb-afd1-4ee0a0d787b9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f7012c1a-33ce-4457-b4cb-34a21e02976c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a bundle",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"2 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 2\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1c9118ba-d9a6-4126-a714-2ca12fadcc01",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a bundle",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{bundleId}}\",\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"5 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 5\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f8fe2eb9-244c-4301-9eb9-e09e86b41b4a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a bundle",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d9f89a7e-6bef-4a3d-ba79-2a3ab896fe10",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fc4c3e15-0ee4-436d-96f3-0b94b082e632",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product's file relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "aad5a0f2-4f3c-4b57-9313-ce4fb2ce6a08",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product file relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-1\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-2\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cc146a19-84b8-4f64-ba0a-387c831cf1d2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Replace a products's file relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d4710fe8-1e7e-4f17-9e95-1bdf732839b2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's file relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "68c32703-ffcd-4e77-9565-400461152204",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's variation relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "83c443da-9580-45d9-8a48-6f37959ee888",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product variation relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ac0891e7-3677-4dba-82c5-34f806841577",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Replace a products's variations relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "21bbb546-ea70-422f-bac4-7251f928e1ac",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's variation relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "28c48ffc-cbf4-4ac2-85e3-abf449d4b7d7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Builds child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/build",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "addc3a9f-a50d-4db3-b6a1-2a0251b7bc38",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "productsLegacy",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5536dc9e-eb70-49b5-b180-7b6e5bfdff61",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b6e674ed-bf1c-4267-9bf8-9161616787c6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\",\n    \"slug\": \"desk-lamp\",\n    \"sku\": \"desk-lamp-001\",\n    \"manage_stock\": false,\n    \"description\": \"A cool desk lamp\",\n    \"status\": \"live\",\n    \"commodity_type\": \"physical\",\n    \"price\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"GBP\",\n        \"includes_tax\": true\n      }\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9baec354-7a92-4a76-9da8-dd3d64c8520a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f13f5003-e9d0-48be-b807-5d7ae4f2eb96",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9f630793-af50-4cbd-8342-6771ebd3dcb8",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "promotions",
      "item": [
        {
          "name": "promotions_management",
          "item": [
            {
              "name": "Get all promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cc23808c-4348-4cb3-81c6-96d88b53cfe9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)",
                      "d.each((item, index) => pm.environment.set(`promotionId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7982d06f-a4f6-4ed8-a227-34090339bed3",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a promotion history",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/history",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "history"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5ea1080b-8b46-462c-b6db-721b4943ef10",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a cart fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"$10 off\",\n    \"description\": \"$10 off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"fixed_discount\",\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"amount\": 1000\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}, {{nodeId2}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue1}}\"\n                    ]\n                  }\n                }\n              ]\n            },\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId3}}, {{nodeId4}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue2}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6a5d3b39-4499-4e52-97d5-2c193a90504b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"10% off\",\n    \"description\": \"10% off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"percent_discount\",\n    \"max_discount_value\": [\n      {\n        \"amount\": 1000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"percentage\": 10\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ccd8ba68-521c-4f53-8cfa-998498853e60",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for Y discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for Y promotion example\",\n    \"description\": \"2 for 1 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_y\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"y\": 1,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue2}}\"\n          }\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a3dceba6-87e3-48c2-8862-90a6d6c1578b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for amount discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for amount promotion example\",\n    \"description\": \"2 for 100 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_amount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 10000,\n          \"currency\": \"USD\"\n        }\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1425d1d1-5a34-450a-87eb-72fc7d763525",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a fixed bundle discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Fixed bundle promotion example\",\n    \"description\": \"SKU1 and SKU2 for $150\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"bundle_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 15000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "70a29c58-8009-4846-9639-ee76bf9e8bae",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item fixed discount promotion example\",\n    \"description\": \"$50 for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"amount\": 5000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId1}}\",\n          \"{{nodeId2}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0f7c39fe-50d4-4be2-b4d5-cf709fee345f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item percent discount promotion example\",\n    \"description\": \"50% off for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_percent_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"percent\": 50,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId3}}\",\n          \"{{nodeId4}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "93202b94-a576-4ef9-98fb-fa101324c119",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a free gift promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Buy SKU1 and SKU2 to get free gift\",\n    \"description\": \"SKU1 and SKU2 for free gift\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"promotion_type\": \"bundle_gift\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"gifts\": [\n        \"gift\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"auto_add_free_gift\": false\n    },\n    \"start\": \"2020-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0a113375-37e4-4a66-bd4c-a83bf5f0c1c0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"id\": \"{{promotionID}}\",\n    \"name\": \"Promotion name\",\n    \"description\": \"description\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bc24f5d9-8e42-4795-ab23-08145a4f26a7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2a593e81-05d5-4d53-9174-6cdf8a94be10",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_codes",
          "item": [
            {
              "name": "Get promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fbb5af9c-9dd7-46bc-814d-cbd02e8f0337",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      },\n      {\n        \"code\": \"5uses\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_item\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f31b143f-454c-458d-9e1d-81fc191b6bd0",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2bd632b1-65ae-4d85-b8d4-59bf7ca4c24c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6c7ed53a-98d7-4897-8b07-2c123723d8ad",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes generation job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_generate\",\n    \"name\": \"job\",\n    \"parameters\": {\n      \"number_of_codes\": 1,\n      \"max_uses_per_code\": 1,\n      \"consume_unit\": \"per_cart\",\n      \"code_prefix\": \"promo-\",\n      \"code_length\": 8\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "10afe257-1cdf-4b02-bfa1-37b6c33eb772",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create export promotion codes job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_export\",\n    \"name\": \"export promo codes job\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2a2db9eb-78b8-4411-be42-756abe23ef41",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel a promotion job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{promotionJobID}}/cancel",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{promotionJobID}}",
                    "cancel"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "95acf029-5fa9-4864-abfb-586e39360a1b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion jobs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ac5dc512-c140-481c-96ee-a28411185b88",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion code export file",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{jobID}}/file",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{jobID}}",
                    "file"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ad6a71e4-6b1e-46da-9682-5686f28b5a96",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_usages",
          "item": [
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Public-Search-Type",
                    "value": "cm_search",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1f4ca307-c781-4bb4-978c-6d9d814c377e",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_management",
          "item": [
            {
              "name": "Update a rule promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion update\",\n    \"description\": \"$10 off your order update!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2023-01-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    },\n    \"priority\": 100,\n    \"stackable\": true\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "29e51503-2a11-4ebb-8b61-3ace4820dc66",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all rule promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7e9ffaea-31bb-4674-8a9c-e20e364bdf32",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a rule promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "aa7b3b25-9480-4643-8b21-05370db6fb14",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e4d7cc30-7a0e-43d0-b0c2-5e3c8972b21a",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_rule_promotions",
          "item": [
            {
              "name": "Create a cart fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion\",\n    \"description\": \"$10 off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5ebc25a4-6faf-43a0-be46-ad642798dfe9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"10 percent off cart promotion\",\n    \"description\": \"10 percent off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            10\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5dfdeff6-4cef-42d6-928c-42fac40e3a24",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with max_discount limitation rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart promotion max discount $50\",\n    \"description\": \"50 percent off your order (up to max $50) when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_discount\": 5000\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a058918b-9281-471d-abe7-149eebd30f0d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with custom attribute rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart with custom attribute\",\n    \"description\": \"50 percent off your order when cart member is gold\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_custom_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"member_status\",\n          \"string\",\n          \"gold\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2889f30d-5e9e-4e35-b29e-d66f4eded376",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with sub conditions",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart excluding exclusive item\",\n    \"description\": \"50 percent off your order excluding exclusive item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d5b46fbc-78ce-42c5-8bc1-f17deac0eceb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "item_rule_promotions",
          "item": [
            {
              "name": "Create an item fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy item get $10 off\",\n    \"description\": \"Buy item get $10 off\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "20d3eb0b-c75e-4bf1-969b-7885cb5f25b4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item discount with condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get Y 50%\",\n    \"description\": \"Buy X get Y 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "98744e47-5756-4eef-9c05-2dd9783ce511",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitations and exclusions rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50% max $10 max 2 items 2 quantities from category\",\n    \"description\": \"Items from category 50% off max $10 off 2 cheapest items with max quantity of 2 excluding one item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_quantity\": 2,\n            \"max_discount\": 1000,\n            \"items\": {\n              \"max_items\": 2,\n              \"price_strategy\": \"cheapest\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "46081690-849b-4f49-bbcc-320529d7e2f7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitation and condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get one Y for free\",\n    \"description\": \"Buy X get ONLY one Y for free\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            100\n          ],\n          \"limitations\": {\n            \"max_quantity\": 1\n          },\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0d0345f3-6537-41c9-bc58-db3696876ae9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a mixed of Cart and Item percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"description\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        },\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d98559a7-81ff-4c5f-b663-9a491c71a59f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item fixed price discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy 2 items for $100\",\n    \"description\": \"Buy 2 items for $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed_price\",\n            2,\n            10000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9a717efc-dfdb-4cbc-ad0a-1dc5fa4c9c58",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item attribute rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items with item attribute discount\",\n    \"description\": \"All items with attribute brand EP get 20% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"products(product_template)\",\n          \"brand\",\n          \"string\",\n          \"EP\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "89f037f1-7842-4480-8bb1-e7e7d3733aa9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with sub condition",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items discount for a category excluding items with attribute\",\n    \"description\": \"50% item discount excluding items with attribute when eligible items exceed $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_attribute\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"products(product_template)\",\n              \"sales\",\n              \"string\",\n              \"sale2024\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ],\n            \"children\": [\n              {\n                \"strategy\": \"item_attribute\",\n                \"operator\": \"nin\",\n                \"args\": [\n                  \"products(product_template)\",\n                  \"sales\",\n                  \"string\",\n                  \"sale2024\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "58e41a2e-ce98-479c-a3dc-5efa65906955",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item_sku OR item_product_id",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"description\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"or\",\n            \"children\": [\n              {\n                \"strategy\": \"item_sku\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productSku}}\"\n                ]\n              },\n              {\n                \"strategy\": \"item_product_id\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productId}}\"\n                ]\n              }\n            ]\n          },\n          {\n            \"strategy\": \"item_quantity\",\n            \"operator\": \"gte\",\n            \"args\": [\n              1\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ea473bde-1f48-4164-91e5-ca4b288ba73f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotion_codes",
          "item": [
            {
              "name": "Get rule promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "dacf3a5f-2f71-41db-bcef-d99702d646a5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\",\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"summer2024_limited\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"fall2024_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_application\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_checkout\",\n        \"user\": \"vip_shopper@email.com\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8f6e3ab7-2388-4fc4-a8d4-d7c8f9ef8a17",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0d14e897-7b34-4a42-b461-2df7daf398b5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple rule promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\"\n      },\n      {\n        \"code\": \"summer2024_limited\"\n      },\n      {\n        \"code\": \"fall2024_limited\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e7434b7c-89c0-4f17-8bff-c664514bf3dd",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_usages",
          "item": [
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bafd0d6e-f262-4b9e-91fe-c9f3945fed8b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages by code",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "97398d91-5ac5-47cd-933d-1e02df565f2f",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize Rule Promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID1}}\",\n      \"{{usageID2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "54bc771d-9e5a-491a-a2b6-b8672ffde7df",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "realms",
      "item": [
        {
          "name": "Get authentication realms",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0d84b0ad-cb5c-4ee5-b162-dfab1f4ec936",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get authentication realm",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "39514ecc-ecea-48a8-ae66-a25abfdb9751",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update authentication realms",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"authentication-realm\",\n    \"name\": \"Test Authentication Realm\",\n    \"redirect_uris\": [\n      \"https://example.com\"\n    ],\n    \"relationships\": {\n      \"origin\": {\n        \"data\": {\n          \"id\": \"{{storeId}}\",\n          \"type\": \"customer-authentication-settings\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "300ed947-d390-4f96-8a0c-9215a8c10e96",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "settings",
      "item": [
        {
          "name": "Get settings attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bd3d1de9-1716-4ee8-a610-06843ac64fcf",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5358bb4b-4867-4ef7-8c04-b85f664ee13f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"calculation_method\": \"line\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d9d14c69-6307-4465-a1e4-b1114b676b6f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete settings",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "50df992f-57f2-4070-9d54-53a1aa8053b7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get cart settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1d51e419-8553-48f8-9c66-6c141c550dfa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update cart settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"cart_expiry_days\": 7,\n    \"discounts\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b9e1c522-235d-4c17-8a0b-b1d20650a8d7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get account membership settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ee6898cb-9cc8-4728-93d0-a998ab96156e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update account membership settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership_setting\",\n    \"membership_limit\": 13\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f85a0655-fe28-4e04-be77-363d474284d4",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "transactions",
      "item": [
        {
          "name": "Get order transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "04e584a4-0d84-4305-bc0a-80f1d65cca92",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "13c0ac31-c44a-4056-825a-5da1a3e23d18",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"transactionID\", transactionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Capture a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "capture"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"custom_reference\": \"customRef123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "89a3c719-e2af-4ea1-801f-3947d16b7ccd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Refund a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "refund"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"amount\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0ec2070f-34d7-4e0c-ae66-c67da5b00da1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Cancel a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/cancel",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "cancel"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"reason\": \"requested_by_customer\",\n    \"options\": {}\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2fc43574-bd96-44a6-ac98-0a916a383655",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationInfo",
      "item": [
        {
          "name": "Get all user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "44c7be08-b734-42a9-a0fd-60472a86bfb2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cf3c597a-67cf-4de6-9eb1-1dcfb9bf4ea2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "949a4d54-db3c-4b37-8f48-e62d3828ad77",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationInfoId\", userAuthenticationInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe Updated\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5699cff0-7928-4266-a010-7f8b258abbf5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d2129790-5d1e-49b1-a9e5-ae9ed3ff0b8f",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationOidcProfileInfo",
      "item": [
        {
          "name": "Get all user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "32c36fc0-2c2f-4f3e-9147-0fea7a20cdec",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f8aa00f0-e010-4c4a-afa6-fe66af88fa98",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication OIDC profile info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject\",\n    \"issuer\": \"{{oidcProfileIssuer}}\",\n    \"oidc_profile_id\": \"{{oidcProfileId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "313e137f-7faf-4cd9-bfc3-4f3f0dccf600",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationOIDCProfileInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationOIDCProfileInfoId\", userAuthenticationOIDCProfileInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication OIDC profile info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject Updated\",\n    \"issuer\": \"{{oidcProfileIssuer}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b05b053f-4299-4fd4-b5a7-7b182b319b43",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication OIDC profile info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d3c9fff6-e274-451b-a15a-b4005ca1ccac",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationPasswordProfiles",
      "item": [
        {
          "name": "Get User Authentication Password Profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "08491f1e-08ee-44c9-ae5e-a9b2a9def43a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get User Authentication Password Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ebbee698-4fb1-4c90-9819-7f0fd5ad3ad3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create User Authentication Password Profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_password_profile_info\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7a2fe65a-5cda-4524-a2ab-0b5e77381ef2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationPasswordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationPasswordProfileId\", userAuthenticationPasswordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Authentication Password Profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{userAuthenticationPasswordProfileId}}\",\n    \"type\": \"user_authentication_password_profile_info\",\n    \"username\": \"john.doe\",\n    \"password\": \"password.new\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "25f76505-46da-41c4-b911-23aebf1aa3b8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete User Authentication Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ad56c670-f93b-4e57-a246-e2e47143f480",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variations",
      "item": [
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "45dbe7e7-5351-4e5b-a0b5-0ec82817b93e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c896e4af-c869-4e0f-a1b8-5972cbf50ddb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationId}}\",\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Color\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b81a6022-163f-4b2a-95f9-14295c63576c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "90576f96-a302-4973-8b1a-e6af1fe4f32c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cb144ae2-6da4-482f-a3a0-6932c3a291a7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Options for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "84dd50f9-8f3e-4a71-96f5-ebf57df2420c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an Option for a Variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Small\",\n      \"description\": \"Products with a small size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2f6e76c4-6670-4884-9095-c03ecde828c7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionId\", optionId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an Option for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0b8aabaf-4414-415c-ae3c-0a8860902998",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an Option for a Variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionId}}\",\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Large\",\n      \"description\": \"Products with a large size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7eba8216-52d3-46c9-aaf4-721d16783250",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an Option for a Variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4bcfefee-0ad7-41a0-98c3-1afe1b8c48d4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a Modifier for an Option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_prepend\",\n      \"value\": \"Child Product \"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e10232d1-c4ad-4f01-a2c2-f8efcc92804d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierId\", modifierId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all Modifiers for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8fd0ad9d-4483-40cf-98be-e8035af6cfb8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a Modifier for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bc0b956d-0813-409b-ae42-758ab9eb0556",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a Modifier for an Option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierId}}\",\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_append\",\n      \"value\": \" - A Child Product\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0b533f6f-cd63-4eb2-9ad7-0577661cd973",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a Modifier for an Option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f99b8f46-8c1e-466b-b9c1-6224534d1663",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variationsLegacy",
      "item": [
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cef18a52-9eca-481c-ba21-b6b7d931c8ed",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)",
                  "d.each((item, index) => pm.environment.set(`variationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "21aaad17-8456-4376-8a56-1500509fd657",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f9a4ab2b-07f5-4b4d-ab5b-d966646ee48f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationID}}\",\n    \"type\": \"product-variation\",\n    \"name\": \"Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bd702880-c0ce-4bfd-bf60-98d7634a2971",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "48c5847b-6832-433a-b2d4-509877ed56fb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all variation options",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d827c9ac-19ec-4bc4-a98e-c6e4dcdad567",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)",
                  "d.each((item, index) => pm.environment.set(`optionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d4b5d3e4-2d54-4f2b-9339-e8613b93606a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"name\": \"BLUE\",\n    \"description\": \"Our most popular color\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ce3af0ee-f1a3-406e-a67b-a9093e8c1e5c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionID}}\",\n    \"type\": \"product-variation-option\",\n    \"name\": \"RED\",\n    \"description\": \"Reddish\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a1607e4f-5504-4a3c-abee-490e27d59e4a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "558c6241-8122-4f7a-a9cb-ae5eae0f3306",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product modifiers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "77df01c2-60a6-4444-a078-472cc09a33ad",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)",
                  "d.each((item, index) => pm.environment.set(`modifierId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product modifier",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7eea13f0-106e-45a0-8522-815ddfd3d392",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a product modifier",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Promotional product\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2314095a-da0c-4aaf-a160-797b3075992a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product modifier",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierID}}\",\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Updated Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "aa8597b7-553c-4318-b736-f2e0c827e26c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product modifier",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0d32f13a-6904-4178-84ab-69c8f4b80222",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Build child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}/build",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "59b6980a-c74b-48a4-9bfc-d73156d61a32",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    }
  ]
}